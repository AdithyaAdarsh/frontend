{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../../errors/AuthSdkError.js';\nimport { isIDToken, isAccessToken, isRefreshToken } from '../types/Token.js';\nfunction validateToken(token, type) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError('Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property');\n  }\n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  }\n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}\nexport { validateToken };","map":{"version":3,"names":["validateToken","token","type","isIDToken","isAccessToken","isRefreshToken","AuthSdkError"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/util/validateToken.ts"],"sourcesContent":["/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../oidc/types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}"],"mappings":";;;;;;;;;;;;;;AAKgB,SAAAA,aAAaA,CAACC,KAAY,EAAEC,IAAgB;EAC1D,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,IAAI,CAACG,aAAa,CAACH,KAAK,CAAC,IAAI,CAACI,cAAc,CAACJ,KAAK,CAAC,EAAE;IACxE,MAAM,IAAIK,YAAY,CACpB,+GAA+G,CAChH;EACF;EAED,IAAIJ,IAAI,KAAK,aAAa,IAAI,CAACE,aAAa,CAACH,KAAK,CAAC,EAAE;IACnD,MAAM,IAAIK,YAAY,CAAC,qBAAqB,CAAC;EAC9C;EACD,IAAIJ,IAAI,KAAK,SAAS,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE;IAC3C,MAAM,IAAIK,YAAY,CAAC,iBAAiB,CAAC;EAC1C;EAED,IAAIJ,IAAI,KAAK,cAAc,IAAI,CAACG,cAAc,CAACJ,KAAK,CAAC,EAAE;IACrD,MAAM,IAAIK,YAAY,CAAC,sBAAsB,CAAC;EAC/C;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}