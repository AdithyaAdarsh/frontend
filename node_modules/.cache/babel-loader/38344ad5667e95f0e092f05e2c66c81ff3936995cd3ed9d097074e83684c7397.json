{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { getWithoutPrompt } from './getWithoutPrompt.js';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh.js';\nimport { getDefaultTokenParams } from './util/defaultTokenParams.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport './types/Token.js';\nfunction renewTokens(_x, _x2) {\n  return _renewTokens.apply(this, arguments);\n}\nfunction _renewTokens() {\n  _renewTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, options) {\n    var _a, tokens, accessToken, idToken, scopes, authorizeUrl, userinfoUrl, issuer, _getDefaultTokenParam, responseType;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          tokens = (_a = options === null || options === void 0 ? void 0 : options.tokens) !== null && _a !== void 0 ? _a : sdk.tokenManager.getTokensSync();\n          if (!tokens.refreshToken) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt(\"return\", renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken));\n        case 3:\n          if (!(!tokens.accessToken && !tokens.idToken)) {\n            _context.next = 5;\n            break;\n          }\n          throw new AuthSdkError('renewTokens() was called but there is no existing token');\n        case 5:\n          accessToken = tokens.accessToken || {};\n          idToken = tokens.idToken || {};\n          scopes = accessToken.scopes || idToken.scopes;\n          if (scopes) {\n            _context.next = 10;\n            break;\n          }\n          throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n        case 10:\n          authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n          if (authorizeUrl) {\n            _context.next = 13;\n            break;\n          }\n          throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n        case 13:\n          userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n          issuer = idToken.issuer || sdk.options.issuer;\n          options = Object.assign({\n            scopes: scopes,\n            authorizeUrl: authorizeUrl,\n            userinfoUrl: userinfoUrl,\n            issuer: issuer\n          }, options);\n          if (sdk.options.pkce) {\n            options.responseType = 'code';\n          } else {\n            _getDefaultTokenParam = getDefaultTokenParams(sdk), responseType = _getDefaultTokenParam.responseType;\n            options.responseType = responseType;\n          }\n          return _context.abrupt(\"return\", getWithoutPrompt(sdk, options).then(function (res) {\n            return res.tokens;\n          }));\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _renewTokens.apply(this, arguments);\n}\nexport { renewTokens };","map":{"version":3,"names":["renewTokens","_x","_x2","_renewTokens","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sdk","options","_a","tokens","accessToken","idToken","scopes","authorizeUrl","userinfoUrl","issuer","_getDefaultTokenParam","responseType","wrap","_callee$","_context","prev","next","tokenManager","getTokensSync","refreshToken","abrupt","renewTokensWithRefresh","AuthSdkError","Object","assign","pkce","getDefaultTokenParams","getWithoutPrompt","then","res","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/renewTokens.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { RenewTokensParams, Tokens } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: RenewTokensParams): Promise<Tokens> {\n  const tokens = options?.tokens ?? sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;SAoBsBA,WAAWA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA1B,SAAAC,QAA2BC,GAAG,EAAEC,OAA2B;IAAA,IAAAC,EAAA,EAAAC,MAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAC,WAAA,EAAAC,MAAA,EAAAC,qBAAA,EAAAC,YAAA;IAAA,OAAAd,mBAAA,GAAAe,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC1Db,MAAM,GAAG,CAAAD,EAAA,GAAAD,OAAO,aAAPA,OAAO,KAAP,kBAAAA,OAAO,CAAEE,MAAM,cAAAD,EAAA,cAAAA,EAAA,GAAIF,GAAG,CAACiB,YAAY,CAACC,aAAa,EAAE;UAAA,KAC9Df,MAAM,CAACgB,YAAY;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAM,MAAA,WACdC,sBAAsB,CAACrB,GAAG,EAAEC,OAAO,IAAI,EAAE,EAAEE,MAAM,CAACgB,YAAY,CAAC;QAAA;UAAA,MAGpE,CAAChB,MAAM,CAACC,WAAW,IAAI,CAACD,MAAM,CAACE,OAAO;YAAAS,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAClC,IAAIM,YAAY,CAAC,yDAAyD,CAAC;QAAA;UAG7ElB,WAAW,GAAGD,MAAM,CAACC,WAAW,IAAI,EAAE;UACtCC,OAAO,GAAGF,MAAM,CAACE,OAAO,IAAI,EAAE;UAC9BC,MAAM,GAAGF,WAAW,CAACE,MAAM,IAAID,OAAO,CAACC,MAAM;UAAA,IAC9CA,MAAM;YAAAQ,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACH,IAAIM,YAAY,CAAC,oDAAoD,CAAC;QAAA;UAExEf,YAAY,GAAGH,WAAW,CAACG,YAAY,IAAIF,OAAO,CAACE,YAAY;UAAA,IAChEA,YAAY;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACT,IAAIM,YAAY,CAAC,0DAA0D,CAAC;QAAA;UAE9Ed,WAAW,GAAGJ,WAAW,CAACI,WAAW,IAAIR,GAAG,CAACC,OAAO,CAACO,WAAW;UAChEC,MAAM,GAAGJ,OAAO,CAACI,MAAM,IAAIT,GAAG,CAACC,OAAO,CAACQ,MAAM;UAGnDR,OAAO,GAAGsB,MAAM,CAACC,MAAM,CAAC;YACtBlB,MAAM,EAANA,MAAM;YACNC,YAAY,EAAZA,YAAY;YACZC,WAAW,EAAXA,WAAW;YACXC,MAAM,EAANA;UACD,GAAER,OAAO,CAAC;UAEX,IAAID,GAAG,CAACC,OAAO,CAACwB,IAAI,EAAE;YACpBxB,OAAO,CAACU,YAAY,GAAG,MAAM;UAC9B,OAAM;YAAAD,qBAAA,GACoBgB,qBAAqB,CAAC1B,GAAG,CAAC,EAA3CW,YAAY,GAAAD,qBAAA,CAAZC,YAAY;YACpBV,OAAO,CAACU,YAAY,GAAGA,YAAY;UACpC;UAAA,OAAAG,QAAA,CAAAM,MAAA,WAEMO,gBAAgB,CAAC3B,GAAG,EAAEC,OAAO,CAAC,CAClC2B,IAAI,CAAC,UAAAC,GAAG;YAAA,OAAIA,GAAG,CAAC1B,MAAM;UAAA,EAAC;QAAA;QAAA;UAAA,OAAAW,QAAA,CAAAgB,IAAA;MAAA;IAAA,GAAA/B,OAAA;EAAA,CAE5B;EAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}