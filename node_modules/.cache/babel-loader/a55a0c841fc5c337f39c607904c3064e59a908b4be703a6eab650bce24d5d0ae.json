{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { btoa as b } from '../crypto/browser.js';\nimport { toQueryString } from '../util/url.js';\nimport { post } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { getOAuthUrls } from './util/oauth.js';\nfunction revokeToken(_x, _x2) {\n  return _revokeToken.apply(this, arguments);\n}\nfunction _revokeToken() {\n  _revokeToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, token) {\n    var accessToken, refreshToken, clientId, clientSecret, revokeUrl, args, creds;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          accessToken = '';\n          refreshToken = '';\n          if (token) {\n            accessToken = token.accessToken;\n            refreshToken = token.refreshToken;\n          }\n          if (!(!accessToken && !refreshToken)) {\n            _context.next = 5;\n            break;\n          }\n          throw new AuthSdkError('A valid access or refresh token object is required');\n        case 5:\n          clientId = sdk.options.clientId;\n          clientSecret = sdk.options.clientSecret;\n          if (clientId) {\n            _context.next = 9;\n            break;\n          }\n          throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n        case 9:\n          revokeUrl = getOAuthUrls(sdk).revokeUrl;\n          args = toQueryString({\n            token_type_hint: refreshToken ? 'refresh_token' : 'access_token',\n            token: refreshToken || accessToken\n          }).slice(1);\n          creds = clientSecret ? b(\"\".concat(clientId, \":\").concat(clientSecret)) : b(clientId);\n          return _context.abrupt(\"return\", post(sdk, revokeUrl, args, {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              'Authorization': 'Basic ' + creds\n            }\n          }));\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _revokeToken.apply(this, arguments);\n}\nexport { revokeToken };","map":{"version":3,"names":["revokeToken","_x","_x2","_revokeToken","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sdk","token","accessToken","refreshToken","clientId","clientSecret","revokeUrl","args","creds","wrap","_callee$","_context","prev","next","AuthSdkError","options","getOAuthUrls","toQueryString","token_type_hint","slice","b","concat","abrupt","post","headers","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/revokeToken.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;SA6BsBA,WAAWA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA1B,SAAAC,QAA2BC,GAA2B,EAAEC,KAAqB;IAAA,IAAAC,WAAA,EAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,IAAA,EAAAC,KAAA;IAAA,OAAAX,mBAAA,GAAAY,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC9EX,WAAW,GAAG,EAAE;UAChBC,YAAY,GAAG,EAAE;UACrB,IAAIF,KAAK,EAAE;YACPC,WAAW,GAAID,KAAqB,CAACC,WAAW;YAChDC,YAAY,GAAIF,KAAsB,CAACE,YAAY;UACtD;UAAA,MACE,CAACD,WAAW,IAAI,CAACC,YAAY;YAAAQ,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACxB,IAAIC,YAAY,CAAC,oDAAoD,CAAC;QAAA;UAE1EV,QAAQ,GAAGJ,GAAG,CAACe,OAAO,CAACX,QAAQ;UAC/BC,YAAY,GAAGL,GAAG,CAACe,OAAO,CAACV,YAAY;UAAA,IACtCD,QAAQ;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACL,IAAIC,YAAY,CAAC,4EAA4E,CAAC;QAAA;UAGlGR,SAAS,GAAGU,YAAY,CAAChB,GAAG,CAAC,CAACM,SAAU;UACxCC,IAAI,GAAGU,aAAa,CAAC;YAEvBC,eAAe,EAAEf,YAAY,GAAG,eAAe,GAAG,cAAc;YAChEF,KAAK,EAAEE,YAAY,IAAID;UACxB,EAAC,CAACiB,KAAK,CAAC,CAAC,CAAC;UACPX,KAAK,GAAGH,YAAY,GAAGe,CAAI,IAAAC,MAAA,CAAIjB,QAAQ,OAAAiB,MAAA,CAAIhB,YAAY,CAAE,CAAC,GAAGe,CAAI,CAAChB,QAAQ,CAAC;UAAA,OAAAO,QAAA,CAAAW,MAAA,WACxEC,IAAI,CAACvB,GAAG,EAAEM,SAAS,EAAEC,IAAI,EAAE;YAChCiB,OAAO,EAAE;cACP,cAAc,EAAE,mCAAmC;cACnD,eAAe,EAAE,QAAQ,GAAGhB;YAC7B;UACF,EAAC;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAA1B,OAAA;EAAA,CACJ;EAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}