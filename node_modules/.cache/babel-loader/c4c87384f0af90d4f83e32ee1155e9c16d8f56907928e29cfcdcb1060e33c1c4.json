{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport ProfileTransaction from './transactions/ProfileTransaction.js';\nimport ProfileSchemaTransaction from './transactions/ProfileSchemaTransaction.js';\nimport EmailTransaction from './transactions/EmailTransaction.js';\nimport EmailStatusTransaction from './transactions/EmailStatusTransaction.js';\nimport EmailChallengeTransaction from './transactions/EmailChallengeTransaction.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport PasswordTransaction from './transactions/PasswordTransaction.js';\nimport BaseTransaction from './transactions/Base.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nfunction sendRequest(_x, _x2) {\n  return _sendRequest.apply(this, arguments);\n}\nfunction _sendRequest() {\n  _sendRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(oktaAuth, options) {\n    var _oktaAuth$tokenManage, accessTokenObj, accessToken, issuer, url, method, payload, requestUrl, res, map, TransactionClass;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _oktaAuth$tokenManage = oktaAuth.tokenManager.getTokensSync(), accessTokenObj = _oktaAuth$tokenManage.accessToken;\n          accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n          issuer = oktaAuth.getIssuerOrigin();\n          url = options.url, method = options.method, payload = options.payload;\n          requestUrl = url.startsWith(issuer) ? url : \"\".concat(issuer).concat(url);\n          if (accessToken) {\n            _context3.next = 7;\n            break;\n          }\n          throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n        case 7:\n          _context3.next = 9;\n          return httpRequest(oktaAuth, Object.assign({\n            headers: {\n              'Accept': '*/*;okta-version=1.0.0'\n            },\n            accessToken: accessToken,\n            url: requestUrl,\n            method: method\n          }, payload && {\n            args: payload\n          }));\n        case 9:\n          res = _context3.sent;\n          map = {\n            EmailTransaction: EmailTransaction,\n            EmailStatusTransaction: EmailStatusTransaction,\n            EmailChallengeTransaction: EmailChallengeTransaction,\n            ProfileTransaction: ProfileTransaction,\n            ProfileSchemaTransaction: ProfileSchemaTransaction,\n            PhoneTransaction: PhoneTransaction,\n            PasswordTransaction: PasswordTransaction\n          };\n          TransactionClass = map[options.transactionClassName] || BaseTransaction;\n          if (!Array.isArray(res)) {\n            _context3.next = 14;\n            break;\n          }\n          return _context3.abrupt(\"return\", res.map(function (item) {\n            return new TransactionClass(oktaAuth, {\n              res: item,\n              accessToken: accessToken\n            });\n          }));\n        case 14:\n          return _context3.abrupt(\"return\", new TransactionClass(oktaAuth, {\n            res: res,\n            accessToken: accessToken\n          }));\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _sendRequest.apply(this, arguments);\n}\nfunction generateRequestFnFromLinks(_ref) {\n  var oktaAuth = _ref.oktaAuth,\n    accessToken = _ref.accessToken,\n    methodName = _ref.methodName,\n    links = _ref.links,\n    transactionClassName = _ref.transactionClassName;\n  var _loop = function _loop() {\n    var method = _arr[_i];\n    if (method.toLowerCase() === methodName) {\n      var _link = links.self;\n      return {\n        v: function () {\n          var _v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", sendRequest(oktaAuth, {\n                    accessToken: accessToken,\n                    url: _link.href,\n                    method: method,\n                    payload: payload,\n                    transactionClassName: transactionClassName\n                  }));\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          function v(_x3) {\n            return _v.apply(this, arguments);\n          }\n          return v;\n        }()\n      };\n    }\n  };\n  for (var _i = 0, _arr = ['GET', 'POST', 'PUT', 'DELETE']; _i < _arr.length; _i++) {\n    var _ret = _loop();\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n  var link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(\"No link is found with methodName: \".concat(methodName));\n  }\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", sendRequest(oktaAuth, {\n              accessToken: accessToken,\n              url: link.href,\n              method: link.hints.allow[0],\n              payload: payload,\n              transactionClassName: transactionClassName\n            }));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport { generateRequestFnFromLinks, sendRequest };","map":{"version":3,"names":["sendRequest","_x","_x2","_sendRequest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","oktaAuth","options","_oktaAuth$tokenManage","accessTokenObj","accessToken","issuer","url","method","payload","requestUrl","res","map","TransactionClass","wrap","_callee3$","_context3","prev","next","tokenManager","getTokensSync","getIssuerOrigin","startsWith","concat","AuthSdkError","httpRequest","Object","assign","headers","args","sent","EmailTransaction","EmailStatusTransaction","EmailChallengeTransaction","ProfileTransaction","ProfileSchemaTransaction","PhoneTransaction","PasswordTransaction","transactionClassName","BaseTransaction","Array","isArray","abrupt","item","stop","generateRequestFnFromLinks","_ref","methodName","links","_loop","_arr","_i","toLowerCase","link","self","v","_v","_callee","_callee$","_context","href","_x3","length","_ret","_ref2","_callee2","_callee2$","_context2","hints","allow","_x4"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/request.ts"],"sourcesContent":["import { \n  BaseTransaction,\n  EmailTransaction,\n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PhoneTransaction,\n  PasswordTransaction\n} from './transactions';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\n\nexport type TransactionLink = {\n  href: string;\n  hints?: {\n    allow?: string[];\n  };\n}\n\ntype TransactionLinks = {\n  self: TransactionLink;\n  [property: string]: TransactionLink;\n}\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n  transactionClassName?: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<T extends BaseTransaction> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions\n): Promise<T | T[]> {\n  const { \n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n  \n  const accessToken = options.accessToken || accessTokenObj?.accessToken;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!accessToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n  \n  const res = await httpRequest(oktaAuth, {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    accessToken,\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  });\n\n  const map = {\n    EmailTransaction,\n    EmailStatusTransaction,\n    EmailChallengeTransaction,\n    ProfileTransaction,\n    ProfileSchemaTransaction,\n    PhoneTransaction,\n    PasswordTransaction\n  };\n  const TransactionClass = map[options.transactionClassName!] || BaseTransaction;\n\n  if (Array.isArray(res)) {\n    return res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  }\n\n  return new TransactionClass(oktaAuth, { \n    res, \n    accessToken\n  });\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string;\n  methodName: string;\n  links: TransactionLinks;\n  transactionClassName?: string;\n}\n\ntype IRequestFnFromLinks = <T extends BaseTransaction>(payload?) => Promise<T | T[]>;\n\nexport function generateRequestFnFromLinks ({\n  oktaAuth, \n  accessToken,\n  methodName,\n  links,\n  transactionClassName\n}: GenerateRequestFnFromLinksOptions): IRequestFnFromLinks {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n        transactionClassName\n      }));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n    transactionClassName\n  }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}