{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nclass RedirectIdp extends Remediator {\n  canRemediate() {\n    return false;\n  }\n  getNextStep() {\n    const {\n      name,\n      type,\n      idp,\n      href\n    } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n}\nRedirectIdp.remediationName = 'redirect-idp';\nexport { RedirectIdp };","map":{"version":3,"names":["RedirectIdp","Remediator","canRemediate","getNextStep","name","type","idp","href","remediation","remediationName"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/RedirectIdp.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;AAeM,MAAOA,WAAY,SAAQC,UAAU;EAGzCC,YAAYA,CAAA;IACV,OAAO,KAAK;EACb;EAEDC,WAAWA,CAAA;IACT,MAAM;MAAEC,IAAI;MAAEC,IAAI;MAAEC,GAAG;MAAEC;IAAM,IAAG,IAAI,CAACC,WAAW;IAClD,OAAO;MACLJ,IAAI;MACJC,IAAI;MACJC,GAAG;MACHC;KACD;EACF;;AAdMP,WAAe,CAAAS,eAAA,GAAG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}