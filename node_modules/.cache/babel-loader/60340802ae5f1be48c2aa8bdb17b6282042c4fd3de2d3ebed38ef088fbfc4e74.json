{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { isRefreshToken } from '../oidc/types/Token.js';\nimport { EVENT_EXPIRED } from '../oidc/types/TokenManager.js';\nimport { isBrowser } from '../features.js';\nvar AutoRenewService = /*#__PURE__*/function () {\n  function AutoRenewService(tokenManager) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, AutoRenewService);\n    this.started = false;\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  _createClass(AutoRenewService, [{\n    key: \"shouldThrottleRenew\",\n    value: function shouldThrottleRenew() {\n      var res = false;\n      this.renewTimeQueue.push(Date.now());\n      if (this.renewTimeQueue.length >= 10) {\n        var firstTime = this.renewTimeQueue.shift();\n        var lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n        res = lastTime - firstTime < 30 * 1000;\n      }\n      return res;\n    }\n  }, {\n    key: \"requiresLeadership\",\n    value: function requiresLeadership() {\n      return !!this.options.syncStorage && isBrowser();\n    }\n  }, {\n    key: \"processExpiredTokens\",\n    value: function processExpiredTokens() {\n      var _this = this;\n      var tokenStorage = this.tokenManager.getStorage();\n      var tokens = tokenStorage.getStorage();\n      Object.keys(tokens).forEach(function (key) {\n        var token = tokens[key];\n        if (!isRefreshToken(token) && _this.tokenManager.hasExpired(token)) {\n          _this.onTokenExpiredHandler(key);\n        }\n      });\n    }\n  }, {\n    key: \"onTokenExpiredHandler\",\n    value: function onTokenExpiredHandler(key) {\n      if (this.options.autoRenew) {\n        if (this.shouldThrottleRenew()) {\n          var error = new AuthSdkError('Too many token renew requests');\n          this.tokenManager.emitError(error);\n        } else {\n          this.tokenManager.renew(key).catch(function () {});\n        }\n      } else if (this.options.autoRemove) {\n        this.tokenManager.remove(key);\n      }\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (this.canStart()) {\n                this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n                if (this.tokenManager.isStarted()) {\n                  this.processExpiredTokens();\n                }\n                this.started = true;\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.started) {\n                this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n                this.renewTimeQueue = [];\n                this.started = false;\n              }\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n      return stop;\n    }()\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n  }]);\n  return AutoRenewService;\n}();\nexport { AutoRenewService };","map":{"version":3,"names":["AutoRenewService","tokenManager","options","arguments","length","undefined","_classCallCheck","started","renewTimeQueue","onTokenExpiredHandler","bind","_createClass","key","value","shouldThrottleRenew","res","push","Date","now","firstTime","shift","lastTime","requiresLeadership","syncStorage","isBrowser","processExpiredTokens","_this","tokenStorage","getStorage","tokens","Object","keys","forEach","token","isRefreshToken","hasExpired","autoRenew","error","AuthSdkError","emitError","renew","catch","autoRemove","remove","canStart","_start","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","on","EVENT_EXPIRED","isStarted","stop","start","apply","_stop","_callee2","_callee2$","_context2","off"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/services/AutoRenewService.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { EVENT_EXPIRED, TokenManagerInterface, isRefreshToken } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private processExpiredTokens() {\n    const tokenStorage = this.tokenManager.getStorage();\n    const tokens = tokenStorage.getStorage();\n    Object.keys(tokens).forEach(key => {\n      const token = tokens[key];\n      if (!isRefreshToken(token) && this.tokenManager.hasExpired(token)) {\n        this.onTokenExpiredHandler(key);\n      }\n    });\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      if (this.tokenManager.isStarted()) {\n        // If token manager has been already started, we could miss token expire events,\n        //  so need to process expired tokens manually.\n        this.processExpiredTokens();\n      }\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}