{"ast":null,"code":"import _defineProperty from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nvar SelectEnrollmentChannel = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectEnrollmentChannel, _Remediator);\n  var _super = _createSuper(SelectEnrollmentChannel);\n  function SelectEnrollmentChannel() {\n    _classCallCheck(this, SelectEnrollmentChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SelectEnrollmentChannel, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      if (this.values.channel) {\n        return true;\n      }\n      if (this.values.authenticator) {\n        var _this$values$authenti = this.values.authenticator,\n          id = _this$values$authenti.id,\n          channel = _this$values$authenti.channel;\n        if (!!id && !!channel) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(authClient, context) {\n      var common = _get(_getPrototypeOf(SelectEnrollmentChannel.prototype), \"getNextStep\", this).call(this, authClient, context);\n      var authenticator = context.currentAuthenticator.value;\n      return Object.assign(Object.assign({}, common), {\n        authenticator: authenticator\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _a;\n      var remediationValue = this.remediation.value[0].value;\n      return {\n        authenticator: {\n          id: remediationValue.form.value[0].value,\n          channel: ((_a = this.values.authenticator) === null || _a === void 0 ? void 0 : _a.channel) || this.values.channel\n        },\n        stateHandle: this.values.stateHandle\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _this = this;\n      this.values = _get(_getPrototypeOf(SelectEnrollmentChannel.prototype), \"getValuesAfterProceed\", this).call(this);\n      delete this.values.authenticators;\n      var filterKey = this.values.channel ? 'channel' : 'authenticator';\n      var trimmedValues = Object.keys(this.values).filter(function (valueKey) {\n        return valueKey !== filterKey;\n      });\n      return trimmedValues.reduce(function (values, valueKey) {\n        return Object.assign(Object.assign({}, values), _defineProperty({}, valueKey, _this.values[valueKey]));\n      }, {});\n    }\n  }]);\n  return SelectEnrollmentChannel;\n}(Remediator);\nSelectEnrollmentChannel.remediationName = 'select-enrollment-channel';\nexport { SelectEnrollmentChannel };","map":{"version":3,"names":["SelectEnrollmentChannel","_Remediator","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","canRemediate","values","channel","authenticator","_this$values$authenti","id","getNextStep","authClient","context","common","_get","_getPrototypeOf","prototype","call","currentAuthenticator","Object","assign","getData","remediationValue","remediation","form","_a","stateHandle","getValuesAfterProceed","_this","authenticators","filterKey","trimmedValues","keys","filter","valueKey","reduce","_defineProperty","Remediator","remediationName"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/SelectEnrollmentChannel.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}