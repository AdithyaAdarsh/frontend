{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\nclass EmailTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      accessToken,\n      res\n    } = options;\n    const {\n      id,\n      profile,\n      roles,\n      status,\n      _links\n    } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'get',\n        links: _links,\n        transactionClassName: 'EmailTransaction'\n      });\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'delete',\n        links: _links\n      });\n      return await fn();\n    };\n    this.challenge = async () => {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'challenge',\n        links: _links,\n        transactionClassName: 'EmailChallengeTransaction'\n      });\n      return await fn();\n    };\n    if (_links.poll) {\n      this.poll = async () => {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'poll',\n          links: _links,\n          transactionClassName: 'EmailStatusTransaction'\n        });\n        return await fn();\n      };\n    }\n    if (_links.verify) {\n      this.verify = async payload => {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'verify',\n          links: _links\n        });\n        return await fn(payload);\n      };\n    }\n  }\n}\nexport { EmailTransaction as default };","map":{"version":3,"names":["EmailTransaction","BaseTransaction","constructor","oktaAuth","options","accessToken","res","id","profile","roles","status","_links","get","fn","generateRequestFnFromLinks","methodName","links","transactionClassName","delete","challenge","poll","verify","payload"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/transactions/EmailTransaction.ts"],"sourcesContent":["import { EmailChallengeTransaction, EmailStatusTransaction } from '.';\nimport { EmailProfile, EmailRole, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailTransaction extends BaseTransaction {\n  id: string;\n  profile: EmailProfile;\n  roles: EmailRole[];\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<EmailTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: () => Promise<EmailChallengeTransaction>;\n  poll?: () => Promise<EmailStatusTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, profile, roles, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n        transactionClassName: 'EmailTransaction'\n      });\n      return await fn() as EmailTransaction;\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn() as BaseTransaction;\n    };\n    this.challenge = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links,\n        transactionClassName: 'EmailChallengeTransaction'\n      });\n      return await fn() as EmailChallengeTransaction;\n    };\n    if (_links.poll) {\n      this.poll = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'poll', \n          links: _links,\n          transactionClassName: 'EmailStatusTransaction'\n        });\n        return await fn() as EmailStatusTransaction;\n      };\n    }\n    if (_links.verify) {\n      this.verify = async (payload: VerificationPayload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links,\n        });\n        return await fn(payload) as BaseTransaction;\n      };\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAKqB,MAAAA,gBAAiB,SAAQC,eAAe;EAa3DC,WAAYA,CAAAC,QAAQ,EAAEC,OAAO;IAC3B,KAAK,CAACD,QAAQ,EAAEC,OAAO,CAAC;IAExB,MAAM;MAAEC,WAAW;MAAEC;IAAK,IAAGF,OAAO;IAEpC,MAAM;MAAEG,EAAE;MAAEC,OAAO;MAAEC,KAAK;MAAEC,MAAM;MAAEC;IAAQ,IAAGL,GAAG;IAClD,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IAGpB,IAAI,CAACE,GAAG,GAAG,YAAW;MACpB,MAAMC,EAAE,GAAGC,0BAA0B,CAAC;QACpCX,QAAQ;QACRE,WAAW;QACXU,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAEL,MAAM;QACbM,oBAAoB,EAAE;MACvB,EAAC;MACF,OAAO,MAAMJ,EAAE,EAAsB;IACvC,CAAC;IACD,IAAI,CAACK,MAAM,GAAG,YAAW;MACvB,MAAML,EAAE,GAAGC,0BAA0B,CAAC;QACpCX,QAAQ;QACRE,WAAW;QACXU,UAAU,EAAE,QAAQ;QACpBC,KAAK,EAAEL;MACR,EAAC;MACF,OAAO,MAAME,EAAE,EAAqB;IACtC,CAAC;IACD,IAAI,CAACM,SAAS,GAAG,YAAW;MAC1B,MAAMN,EAAE,GAAGC,0BAA0B,CAAC;QACpCX,QAAQ;QACRE,WAAW;QACXU,UAAU,EAAE,WAAW;QACvBC,KAAK,EAAEL,MAAM;QACbM,oBAAoB,EAAE;MACvB,EAAC;MACF,OAAO,MAAMJ,EAAE,EAA+B;IAChD,CAAC;IACD,IAAIF,MAAM,CAACS,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,GAAG,YAAW;QACrB,MAAMP,EAAE,GAAGC,0BAA0B,CAAC;UACpCX,QAAQ;UACRE,WAAW;UACXU,UAAU,EAAE,MAAM;UAClBC,KAAK,EAAEL,MAAM;UACbM,oBAAoB,EAAE;QACvB,EAAC;QACF,OAAO,MAAMJ,EAAE,EAA4B;MAC7C,CAAC;IACF;IACD,IAAIF,MAAM,CAACU,MAAM,EAAE;MACjB,IAAI,CAACA,MAAM,GAAG,MAAOC,OAA4B,IAAI;QACnD,MAAMT,EAAE,GAAGC,0BAA0B,CAAC;UACpCX,QAAQ;UACRE,WAAW;UACXU,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAEL;QACR,EAAC;QACF,OAAO,MAAME,EAAE,CAACS,OAAO,CAAoB;MAC7C,CAAC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}