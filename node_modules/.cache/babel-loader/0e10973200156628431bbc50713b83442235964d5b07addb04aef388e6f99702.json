{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, use } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    oktaAuth\n  } = useOktaAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = async () => {\n    setIsLoading(true);\n    try {\n      // Redirect the user to the Okta sign-in page\n      await oktaAuth.signInWithRedirect();\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  // Add an event listener to listen for authentication state changes\n  useEffect(() => {\n    const onAuthStateChanged = authState => {\n      if (authState.isAuthenticated) {\n        // Retrieve the Okta token from authState\n        const oktaToken = authState.idToken;\n\n        // Send the Okta token to your server's /login endpoint\n        axios.post('http://localhost:5000/login', {\n          'okta_token': oktaToken\n        }).then(response => {\n          if (response.data.access_token) {\n            // Store the token securely (localStorage or sessionStorage)\n            localStorage.setItem('token', response.data.access_token);\n\n            // You can now navigate to the protected route if needed\n            // Example: navigate('/customer_service');\n          } else {\n            console.error('Access token not received');\n          }\n        }).catch(error => {\n          console.error('Error sending token to server:', error);\n        });\n      }\n    };\n\n    // Subscribe to the authentication state changes\n    const authStateSubscription = oktaAuth.authStateManager.subscribe(onAuthStateChanged);\n\n    // Clean up the subscription when the component unmounts\n    return () => {\n      authStateSubscription.unsubscribe();\n    };\n  }, [oktaAuth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: isLoading ? 'Logging In...' : 'Log In with Okta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"SATo9yVxVQULKAhuHO/SiG6x4DI=\", false, function () {\n  return [useOktaAuth];\n});\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","use","useOktaAuth","axios","jsxDEV","_jsxDEV","Login","_s","oktaAuth","isLoading","setIsLoading","handleLogin","signInWithRedirect","error","console","useEffect","onAuthStateChanged","authState","isAuthenticated","oktaToken","idToken","post","then","response","data","access_token","localStorage","setItem","catch","authStateSubscription","authStateManager","subscribe","unsubscribe","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js"],"sourcesContent":["import React, { useState, use } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport axios from 'axios';\n\nfunction Login() {\n  const { oktaAuth } = useOktaAuth();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n\n    try {\n      // Redirect the user to the Okta sign-in page\n      await oktaAuth.signInWithRedirect();\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  // Add an event listener to listen for authentication state changes\n  useEffect(() => {\n    const onAuthStateChanged = (authState) => {\n      if (authState.isAuthenticated) {\n        // Retrieve the Okta token from authState\n        const oktaToken = authState.idToken;\n\n        // Send the Okta token to your server's /login endpoint\n        axios\n          .post('http://localhost:5000/login', { 'okta_token': oktaToken })\n          .then((response) => {\n            if (response.data.access_token) {\n              // Store the token securely (localStorage or sessionStorage)\n              localStorage.setItem('token', response.data.access_token);\n\n              // You can now navigate to the protected route if needed\n              // Example: navigate('/customer_service');\n            } else {\n              console.error('Access token not received');\n            }\n          })\n          .catch((error) => {\n            console.error('Error sending token to server:', error);\n          });\n      }\n    };\n\n    // Subscribe to the authentication state changes\n    const authStateSubscription = oktaAuth.authStateManager.subscribe(onAuthStateChanged);\n\n    // Clean up the subscription when the component unmounts\n    return () => {\n      authStateSubscription.unsubscribe();\n    };\n  }, [oktaAuth]);\n  \n\n  return (\n    <div>\n      <button onClick={handleLogin} disabled={isLoading}>\n        {isLoading ? 'Logging In...' : 'Log In with Okta'}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,GAAG,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAS,CAAC,GAAGN,WAAW,CAAC,CAAC;EAClC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMF,QAAQ,CAACI,kBAAkB,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACAK,SAAS,CAAC,MAAM;IACd,MAAMC,kBAAkB,GAAIC,SAAS,IAAK;MACxC,IAAIA,SAAS,CAACC,eAAe,EAAE;QAC7B;QACA,MAAMC,SAAS,GAAGF,SAAS,CAACG,OAAO;;QAEnC;QACAjB,KAAK,CACFkB,IAAI,CAAC,6BAA6B,EAAE;UAAE,YAAY,EAAEF;QAAU,CAAC,CAAC,CAChEG,IAAI,CAAEC,QAAQ,IAAK;UAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,YAAY,EAAE;YAC9B;YACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC;;YAEzD;YACA;UACF,CAAC,MAAM;YACLX,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;UAC5C;QACF,CAAC,CAAC,CACDe,KAAK,CAAEf,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD,CAAC,CAAC;MACN;IACF,CAAC;;IAED;IACA,MAAMgB,qBAAqB,GAAGrB,QAAQ,CAACsB,gBAAgB,CAACC,SAAS,CAACf,kBAAkB,CAAC;;IAErF;IACA,OAAO,MAAM;MACXa,qBAAqB,CAACG,WAAW,CAAC,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,CAACxB,QAAQ,CAAC,CAAC;EAGd,oBACEH,OAAA;IAAA4B,QAAA,eACE5B,OAAA;MAAQ6B,OAAO,EAAEvB,WAAY;MAACwB,QAAQ,EAAE1B,SAAU;MAAAwB,QAAA,EAC/CxB,SAAS,GAAG,eAAe,GAAG;IAAkB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChC,EAAA,CA5DQD,KAAK;EAAA,QACSJ,WAAW;AAAA;AAAAsC,EAAA,GADzBlC,KAAK;AA4Db;AAED,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}