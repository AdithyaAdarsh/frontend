{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager.js';\nimport { TRANSACTION_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, ORIGINAL_URI_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport { SavedObject } from '../storage/SavedObject.js';\nfunction createOAuthStorageManager() {\n  return class OAuthStorageManager extends BaseStorageManager {\n    constructor(storageManagerOptions, cookieOptions, storageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n    getTransactionStorage(options) {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n    getSharedTansactionStorage(options) {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n    getOriginalUriStorage(options) {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n}\nexport { createOAuthStorageManager };","map":{"version":3,"names":["createOAuthStorageManager","OAuthStorageManager","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getTransactionStorage","options","getOptionsForSection","logServerSideMemoryStorageWarning","storage","getStorage","storageKey","TRANSACTION_STORAGE_NAME","SavedObject","getSharedTansactionStorage","SHARED_TRANSACTION_STORAGE_NAME","getOriginalUriStorage","ORIGINAL_URI_STORAGE_NAME"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/storage.ts"],"sourcesContent":["import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;SAYgBA,yBAAyBA,CAAA;EAEvC,OAAO,MAAMC,mBACX,SAAQC,kBAAkB;IAG1BC,YAAYC,qBAA4C,EAAEC,aAA4B,EAAEC,WAAwB;MAC9G,KAAK,CAACF,qBAAqB,EAAEC,aAAa,EAAEC,WAAW,CAAC;IACzD;IAEDC,qBAAqBA,CAACC,OAAwB;MAC5CA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,aAAa,EAAED,OAAO,CAAC;MAC3DE,iCAAiC,CAACF,OAAO,CAAC;MAC1C,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;MACxC,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIC,wBAAwB;MACjE,OAAO,IAAIC,WAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;IAC5C;IAEDG,0BAA0BA,CAACR,OAAwB;MACjDA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,oBAAoB,EAAED,OAAO,CAAC;MAClEE,iCAAiC,CAACF,OAAO,CAAC;MAC1C,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;MACxC,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAII,+BAA+B;MACxE,OAAO,IAAIF,WAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;IAC5C;IAEDK,qBAAqBA,CAACV,OAAwB;MAC5CA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,cAAc,EAAED,OAAO,CAAC;MAC5DE,iCAAiC,CAACF,OAAO,CAAC;MAC1C,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;MACxC,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIM,yBAAyB;MAClE,OAAO,IAAIJ,WAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;IAC5C;GACF;AAEH"},"metadata":{},"sourceType":"module","externalDependencies":[]}