{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/src/LoginCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginCallback = () => {\n  _s();\n  const {\n    oktaAuth\n  } = useOktaAuth();\n  const [isTokenValid, setIsTokenValid] = useState(false);\n  useEffect(() => {\n    const handleTokenValidation = async () => {\n      try {\n        // Handle the Okta redirect after successful login\n        await oktaAuth.handleRedirect();\n\n        // Retrieve the Okta token storage data\n        const oktaTokenStorage = JSON.parse(localStorage.getItem('okta-token-storage'));\n        if (oktaTokenStorage && oktaTokenStorage.accessToken && oktaTokenStorage.accessToken.accessToken) {\n          const accessToken = oktaTokenStorage.accessToken.accessToken;\n\n          // Validate the access token\n          const isValid = await oktaAuth.token.verify(accessToken);\n          if (isValid) {\n            setIsTokenValid(true);\n\n            // Send a validation request to the server\n            fetch('http://localhost:5000/login/validate', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                validated: true\n              })\n            });\n          } else {\n            console.error('Access token is not valid');\n            // Handle this error case, e.g., display a message to the user\n          }\n        } else {\n          console.error('Access token not found in Okta token storage');\n          // Handle this error case, e.g., display a message to the user\n        }\n      } catch (error) {\n        console.error('Token validation error:', error);\n        // Handle this error case, e.g., display a message to the user\n      }\n    };\n\n    handleTokenValidation();\n  }, [oktaAuth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isTokenValid ? 'Access token is valid' : 'Access token is not valid', /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Logging in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginCallback, \"EtRFd7SXoJJdA0+c0IGIQFfqiY0=\", false, function () {\n  return [useOktaAuth];\n});\n_c = LoginCallback;\nexport default LoginCallback;\nvar _c;\n$RefreshReg$(_c, \"LoginCallback\");","map":{"version":3,"names":["React","useEffect","useState","useOktaAuth","jsxDEV","_jsxDEV","LoginCallback","_s","oktaAuth","isTokenValid","setIsTokenValid","handleTokenValidation","handleRedirect","oktaTokenStorage","JSON","parse","localStorage","getItem","accessToken","isValid","token","verify","fetch","method","headers","body","stringify","validated","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/src/LoginCallback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\n\nconst LoginCallback = () => {\n  const { oktaAuth } = useOktaAuth();\n  const [isTokenValid, setIsTokenValid] = useState(false);\n\n  useEffect(() => {\n    const handleTokenValidation = async () => {\n      try {\n        // Handle the Okta redirect after successful login\n        await oktaAuth.handleRedirect();\n\n        // Retrieve the Okta token storage data\n        const oktaTokenStorage = JSON.parse(localStorage.getItem('okta-token-storage'));\n\n        if (oktaTokenStorage && oktaTokenStorage.accessToken && oktaTokenStorage.accessToken.accessToken) {\n          const accessToken = oktaTokenStorage.accessToken.accessToken;\n\n          // Validate the access token\n          const isValid = await oktaAuth.token.verify(accessToken);\n\n          if (isValid) {\n            setIsTokenValid(true);\n\n            // Send a validation request to the server\n            fetch('http://localhost:5000/login/validate', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ validated: true }),\n            });\n          } else {\n            console.error('Access token is not valid');\n            // Handle this error case, e.g., display a message to the user\n          }\n        } else {\n          console.error('Access token not found in Okta token storage');\n          // Handle this error case, e.g., display a message to the user\n        }\n      } catch (error) {\n        console.error('Token validation error:', error);\n        // Handle this error case, e.g., display a message to the user\n      }\n    };\n\n    handleTokenValidation();\n  }, [oktaAuth]);\n\n  return (\n    <div>\n      {isTokenValid ? 'Access token is valid' : 'Access token is not valid'}\n      <div>Logging in...</div>\n    </div>\n  );\n};\n\nexport default LoginCallback;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAS,CAAC,GAAGL,WAAW,CAAC,CAAC;EAClC,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMU,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,MAAMH,QAAQ,CAACI,cAAc,CAAC,CAAC;;QAE/B;QACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAE/E,IAAIJ,gBAAgB,IAAIA,gBAAgB,CAACK,WAAW,IAAIL,gBAAgB,CAACK,WAAW,CAACA,WAAW,EAAE;UAChG,MAAMA,WAAW,GAAGL,gBAAgB,CAACK,WAAW,CAACA,WAAW;;UAE5D;UACA,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACY,KAAK,CAACC,MAAM,CAACH,WAAW,CAAC;UAExD,IAAIC,OAAO,EAAE;YACXT,eAAe,CAAC,IAAI,CAAC;;YAErB;YACAY,KAAK,CAAC,sCAAsC,EAAE;cAC5CC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEX,IAAI,CAACY,SAAS,CAAC;gBAAEC,SAAS,EAAE;cAAK,CAAC;YAC1C,CAAC,CAAC;UACJ,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;YAC1C;UACF;QACF,CAAC,MAAM;UACLD,OAAO,CAACC,KAAK,CAAC,8CAA8C,CAAC;UAC7D;QACF;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF;IACF,CAAC;;IAEDlB,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAyB,QAAA,GACGrB,YAAY,GAAG,uBAAuB,GAAG,2BAA2B,eACrEJ,OAAA;MAAAyB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArDID,aAAa;EAAA,QACIH,WAAW;AAAA;AAAAgC,EAAA,GAD5B7B,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}