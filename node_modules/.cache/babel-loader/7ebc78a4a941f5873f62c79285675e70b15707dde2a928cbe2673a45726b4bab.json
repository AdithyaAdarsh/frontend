{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nvar getPhones = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/phones',\n            method: 'GET',\n            accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n            transactionClassName: 'PhoneTransaction'\n          });\n        case 2:\n          transaction = _context.sent;\n          return _context.abrupt(\"return\", transaction);\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getPhones(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getPhone = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(oktaAuth, options) {\n    var accessToken, id, transaction;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          accessToken = options.accessToken, id = options.id;\n          _context2.next = 3;\n          return sendRequest(oktaAuth, {\n            url: \"/idp/myaccount/phones/\".concat(id),\n            method: 'GET',\n            accessToken: accessToken,\n            transactionClassName: 'PhoneTransaction'\n          });\n        case 3:\n          transaction = _context2.sent;\n          return _context2.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function getPhone(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar addPhone = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(oktaAuth, options) {\n    var accessToken, payload, transaction;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          accessToken = options.accessToken, payload = options.payload;\n          _context3.next = 3;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/phones',\n            method: 'POST',\n            payload: payload,\n            accessToken: accessToken,\n            transactionClassName: 'PhoneTransaction'\n          });\n        case 3:\n          transaction = _context3.sent;\n          return _context3.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function addPhone(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar deletePhone = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(oktaAuth, options) {\n    var id, accessToken, transaction;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          id = options.id, accessToken = options.accessToken;\n          _context4.next = 3;\n          return sendRequest(oktaAuth, {\n            url: \"/idp/myaccount/phones/\".concat(id),\n            method: 'DELETE',\n            accessToken: accessToken\n          });\n        case 3:\n          transaction = _context4.sent;\n          return _context4.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function deletePhone(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar sendPhoneChallenge = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(oktaAuth, options) {\n    var accessToken, id, payload, transaction;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          accessToken = options.accessToken, id = options.id, payload = options.payload;\n          _context5.next = 3;\n          return sendRequest(oktaAuth, {\n            url: \"/idp/myaccount/phones/\".concat(id, \"/challenge\"),\n            method: 'POST',\n            payload: payload,\n            accessToken: accessToken\n          });\n        case 3:\n          transaction = _context5.sent;\n          return _context5.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function sendPhoneChallenge(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar verifyPhoneChallenge = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(oktaAuth, options) {\n    var id, payload, accessToken, transaction;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          id = options.id, payload = options.payload, accessToken = options.accessToken;\n          _context6.next = 3;\n          return sendRequest(oktaAuth, {\n            url: \"/idp/myaccount/phones/\".concat(id, \"/verify\"),\n            method: 'POST',\n            payload: payload,\n            accessToken: accessToken\n          });\n        case 3:\n          transaction = _context6.sent;\n          return _context6.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function verifyPhoneChallenge(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge };","map":{"version":3,"names":["getPhones","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","oktaAuth","options","transaction","wrap","_callee$","_context","prev","next","sendRequest","url","method","accessToken","transactionClassName","sent","abrupt","stop","_x","_x2","apply","arguments","getPhone","_ref2","_callee2","id","_callee2$","_context2","concat","_x3","_x4","addPhone","_ref3","_callee3","payload","_callee3$","_context3","_x5","_x6","deletePhone","_ref4","_callee4","_callee4$","_context4","_x7","_x8","sendPhoneChallenge","_ref5","_callee5","_callee5$","_context5","_x9","_x10","verifyPhoneChallenge","_ref6","_callee6","_callee6$","_context6","_x11","_x12"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/phoneApi.ts"],"sourcesContent":["import { sendRequest } from './request';\nimport { \n  IAPIFunction,\n  BaseTransaction, \n  PhoneTransaction\n} from './types';\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhones: IAPIFunction<PhoneTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'PhoneTransaction'\n  }) as PhoneTransaction[];\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { accessToken, id } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'GET',\n    accessToken,\n    transactionClassName: 'PhoneTransaction'\n  }) as PhoneTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const addPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PhoneTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'POST',\n    payload,\n    accessToken,\n    transactionClassName: 'PhoneTransaction'\n  }) as PhoneTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const deletePhone: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'DELETE',\n    accessToken,\n  }) as BaseTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const sendPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { accessToken, id, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/challenge`,\n    method: 'POST',\n    payload,\n    accessToken\n  }) as BaseTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const verifyPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { id, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  }) as BaseTransaction;\n  return transaction;\n};\n"],"mappings":";;;;;;;;;;;;;;;AAUa,IAAAA,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAqC,SAAAC,QACzDC,QAAQ,EACRC,OAAQ;IAAA,IAAAC,WAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAEkBC,WAAW,CAACR,QAAQ,EAAE;YAC9CS,GAAG,EAAE,uBAAuB;YAC5BC,MAAM,EAAE,KAAK;YACbC,WAAW,EAAEV,OAAO,aAAPA,OAAO,KAAP,kBAAAA,OAAO,CAAEU,WAAW;YACjCC,oBAAoB,EAAE;UACvB,EAAuB;QAAA;UALlBV,WAAW,GAAAG,QAAA,CAAAQ,IAAA;UAAA,OAAAR,QAAA,CAAAS,MAAA,WAMVZ,WAAW;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAU,IAAA;MAAA;IAAA,GAAAhB,OAAA;EAAA,CAClB;EAAA,gBAXWL,SAASA,CAAAsB,EAAA,EAAAC,GAAA;IAAA,OAAAtB,IAAA,CAAAuB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWpB;AAKW,IAAAC,QAAQ;EAAA,IAAAC,KAAA,GAAAzB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAmC,SAAAwB,SACtDtB,QAAQ,EACRC,OAAO;IAAA,IAAAU,WAAA,EAAAY,EAAA,EAAArB,WAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAqB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAAlB,IAAA;QAAA;UAECI,WAAW,GAASV,OAAQ,CAA5BU,WAAW,EAAEY,EAAE,GAAKtB,OAAQ,CAAfsB,EAAE;UAAAE,SAAA,CAAAlB,IAAA;UAAA,OACGC,WAAW,CAACR,QAAQ,EAAE;YAC9CS,GAAG,2BAAAiB,MAAA,CAA2BH,EAAE,CAAE;YAClCb,MAAM,EAAE,KAAK;YACbC,WAAW,EAAXA,WAAW;YACXC,oBAAoB,EAAE;UACvB,EAAqB;QAAA;UALhBV,WAAW,GAAAuB,SAAA,CAAAZ,IAAA;UAAA,OAAAY,SAAA,CAAAX,MAAA,WAMVZ,WAAW;QAAA;QAAA;UAAA,OAAAuB,SAAA,CAAAV,IAAA;MAAA;IAAA,GAAAO,QAAA;EAAA,CAClB;EAAA,gBAZWF,QAAQA,CAAAO,GAAA,EAAAC,GAAA;IAAA,OAAAP,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYnB;AAKW,IAAAU,QAAQ;EAAA,IAAAC,KAAA,GAAAlC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAmC,SAAAiC,SACtD/B,QAAQ,EACRC,OAAO;IAAA,IAAAU,WAAA,EAAAqB,OAAA,EAAA9B,WAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAA8B,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA5B,IAAA,GAAA4B,SAAA,CAAA3B,IAAA;QAAA;UAECI,WAAW,GAAcV,OAAQ,CAAjCU,WAAW,EAAEqB,OAAO,GAAK/B,OAAQ,CAApB+B,OAAO;UAAAE,SAAA,CAAA3B,IAAA;UAAA,OACFC,WAAW,CAACR,QAAQ,EAAE;YAC9CS,GAAG,EAAE,uBAAuB;YAC5BC,MAAM,EAAE,MAAM;YACdsB,OAAO,EAAPA,OAAO;YACPrB,WAAW,EAAXA,WAAW;YACXC,oBAAoB,EAAE;UACvB,EAAqB;QAAA;UANhBV,WAAW,GAAAgC,SAAA,CAAArB,IAAA;UAAA,OAAAqB,SAAA,CAAApB,MAAA,WAOVZ,WAAW;QAAA;QAAA;UAAA,OAAAgC,SAAA,CAAAnB,IAAA;MAAA;IAAA,GAAAgB,QAAA;EAAA,CAClB;EAAA,gBAbWF,QAAQA,CAAAM,GAAA,EAAAC,GAAA;IAAA,OAAAN,KAAA,CAAAZ,KAAA,OAAAC,SAAA;EAAA;AAAA,GAanB;AAKW,IAAAkB,WAAW;EAAA,IAAAC,KAAA,GAAA1C,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAkC,SAAAyC,SACxDvC,QAAQ,EACRC,OAAO;IAAA,IAAAsB,EAAA,EAAAZ,WAAA,EAAAT,WAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAqC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAnC,IAAA,GAAAmC,SAAA,CAAAlC,IAAA;QAAA;UAECgB,EAAE,GAAkBtB,OAAQ,CAA5BsB,EAAE,EAAEZ,WAAW,GAAKV,OAAQ,CAAxBU,WAAW;UAAA8B,SAAA,CAAAlC,IAAA;UAAA,OACGC,WAAW,CAACR,QAAQ,EAAE;YAC9CS,GAAG,2BAAAiB,MAAA,CAA2BH,EAAE,CAAE;YAClCb,MAAM,EAAE,QAAQ;YAChBC,WAAW,EAAXA;UACD,EAAoB;QAAA;UAJfT,WAAW,GAAAuC,SAAA,CAAA5B,IAAA;UAAA,OAAA4B,SAAA,CAAA3B,MAAA,WAKVZ,WAAW;QAAA;QAAA;UAAA,OAAAuC,SAAA,CAAA1B,IAAA;MAAA;IAAA,GAAAwB,QAAA;EAAA,CAClB;EAAA,gBAXWF,WAAWA,CAAAK,GAAA,EAAAC,GAAA;IAAA,OAAAL,KAAA,CAAApB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWtB;AAKW,IAAAyB,kBAAkB;EAAA,IAAAC,KAAA,GAAAjD,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAkC,SAAAgD,SAC/D9C,QAAQ,EACRC,OAAO;IAAA,IAAAU,WAAA,EAAAY,EAAA,EAAAS,OAAA,EAAA9B,WAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAA4C,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA1C,IAAA,GAAA0C,SAAA,CAAAzC,IAAA;QAAA;UAECI,WAAW,GAAkBV,OAAQ,CAArCU,WAAW,EAAEY,EAAE,GAActB,OAAQ,CAAxBsB,EAAE,EAAES,OAAO,GAAK/B,OAAQ,CAApB+B,OAAO;UAAAgB,SAAA,CAAAzC,IAAA;UAAA,OACNC,WAAW,CAACR,QAAQ,EAAE;YAC9CS,GAAG,2BAAAiB,MAAA,CAA2BH,EAAE,eAAY;YAC5Cb,MAAM,EAAE,MAAM;YACdsB,OAAO,EAAPA,OAAO;YACPrB,WAAW,EAAXA;UACD,EAAoB;QAAA;UALfT,WAAW,GAAA8C,SAAA,CAAAnC,IAAA;UAAA,OAAAmC,SAAA,CAAAlC,MAAA,WAMVZ,WAAW;QAAA;QAAA;UAAA,OAAA8C,SAAA,CAAAjC,IAAA;MAAA;IAAA,GAAA+B,QAAA;EAAA,CAClB;EAAA,gBAZWF,kBAAkBA,CAAAK,GAAA,EAAAC,IAAA;IAAA,OAAAL,KAAA,CAAA3B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAY7B;AAKW,IAAAgC,oBAAoB;EAAA,IAAAC,KAAA,GAAAxD,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAkC,SAAAuD,SACjErD,QAAQ,EACRC,OAAO;IAAA,IAAAsB,EAAA,EAAAS,OAAA,EAAArB,WAAA,EAAAT,WAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAmD,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjD,IAAA,GAAAiD,SAAA,CAAAhD,IAAA;QAAA;UAECgB,EAAE,GAA2BtB,OAAQ,CAArCsB,EAAE,EAAES,OAAO,GAAkB/B,OAAQ,CAAjC+B,OAAO,EAAErB,WAAW,GAAKV,OAAQ,CAAxBU,WAAW;UAAA4C,SAAA,CAAAhD,IAAA;UAAA,OACNC,WAAW,CAACR,QAAQ,EAAE;YAC9CS,GAAG,2BAAAiB,MAAA,CAA2BH,EAAE,YAAS;YACzCb,MAAM,EAAE,MAAM;YACdsB,OAAO,EAAPA,OAAO;YACPrB,WAAW,EAAXA;UACD,EAAoB;QAAA;UALfT,WAAW,GAAAqD,SAAA,CAAA1C,IAAA;UAAA,OAAA0C,SAAA,CAAAzC,MAAA,WAMVZ,WAAW;QAAA;QAAA;UAAA,OAAAqD,SAAA,CAAAxC,IAAA;MAAA;IAAA,GAAAsC,QAAA;EAAA,CACpB;EAAA,gBAZaF,oBAAoBA,CAAAK,IAAA,EAAAC,IAAA;IAAA,OAAAL,KAAA,CAAAlC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}