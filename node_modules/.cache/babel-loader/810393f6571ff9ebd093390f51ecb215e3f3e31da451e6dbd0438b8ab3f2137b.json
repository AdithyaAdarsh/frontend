{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOktaAuthBase } from '../../base/factory.js';\nimport { mixinStorage } from '../../storage/mixin.js';\nimport { mixinSession } from '../../session/mixin.js';\nimport { mixinHttp } from '../../http/mixin.js';\nimport { mixinOAuth } from '../mixin/index.js';\nfunction createOktaAuthOAuth(StorageManagerConstructor, OptionsConstructor, TransactionManagerConstructor) {\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp(WithStorage);\n  const WithSession = mixinSession(WithHttp);\n  const WithOAuth = mixinOAuth(WithSession, TransactionManagerConstructor);\n  return WithOAuth;\n}\nexport { createOktaAuthOAuth };","map":{"version":3,"names":["createOktaAuthOAuth","StorageManagerConstructor","OptionsConstructor","TransactionManagerConstructor","Base","createOktaAuthBase","WithStorage","mixinStorage","WithHttp","mixinHttp","WithSession","mixinSession","WithOAuth","mixinOAuth"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/factory/OktaAuthOAuth.ts"],"sourcesContent":["import { StorageManagerConstructor } from '../../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../../base/types';\n\nimport { createOktaAuthBase } from '../../base';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinOAuth } from '../mixin';\nimport {\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../types';\n\nexport function createOktaAuthOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n):  OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  return WithOAuth;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;SAkBgBA,mBAAmBA,CAQjCC,yBAAuD,EACvDC,kBAAiD,EACjDC,6BAAgE;EAGhE,MAAMC,IAAI,GAAGC,kBAAkB,CAACH,kBAAkB,CAAC;EACnD,MAAMI,WAAW,GAAGC,YAAY,CAAOH,IAAI,EAAEH,yBAAyB,CAAC;EACvE,MAAMO,QAAQ,GAAGC,SAAS,CAAOH,WAAW,CAAC;EAC7C,MAAMI,WAAW,GAAGC,YAAY,CAAOH,QAAQ,CAAC;EAChD,MAAMI,SAAS,GAAGC,UAAU,CAAcH,WAAW,EAAEP,6BAA6B,CAAC;EACrF,OAAOS,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}