{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { clone } from '../util/object.js';\nimport { createOAuthMeta } from './util/oauthMeta.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport './types/Token.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\nfunction getWithRedirect(_x, _x2) {\n  return _getWithRedirect.apply(this, arguments);\n}\nfunction _getWithRedirect() {\n  _getWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, options) {\n    var tokenParams,\n      meta,\n      requestUrl,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(_args.length > 2)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options')));\n        case 2:\n          options = clone(options) || {};\n          _context.next = 5;\n          return prepareTokenParams(sdk, options);\n        case 5:\n          tokenParams = _context.sent;\n          meta = createOAuthMeta(sdk, tokenParams);\n          requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n          sdk.transactionManager.save(meta);\n          if (sdk.options.setLocation) {\n            sdk.options.setLocation(requestUrl);\n          } else {\n            window.location.assign(requestUrl);\n          }\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getWithRedirect.apply(this, arguments);\n}\nexport { getWithRedirect };","map":{"version":3,"names":["getWithRedirect","_x","_x2","_getWithRedirect","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sdk","options","tokenParams","meta","requestUrl","_args","wrap","_callee$","_context","prev","next","length","abrupt","Promise","reject","AuthSdkError","clone","prepareTokenParams","sent","createOAuthMeta","urls","authorizeUrl","buildAuthorizeParams","transactionManager","save","setLocation","window","location","assign","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/getWithRedirect.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;SAmBsBA,eAAeA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA9B,SAAAC,QAA+BC,GAA2B,EAAEC,OAAqB;IAAA,IAAAC,WAAA;MAAAC,IAAA;MAAAC,UAAA;MAAAC,KAAA,GAAAV,SAAA;IAAA,OAAAE,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MAClFL,KAAA,CAAUM,MAAM,GAAG,CAAC;YAAAH,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAI,MAAA,WACfC,OAAO,CAACC,MAAM,CAAC,IAAIC,YAAY,CAAC,yEAAyE,CAAC,CAAC;QAAA;UAGpHd,OAAO,GAAGe,KAAK,CAACf,OAAO,CAAC,IAAI,EAAE;UAACO,QAAA,CAAAE,IAAA;UAAA,OAELO,kBAAkB,CAACjB,GAAG,EAAEC,OAAO,CAAC;QAAA;UAApDC,WAAW,GAAAM,QAAA,CAAAU,IAAA;UACXf,IAAI,GAAGgB,eAAe,CAACnB,GAAG,EAAEE,WAAW,CAAC;UACxCE,UAAU,GAAGD,IAAI,CAACiB,IAAI,CAACC,YAAY,GAAGC,oBAAoB,CAACpB,WAAW,CAAC;UAC7EF,GAAG,CAACuB,kBAAkB,CAACC,IAAI,CAACrB,IAAI,CAAC;UACjC,IAAIH,GAAG,CAACC,OAAO,CAACwB,WAAW,EAAE;YAC3BzB,GAAG,CAACC,OAAO,CAACwB,WAAW,CAACrB,UAAU,CAAC;UACpC,OAAM;YACLsB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACxB,UAAU,CAAC;UACnC;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAqB,IAAA;MAAA;IAAA,GAAA9B,OAAA;EAAA,CACH;EAAA,OAAAN,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}