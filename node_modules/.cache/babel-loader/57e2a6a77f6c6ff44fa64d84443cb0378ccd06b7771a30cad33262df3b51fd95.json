{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { REFERRER_PATH_STORAGE_KEY } from '../../constants.js';\nimport storageUtil from '../../browser/browserStorage.js';\nfunction provideOriginalUri(BaseClass) {\n  return class WithOriginalUri extends BaseClass {\n    setOriginalUri(originalUri, state) {\n      const sessionStorage = storageUtil.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n    getOriginalUri(state) {\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n      const storage = storageUtil.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n    removeOriginalUri(state) {\n      const storage = storageUtil.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\nexport { provideOriginalUri };","map":{"version":3,"names":["provideOriginalUri","BaseClass","WithOriginalUri","setOriginalUri","originalUri","state","sessionStorage","storageUtil","getSessionStorage","setItem","REFERRER_PATH_STORAGE_KEY","options","sharedStorage","storageManager","getOriginalUriStorage","getOriginalUri","getItem","storage","undefined","removeOriginalUri","removeItem"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/mixin/browser.ts"],"sourcesContent":["import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;AAYM,SAAUA,kBAAkBA,CAQjCC,SAAgB;EACf,OAAO,MAAMC,eAAgB,SAAQD,SAAS;IAC5CE,cAAcA,CAACC,WAAmB,EAAEC,KAAc;MAEhD,MAAMC,cAAc,GAAGC,WAAc,CAACC,iBAAiB,EAAE;MACzDF,cAAc,CAACG,OAAO,CAACC,yBAAyB,EAAEN,WAAW,CAAC;MAG9DC,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACM,OAAO,CAACN,KAAK;MACnC,IAAIA,KAAK,EAAE;QACT,MAAMO,aAAa,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,EAAE;QACjEF,aAAa,CAACH,OAAO,CAACJ,KAAK,EAAED,WAAW,CAAC;MAC1C;IACF;IAEDW,cAAcA,CAACV,KAAc;MAE3BA,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACM,OAAO,CAACN,KAAK;MACnC,IAAIA,KAAK,EAAE;QACT,MAAMO,aAAa,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,EAAE;QACjE,MAAMV,WAAW,GAAGQ,aAAa,CAACI,OAAO,CAACX,KAAK,CAAC;QAChD,IAAID,WAAW,EAAE;UACf,OAAOA,WAAW;QACnB;MACF;MAGD,MAAMa,OAAO,GAAGV,WAAc,CAACC,iBAAiB,EAAE;MAClD,OAAOS,OAAO,GAAGA,OAAO,CAACD,OAAO,CAACN,yBAAyB,CAAC,IAAIQ,SAAS,GAAGA,SAAS;IACrF;IAEDC,iBAAiBA,CAACd,KAAc;MAE9B,MAAMY,OAAO,GAAGV,WAAc,CAACC,iBAAiB,EAAE;MAClDS,OAAO,CAACG,UAAU,CAACV,yBAAyB,CAAC;MAG7CL,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACM,OAAO,CAACN,KAAK;MACnC,IAAIA,KAAK,EAAE;QACT,MAAMO,aAAa,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,EAAE;QACjEF,aAAa,CAACQ,UAAU,IAAIR,aAAa,CAACQ,UAAU,CAACf,KAAK,CAAC;MAC5D;IACF;GACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}