{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel, createLeaderElection } from 'broadcast-channel';\nimport { isBrowser } from '../features.js';\nclass LeaderElectionService {\n  constructor(options = {}) {\n    this.started = false;\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n  onLeaderDuplicate() {}\n  async onLeader() {\n    var _a, _b;\n    await ((_b = (_a = this.options).onLeader) === null || _b === void 0 ? void 0 : _b.call(_a));\n  }\n  isLeader() {\n    var _a;\n    return !!((_a = this.elector) === null || _a === void 0 ? void 0 : _a.isLeader);\n  }\n  hasLeader() {\n    var _a;\n    return !!((_a = this.elector) === null || _a === void 0 ? void 0 : _a.hasLeader);\n  }\n  async start() {\n    if (this.canStart()) {\n      const {\n        electionChannelName\n      } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        this.channel.postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n  requiresLeadership() {\n    return false;\n  }\n  isStarted() {\n    return this.started;\n  }\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n}\nexport { LeaderElectionService };","map":{"version":3,"names":["LeaderElectionService","constructor","options","started","onLeaderDuplicate","bind","onLeader","_b","_a","call","isLeader","elector","hasLeader","start","canStart","electionChannelName","channel","BroadcastChannel","createLeaderElection","onduplicate","awaitLeadership","then","stop","die","undefined","postInternal","Promise","resolve","close","requiresLeadership","isStarted","isBrowser"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/services/LeaderElectionService.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;MA0BaA,qBAAqB;EAMhCC,YAAYC,OAAA,GAA0B,EAAE;IAFhC,IAAO,CAAAC,OAAA,GAAG,KAAK;IAGrB,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;EACzC;EAEOD,iBAAiBA,CAAA,GACxB;EAEO,MAAME,QAAQA,CAAA;;IACpB,OAAM,CAAAC,EAAA,IAAAC,EAAA,OAAI,CAACN,OAAO,EAACI,QAAQ,MAAI,QAAAC,EAAA,uBAAAA,EAAA,CAAAE,IAAA,CAAAD,EAAA;EAChC;EAEDE,QAAQA,CAAA;;IACN,OAAO,CAAC,EAAC,CAAAF,EAAA,OAAI,CAACG,OAAO,cAAAH,EAAA,uBAAAA,EAAA,CAAEE,QAAQ;EAChC;EAEDE,SAASA,CAAA;;IACP,OAAO,CAAC,EAAC,CAAAJ,EAAA,OAAI,CAACG,OAAO,cAAAH,EAAA,uBAAAA,EAAA,CAAEI,SAAS;EACjC;EAED,MAAMC,KAAKA,CAAA;IACT,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAE;MACnB,MAAM;QAAEC;MAAmB,CAAE,GAAG,IAAI,CAACb,OAAO;MAC5C,IAAI,CAACc,OAAO,GAAG,IAAIC,gBAAgB,CAACF,mBAA6B,CAAC;MAClE,IAAI,CAACJ,OAAO,GAAGO,oBAAoB,CAAC,IAAI,CAACF,OAAO,CAAC;MACjD,IAAI,CAACL,OAAO,CAACQ,WAAW,GAAG,IAAI,CAACf,iBAAiB;MACjD,IAAI,CAACO,OAAO,CAACS,eAAe,EAAE,CAACC,IAAI,CAAC,IAAI,CAACf,QAAQ,CAAC;MAClD,IAAI,CAACH,OAAO,GAAG,IAAI;IACpB;EACF;EAED,MAAMmB,IAAIA,CAAA;IACR,IAAI,IAAI,CAACnB,OAAO,EAAE;MAChB,IAAI,IAAI,CAACQ,OAAO,EAAE;QAChB,MAAM,IAAI,CAACA,OAAO,CAACY,GAAG,EAAE;QACxB,IAAI,CAACZ,OAAO,GAAGa,SAAS;MACzB;MACD,IAAI,IAAI,CAACR,OAAO,EAAE;QAEf,IAAI,CAACA,OAAe,CAACS,YAAY,GAAG,MAAMC,OAAO,CAACC,OAAO,EAAE;QAC5D,MAAM,IAAI,CAACX,OAAO,CAACY,KAAK,EAAE;QAC1B,IAAI,CAACZ,OAAO,GAAGQ,SAAS;MACzB;MACD,IAAI,CAACrB,OAAO,GAAG,KAAK;IACrB;EACF;EAED0B,kBAAkBA,CAAA;IAChB,OAAO,KAAK;EACb;EAEDC,SAASA,CAAA;IACP,OAAO,IAAI,CAAC3B,OAAO;EACpB;EAEDW,QAAQA,CAAA;IACN,OAAOiB,SAAS,CAAE,KAAI,CAAC,IAAI,CAAC5B,OAAO;EACpC;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}