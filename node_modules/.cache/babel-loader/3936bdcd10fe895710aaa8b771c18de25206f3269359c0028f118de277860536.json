{"ast":null,"code":"import _slicedToArray from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AutoRenewService } from '../../services/AutoRenewService.js';\nimport { SyncStorageService } from '../../services/SyncStorageService.js';\nimport { LeaderElectionService } from '../../services/LeaderElectionService.js';\nimport { removeNils } from '../../util/object.js';\nvar AUTO_RENEW = 'autoRenew';\nvar SYNC_STORAGE = 'syncStorage';\nvar LEADER_ELECTION = 'leaderElection';\nvar ServiceManager = /*#__PURE__*/function () {\n  function ServiceManager(sdk) {\n    var _this = this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, ServiceManager);\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n    var _sdk$tokenManager$get = sdk.tokenManager.getOptions(),\n      autoRenew = _sdk$tokenManager$get.autoRenew,\n      autoRemove = _sdk$tokenManager$get.autoRemove,\n      syncStorage = _sdk$tokenManager$get.syncStorage;\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, ServiceManager.defaultOptions, {\n      autoRenew: autoRenew,\n      autoRemove: autoRemove,\n      syncStorage: syncStorage\n    }, {\n      electionChannelName: \"\".concat(sdk.options.clientId, \"-election\"),\n      syncChannelName: \"\".concat(sdk.options.clientId, \"-sync\")\n    }, removeNils(options));\n    this.started = false;\n    this.services = new Map();\n    ServiceManager.knownServices.forEach(function (name) {\n      var svc = _this.createService(name);\n      if (svc) {\n        _this.services.set(name, svc);\n      }\n    });\n  }\n  _createClass(ServiceManager, [{\n    key: \"onLeader\",\n    value: function () {\n      var _onLeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.started) {\n                _context.next = 3;\n                break;\n              }\n              _context.next = 3;\n              return this.startServices();\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function onLeader() {\n        return _onLeader.apply(this, arguments);\n      }\n      return onLeader;\n    }()\n  }, {\n    key: \"isLeader\",\n    value: function isLeader() {\n      var _a;\n      return (_a = this.getService(LEADER_ELECTION)) === null || _a === void 0 ? void 0 : _a.isLeader();\n    }\n  }, {\n    key: \"isLeaderRequired\",\n    value: function isLeaderRequired() {\n      return _toConsumableArray(this.services.values()).some(function (srv) {\n        return srv.canStart() && srv.requiresLeadership();\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.started) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return this.startServices();\n            case 4:\n              this.started = true;\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.stopServices();\n            case 2:\n              this.started = false;\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n      return stop;\n    }()\n  }, {\n    key: \"getService\",\n    value: function getService(name) {\n      return this.services.get(name);\n    }\n  }, {\n    key: \"startServices\",\n    value: function () {\n      var _startServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _iterator, _step, _step$value, name, srv;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper(this.services.entries());\n              _context4.prev = 1;\n              _iterator.s();\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context4.next = 10;\n                break;\n              }\n              _step$value = _slicedToArray(_step.value, 2), name = _step$value[0], srv = _step$value[1];\n              if (!this.canStartService(name, srv)) {\n                _context4.next = 8;\n                break;\n              }\n              _context4.next = 8;\n              return srv.start();\n            case 8:\n              _context4.next = 3;\n              break;\n            case 10:\n              _context4.next = 15;\n              break;\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](1);\n              _iterator.e(_context4.t0);\n            case 15:\n              _context4.prev = 15;\n              _iterator.f();\n              return _context4.finish(15);\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[1, 12, 15, 18]]);\n      }));\n      function startServices() {\n        return _startServices.apply(this, arguments);\n      }\n      return startServices;\n    }()\n  }, {\n    key: \"stopServices\",\n    value: function () {\n      var _stopServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _iterator2, _step2, srv;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(this.services.values());\n              _context5.prev = 1;\n              _iterator2.s();\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context5.next = 9;\n                break;\n              }\n              srv = _step2.value;\n              _context5.next = 7;\n              return srv.stop();\n            case 7:\n              _context5.next = 3;\n              break;\n            case 9:\n              _context5.next = 14;\n              break;\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              _iterator2.e(_context5.t0);\n            case 14:\n              _context5.prev = 14;\n              _iterator2.f();\n              return _context5.finish(14);\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[1, 11, 14, 17]]);\n      }));\n      function stopServices() {\n        return _stopServices.apply(this, arguments);\n      }\n      return stopServices;\n    }()\n  }, {\n    key: \"canStartService\",\n    value: function canStartService(name, srv) {\n      var canStart = srv.canStart() && !srv.isStarted();\n      if (name === LEADER_ELECTION) {\n        canStart && (canStart = this.isLeaderRequired());\n      } else if (srv.requiresLeadership()) {\n        canStart && (canStart = this.isLeader());\n      }\n      return canStart;\n    }\n  }, {\n    key: \"createService\",\n    value: function createService(name) {\n      var tokenManager = this.sdk.tokenManager;\n      var service;\n      switch (name) {\n        case LEADER_ELECTION:\n          service = new LeaderElectionService(Object.assign(Object.assign({}, this.options), {\n            onLeader: this.onLeader\n          }));\n          break;\n        case AUTO_RENEW:\n          service = new AutoRenewService(tokenManager, Object.assign({}, this.options));\n          break;\n        case SYNC_STORAGE:\n          service = new SyncStorageService(tokenManager, Object.assign({}, this.options));\n          break;\n        default:\n          throw new Error(\"Unknown service \".concat(name));\n      }\n      return service;\n    }\n  }]);\n  return ServiceManager;\n}();\nServiceManager.knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\nServiceManager.defaultOptions = {\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true\n};\nexport { ServiceManager };","map":{"version":3,"names":["AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","ServiceManager","sdk","_this","options","arguments","length","undefined","_classCallCheck","onLeader","bind","_sdk$tokenManager$get","tokenManager","getOptions","autoRenew","autoRemove","syncStorage","electionChannelName","broadcastChannelName","Object","assign","defaultOptions","concat","clientId","syncChannelName","removeNils","started","services","Map","knownServices","forEach","name","svc","createService","set","_createClass","key","value","_onLeader","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","startServices","stop","apply","isLeader","_a","getService","isLeaderRequired","_toConsumableArray","values","some","srv","canStart","requiresLeadership","_start","_callee2","_callee2$","_context2","abrupt","start","_stop","_callee3","_callee3$","_context3","stopServices","get","_startServices","_callee4","_iterator","_step","_step$value","_callee4$","_context4","_createForOfIteratorHelper","entries","s","n","done","_slicedToArray","canStartService","t0","e","f","finish","_stopServices","_callee5","_iterator2","_step2","_callee5$","_context5","isStarted","service","LeaderElectionService","AutoRenewService","SyncStorageService","Error"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/core/ServiceManager/browser.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n} from '../../oidc';\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions,\n  OktaAuthCoreInterface,\n  OktaAuthCoreOptions\n} from '../types';\nimport { AutoRenewService, SyncStorageService, LeaderElectionService } from '../../services';\nimport { removeNils } from '../../util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\n\nexport class ServiceManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\nimplements ServiceManagerInterface \n{\n  private sdk: OktaAuthCoreInterface<M, S, O>;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuthCoreInterface<M, S, O>, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}