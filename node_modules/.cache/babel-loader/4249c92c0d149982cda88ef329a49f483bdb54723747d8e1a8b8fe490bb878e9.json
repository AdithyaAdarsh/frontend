{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError.js';\nclass AuthApiError extends CustomError {\n  constructor(err, xhr, meta) {\n    const message = err.errorSummary;\n    super(message);\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n    if (xhr) {\n      this.xhr = xhr;\n    }\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\nexport { AuthApiError as default };","map":{"version":3,"names":["AuthApiError","CustomError","constructor","err","xhr","meta","message","errorSummary","name","errorCode","errorLink","errorId","errorCauses"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/errors/AuthApiError.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { HttpResponse } from '../http/types';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAgBqB,MAAAA,YAAa,SAAQC,WAAW;EASnDC,YAAYC,GAAa,EAAEC,GAAkB,EAAEC,IAAsC;IACnF,MAAMC,OAAO,GAAGH,GAAG,CAACI,YAAY;IAChC,KAAK,CAACD,OAAO,CAAC;IAEd,IAAI,CAACE,IAAI,GAAG,cAAc;IAC1B,IAAI,CAACD,YAAY,GAAGJ,GAAG,CAACI,YAAY;IACpC,IAAI,CAACE,SAAS,GAAGN,GAAG,CAACM,SAAS;IAC9B,IAAI,CAACC,SAAS,GAAGP,GAAG,CAACO,SAAS;IAC9B,IAAI,CAACC,OAAO,GAAGR,GAAG,CAACQ,OAAO;IAC1B,IAAI,CAACC,WAAW,GAAGT,GAAG,CAACS,WAAW;IAElC,IAAIR,GAAG,EAAE;MACP,IAAI,CAACA,GAAG,GAAGA,GAAG;IACf;IAED,IAAIC,IAAI,EAAE;MACR,IAAI,CAACA,IAAI,GAAGA,IAAI;IACjB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}