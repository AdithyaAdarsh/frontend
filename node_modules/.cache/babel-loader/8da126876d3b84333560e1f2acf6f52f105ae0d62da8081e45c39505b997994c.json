{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from '../../_virtual/_tslib.js';\nimport * as index from '../../crypto/index.js';\nimport { httpRequest } from '../../http/request.js';\nimport { PromiseQueue } from '../../util/PromiseQueue.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport PKCE from '../util/pkce.js';\nimport { createTokenAPI, createEndpoints } from '../factory/api.js';\nimport { TokenManager } from '../TokenManager.js';\nimport { getOAuthUrls } from '../util/oauth.js';\nimport { isLoginRedirect as _isLoginRedirect } from '../util/loginRedirect.js';\nimport '../types/Token.js';\nimport { provideOriginalUri } from './browser.js';\nfunction mixinOAuth(Base, TransactionManagerConstructor) {\n  var _a;\n  var WithOriginalUri = provideOriginalUri(Base);\n  return _a = /*#__PURE__*/function (_WithOriginalUri) {\n    _inherits(OktaAuthOAuth, _WithOriginalUri);\n    var _super = _createSuper(OktaAuthOAuth);\n    function OktaAuthOAuth() {\n      var _this;\n      _classCallCheck(this, OktaAuthOAuth);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: _this.storageManager\n      }, _this.options.transactionManager));\n      _this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n      _this._pending = {\n        handleLogin: false\n      };\n      _this._tokenQueue = new PromiseQueue();\n      _this.token = createTokenAPI(_assertThisInitialized(_this), _this._tokenQueue);\n      _this.tokenManager = new TokenManager(_assertThisInitialized(_this), _this.options.tokenManager);\n      _this.endpoints = createEndpoints(_assertThisInitialized(_this));\n      return _this;\n    }\n    _createClass(OktaAuthOAuth, [{\n      key: \"clearStorage\",\n      value: function clearStorage() {\n        _get(_getPrototypeOf(OktaAuthOAuth.prototype), \"clearStorage\", this).call(this);\n        this.tokenManager.clear();\n      }\n    }, {\n      key: \"isAuthenticated\",\n      value: function () {\n        var _isAuthenticated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var options,\n            _this$tokenManager$ge,\n            autoRenew,\n            autoRemove,\n            shouldRenew,\n            shouldRemove,\n            _this$tokenManager$ge2,\n            accessToken,\n            _this$tokenManager$ge3,\n            idToken,\n            _args = arguments;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                _this$tokenManager$ge = this.tokenManager.getOptions(), autoRenew = _this$tokenManager$ge.autoRenew, autoRemove = _this$tokenManager$ge.autoRemove;\n                shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n                shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n                _this$tokenManager$ge2 = this.tokenManager.getTokensSync(), accessToken = _this$tokenManager$ge2.accessToken;\n                if (!(accessToken && this.tokenManager.hasExpired(accessToken))) {\n                  _context.next = 19;\n                  break;\n                }\n                accessToken = undefined;\n                if (!shouldRenew) {\n                  _context.next = 18;\n                  break;\n                }\n                _context.prev = 8;\n                _context.next = 11;\n                return this.tokenManager.renew('accessToken');\n              case 11:\n                accessToken = _context.sent;\n                _context.next = 16;\n                break;\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](8);\n              case 16:\n                _context.next = 19;\n                break;\n              case 18:\n                if (shouldRemove) {\n                  this.tokenManager.remove('accessToken');\n                }\n              case 19:\n                _this$tokenManager$ge3 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge3.idToken;\n                if (!(idToken && this.tokenManager.hasExpired(idToken))) {\n                  _context.next = 34;\n                  break;\n                }\n                idToken = undefined;\n                if (!shouldRenew) {\n                  _context.next = 33;\n                  break;\n                }\n                _context.prev = 23;\n                _context.next = 26;\n                return this.tokenManager.renew('idToken');\n              case 26:\n                idToken = _context.sent;\n                _context.next = 31;\n                break;\n              case 29:\n                _context.prev = 29;\n                _context.t1 = _context[\"catch\"](23);\n              case 31:\n                _context.next = 34;\n                break;\n              case 33:\n                if (shouldRemove) {\n                  this.tokenManager.remove('idToken');\n                }\n              case 34:\n                return _context.abrupt(\"return\", !!(accessToken && idToken));\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[8, 14], [23, 29]]);\n        }));\n        function isAuthenticated() {\n          return _isAuthenticated.apply(this, arguments);\n        }\n        return isAuthenticated;\n      }()\n    }, {\n      key: \"signInWithRedirect\",\n      value: function () {\n        var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var opts,\n            originalUri,\n            additionalParams,\n            params,\n            _args2 = arguments;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                opts = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n                originalUri = opts.originalUri, additionalParams = __rest(opts, [\"originalUri\"]);\n                if (!this._pending.handleLogin) {\n                  _context2.next = 4;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 4:\n                this._pending.handleLogin = true;\n                _context2.prev = 5;\n                if (originalUri) {\n                  this.setOriginalUri(originalUri);\n                }\n                params = Object.assign({\n                  scopes: this.options.scopes || ['openid', 'email', 'profile']\n                }, additionalParams);\n                _context2.next = 10;\n                return this.token.getWithRedirect(params);\n              case 10:\n                _context2.prev = 10;\n                this._pending.handleLogin = false;\n                return _context2.finish(10);\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this, [[5,, 10, 13]]);\n        }));\n        function signInWithRedirect() {\n          return _signInWithRedirect.apply(this, arguments);\n        }\n        return signInWithRedirect;\n      }()\n    }, {\n      key: \"getUser\",\n      value: function () {\n        var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var _this$tokenManager$ge4, idToken, accessToken;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$tokenManager$ge4 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge4.idToken, accessToken = _this$tokenManager$ge4.accessToken;\n                return _context3.abrupt(\"return\", this.token.getUserInfo(accessToken, idToken));\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n        function getUser() {\n          return _getUser.apply(this, arguments);\n        }\n        return getUser;\n      }()\n    }, {\n      key: \"getIdToken\",\n      value: function getIdToken() {\n        var _this$tokenManager$ge5 = this.tokenManager.getTokensSync(),\n          idToken = _this$tokenManager$ge5.idToken;\n        return idToken ? idToken.idToken : undefined;\n      }\n    }, {\n      key: \"getAccessToken\",\n      value: function getAccessToken() {\n        var _this$tokenManager$ge6 = this.tokenManager.getTokensSync(),\n          accessToken = _this$tokenManager$ge6.accessToken;\n        return accessToken ? accessToken.accessToken : undefined;\n      }\n    }, {\n      key: \"getRefreshToken\",\n      value: function getRefreshToken() {\n        var _this$tokenManager$ge7 = this.tokenManager.getTokensSync(),\n          refreshToken = _this$tokenManager$ge7.refreshToken;\n        return refreshToken ? refreshToken.refreshToken : undefined;\n      }\n    }, {\n      key: \"storeTokensFromRedirect\",\n      value: function () {\n        var _storeTokensFromRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var _yield$this$token$par, tokens, responseType;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.token.parseFromUrl();\n              case 2:\n                _yield$this$token$par = _context4.sent;\n                tokens = _yield$this$token$par.tokens;\n                responseType = _yield$this$token$par.responseType;\n                if (responseType !== 'none') {\n                  this.tokenManager.setTokens(tokens);\n                }\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n        function storeTokensFromRedirect() {\n          return _storeTokensFromRedirect.apply(this, arguments);\n        }\n        return storeTokensFromRedirect;\n      }()\n    }, {\n      key: \"isLoginRedirect\",\n      value: function isLoginRedirect() {\n        return _isLoginRedirect(this);\n      }\n    }, {\n      key: \"isPKCE\",\n      value: function isPKCE() {\n        return !!this.options.pkce;\n      }\n    }, {\n      key: \"hasResponseType\",\n      value: function hasResponseType(responseType) {\n        var hasResponseType = false;\n        if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n          hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n        } else {\n          hasResponseType = this.options.responseType === responseType;\n        }\n        return hasResponseType;\n      }\n    }, {\n      key: \"isAuthorizationCodeFlow\",\n      value: function isAuthorizationCodeFlow() {\n        return this.hasResponseType('code');\n      }\n    }, {\n      key: \"invokeApiMethod\",\n      value: function () {\n        var _invokeApiMethod = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(options) {\n          var accessToken;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                if (options.accessToken) {\n                  _context5.next = 5;\n                  break;\n                }\n                _context5.next = 3;\n                return this.tokenManager.getTokens();\n              case 3:\n                accessToken = _context5.sent.accessToken;\n                options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n              case 5:\n                return _context5.abrupt(\"return\", httpRequest(this, options));\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n        function invokeApiMethod(_x) {\n          return _invokeApiMethod.apply(this, arguments);\n        }\n        return invokeApiMethod;\n      }()\n    }, {\n      key: \"revokeAccessToken\",\n      value: function () {\n        var _revokeAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(accessToken) {\n          var accessTokenKey;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                if (accessToken) {\n                  _context6.next = 6;\n                  break;\n                }\n                _context6.next = 3;\n                return this.tokenManager.getTokens();\n              case 3:\n                accessToken = _context6.sent.accessToken;\n                accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n                this.tokenManager.remove(accessTokenKey);\n              case 6:\n                if (accessToken) {\n                  _context6.next = 8;\n                  break;\n                }\n                return _context6.abrupt(\"return\", Promise.resolve(null));\n              case 8:\n                return _context6.abrupt(\"return\", this.token.revoke(accessToken));\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, this);\n        }));\n        function revokeAccessToken(_x2) {\n          return _revokeAccessToken.apply(this, arguments);\n        }\n        return revokeAccessToken;\n      }()\n    }, {\n      key: \"revokeRefreshToken\",\n      value: function () {\n        var _revokeRefreshToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(refreshToken) {\n          var refreshTokenKey;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                if (refreshToken) {\n                  _context7.next = 6;\n                  break;\n                }\n                _context7.next = 3;\n                return this.tokenManager.getTokens();\n              case 3:\n                refreshToken = _context7.sent.refreshToken;\n                refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n                this.tokenManager.remove(refreshTokenKey);\n              case 6:\n                if (refreshToken) {\n                  _context7.next = 8;\n                  break;\n                }\n                return _context7.abrupt(\"return\", Promise.resolve(null));\n              case 8:\n                return _context7.abrupt(\"return\", this.token.revoke(refreshToken));\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7, this);\n        }));\n        function revokeRefreshToken(_x3) {\n          return _revokeRefreshToken.apply(this, arguments);\n        }\n        return revokeRefreshToken;\n      }()\n    }, {\n      key: \"getSignOutRedirectUrl\",\n      value: function getSignOutRedirectUrl() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var idToken = options.idToken,\n          postLogoutRedirectUri = options.postLogoutRedirectUri,\n          state = options.state;\n        if (!idToken) {\n          idToken = this.tokenManager.getTokensSync().idToken;\n        }\n        if (!idToken) {\n          return '';\n        }\n        if (postLogoutRedirectUri === undefined) {\n          postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n        }\n        var logoutUrl = getOAuthUrls(this).logoutUrl;\n        var idTokenHint = idToken.idToken;\n        var logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n        if (postLogoutRedirectUri) {\n          logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n        }\n        if (state) {\n          logoutUri += '&state=' + encodeURIComponent(state);\n        }\n        return logoutUri;\n      }\n    }, {\n      key: \"signOut\",\n      value: function () {\n        var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(options) {\n          var defaultUri, currentUri, postLogoutRedirectUri, state, accessToken, refreshToken, revokeAccessToken, revokeRefreshToken, logoutUri, sessionClosed, redirectUri;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                options = Object.assign({}, options);\n                defaultUri = window.location.origin;\n                currentUri = window.location.href;\n                postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null : options.postLogoutRedirectUri || this.options.postLogoutRedirectUri || defaultUri;\n                state = options === null || options === void 0 ? void 0 : options.state;\n                accessToken = options.accessToken;\n                refreshToken = options.refreshToken;\n                revokeAccessToken = options.revokeAccessToken !== false;\n                revokeRefreshToken = options.revokeRefreshToken !== false;\n                if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n                  refreshToken = this.tokenManager.getTokensSync().refreshToken;\n                }\n                if (revokeAccessToken && typeof accessToken === 'undefined') {\n                  accessToken = this.tokenManager.getTokensSync().accessToken;\n                }\n                if (!options.idToken) {\n                  options.idToken = this.tokenManager.getTokensSync().idToken;\n                }\n                if (!(revokeRefreshToken && refreshToken)) {\n                  _context8.next = 15;\n                  break;\n                }\n                _context8.next = 15;\n                return this.revokeRefreshToken(refreshToken);\n              case 15:\n                if (!(revokeAccessToken && accessToken)) {\n                  _context8.next = 18;\n                  break;\n                }\n                _context8.next = 18;\n                return this.revokeAccessToken(accessToken);\n              case 18:\n                logoutUri = this.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), {\n                  postLogoutRedirectUri: postLogoutRedirectUri\n                }));\n                if (logoutUri) {\n                  _context8.next = 29;\n                  break;\n                }\n                _context8.next = 22;\n                return this.closeSession();\n              case 22:\n                sessionClosed = _context8.sent;\n                redirectUri = new URL(postLogoutRedirectUri || defaultUri);\n                if (state) {\n                  redirectUri.searchParams.append('state', state);\n                }\n                if (postLogoutRedirectUri === currentUri) {\n                  window.location.href = redirectUri.href;\n                } else {\n                  window.location.assign(redirectUri.href);\n                }\n                return _context8.abrupt(\"return\", sessionClosed);\n              case 29:\n                if (options.clearTokensBeforeRedirect) {\n                  this.tokenManager.clear();\n                } else {\n                  this.tokenManager.addPendingRemoveFlags();\n                }\n                window.location.assign(logoutUri);\n                return _context8.abrupt(\"return\", true);\n              case 32:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8, this);\n        }));\n        function signOut(_x4) {\n          return _signOut.apply(this, arguments);\n        }\n        return signOut;\n      }()\n    }]);\n    return OktaAuthOAuth;\n  }(WithOriginalUri), _a.crypto = index, _a;\n}\nexport { mixinOAuth };","map":{"version":3,"names":["mixinOAuth","Base","TransactionManagerConstructor","WithOriginalUri","provideOriginalUri","_a","_WithOriginalUri","_inherits","OktaAuthOAuth","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","transactionManager","Object","assign","storageManager","options","pkce","DEFAULT_CODE_CHALLENGE_METHOD","PKCE","generateVerifier","computeChallenge","_pending","handleLogin","_tokenQueue","PromiseQueue","token","createTokenAPI","_assertThisInitialized","tokenManager","TokenManager","endpoints","createEndpoints","_createClass","key","value","clearStorage","_get","_getPrototypeOf","prototype","clear","_isAuthenticated","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$tokenManager$ge","autoRenew","autoRemove","shouldRenew","shouldRemove","_this$tokenManager$ge2","accessToken","_this$tokenManager$ge3","idToken","_args","wrap","_callee$","_context","prev","next","undefined","getOptions","onExpiredToken","getTokensSync","hasExpired","renew","sent","t0","remove","t1","abrupt","stop","isAuthenticated","_signInWithRedirect","_callee2","opts","originalUri","additionalParams","params","_args2","_callee2$","_context2","__rest","setOriginalUri","scopes","getWithRedirect","finish","signInWithRedirect","_getUser","_callee3","_this$tokenManager$ge4","_callee3$","_context3","getUserInfo","getUser","getIdToken","_this$tokenManager$ge5","getAccessToken","_this$tokenManager$ge6","getRefreshToken","_this$tokenManager$ge7","refreshToken","_storeTokensFromRedirect","_callee4","_yield$this$token$par","tokens","responseType","_callee4$","_context4","parseFromUrl","setTokens","storeTokensFromRedirect","isLoginRedirect","isPKCE","hasResponseType","isArray","indexOf","isAuthorizationCodeFlow","_invokeApiMethod","_callee5","_callee5$","_context5","getTokens","httpRequest","invokeApiMethod","_x","_revokeAccessToken","_callee6","accessTokenKey","_callee6$","_context6","getStorageKeyByType","Promise","resolve","revoke","revokeAccessToken","_x2","_revokeRefreshToken","_callee7","refreshTokenKey","_callee7$","_context7","revokeRefreshToken","_x3","getSignOutRedirectUrl","postLogoutRedirectUri","state","logoutUrl","getOAuthUrls","idTokenHint","logoutUri","encodeURIComponent","_signOut","_callee8","defaultUri","currentUri","sessionClosed","redirectUri","_callee8$","_context8","window","location","origin","href","closeSession","URL","searchParams","append","clearTokensBeforeRedirect","addPendingRemoveFlags","signOut","_x4","crypto","index"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/mixin/index.ts"],"sourcesContent":["import { httpRequest, RequestOptions } from '../../http';\nimport { OktaAuthConstructor } from '../../base/types';\nimport { \n  PromiseQueue,\n} from '../../util';\nimport { CryptoAPI } from '../../crypto/types';\nimport * as crypto from '../../crypto';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  IDToken,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PkceAPI,\n  PKCETransactionMeta,\n  RefreshToken,\n  SigninWithRedirectOptions,\n  SignoutOptions,\n  SignoutRedirectUrlOptions,\n  TokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport PKCE from '../util/pkce';\nimport { createEndpoints, createTokenAPI } from '../factory';\nimport { TokenManager } from '../TokenManager';\nimport { getOAuthUrls, isLoginRedirect } from '../util';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nimport { provideOriginalUri } from './node';\nexport function mixinOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const WithOriginalUri = provideOriginalUri(Base);\n  return class OktaAuthOAuth extends WithOriginalUri\n  implements OktaAuthOAuthInterface<M, S, O, TM>\n  {\n    static crypto: CryptoAPI = crypto;\n    token: TokenAPI;\n    tokenManager: TokenManager;\n    transactionManager: TM;\n    pkce: PkceAPI;\n    endpoints: Endpoints;\n\n    _pending: { handleLogin: boolean };\n    _tokenQueue: PromiseQueue;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n  \n      this._pending = { handleLogin: false };\n\n      this._tokenQueue = new PromiseQueue();\n\n      this.token = createTokenAPI(this, this._tokenQueue);\n\n      // TokenManager\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n\n      this.endpoints = createEndpoints(this);\n    }\n\n    // inherited from subclass\n    clearStorage(): void {\n      super.clearStorage();\n      \n      // Clear all local tokens\n      this.tokenManager.clear();\n    }\n\n    // Returns true if both accessToken and idToken are not expired\n    // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n    // eslint-disable-next-line complexity\n    async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n      // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n      const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n      let { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('accessToken');\n        }\n      }\n\n      let { idToken } = this.tokenManager.getTokensSync();\n      if (idToken && this.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = await this.tokenManager.renew('idToken') as IDToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('idToken');\n        }\n      }\n\n      return !!(accessToken && idToken);\n    }\n\n\n    async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n      const { originalUri, ...additionalParams } = opts;\n      if(this._pending.handleLogin) { \n        // Don't trigger second round\n        return;\n      }\n\n      this._pending.handleLogin = true;\n      try {\n        // Trigger default signIn redirect flow\n        if (originalUri) {\n          this.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          // TODO: remove this line when default scopes are changed OKTA-343294\n          scopes: this.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        await this.token.getWithRedirect(params);\n      } finally {\n        this._pending.handleLogin = false;\n      }\n    }\n\n    async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n      const { idToken, accessToken } = this.tokenManager.getTokensSync();\n      return this.token.getUserInfo(accessToken, idToken);\n    }\n  \n    getIdToken(): string | undefined {\n      const { idToken } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n  \n    getAccessToken(): string | undefined {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  \n    getRefreshToken(): string | undefined {\n      const { refreshToken } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n  \n    /**\n     * Store parsed tokens from redirect url\n     */\n    async storeTokensFromRedirect(): Promise<void> {\n      const { tokens, responseType } = await this.token.parseFromUrl();\n      if (responseType !== 'none') {\n        this.tokenManager.setTokens(tokens);\n      }\n    }\n  \n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n  \n    hasResponseType(responseType: OAuthResponseType): boolean {\n      let hasResponseType = false;\n      if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n        hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n      } else {\n        hasResponseType = this.options.responseType === responseType;\n      }\n      return hasResponseType;\n    }\n  \n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n    // Escape hatch method to make arbitrary OKTA API call\n    async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n      if (!options.accessToken) {\n        const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        options.accessToken = accessToken?.accessToken;\n      }\n      return httpRequest(this, options);\n    }\n    \n    // Revokes the access token for the application session\n    async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n      if (!accessToken) {\n        accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n        this.tokenManager.remove(accessTokenKey);\n      }\n      // Access token may have been removed. In this case, we will silently succeed.\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(accessToken);\n    }\n\n    // Revokes the refresh token for the application session\n    async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n      if (!refreshToken) {\n        refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n        const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n        this.tokenManager.remove(refreshTokenKey);\n      }\n      // Refresh token may have been removed. In this case, we will silently succeed.\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(refreshToken);\n    }\n\n    getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state,\n      } = options;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (postLogoutRedirectUri === undefined) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken; // a string\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      } \n      // State allows option parameters to be passed to logout redirect uri\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n    // eslint-disable-next-line complexity, max-statements\n    async signOut(options?: SignoutOptions): Promise<boolean> {\n      options = Object.assign({}, options);\n    \n      // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n      const defaultUri = window.location.origin;\n      const currentUri = window.location.href;\n      // Fix for issue/1410 - allow for no postLogoutRedirectUri to be passed, resulting in /logout default behavior\n      //    \"If no Okta session exists, this endpoint has no effect and the browser is redirected immediately to the\n      //    Okta sign-in page or the post_logout_redirect_uri (if specified).\"\n      // - https://developer.okta.com/docs/reference/api/oidc/#logout\n      const postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null :\n        (options.postLogoutRedirectUri\n        || this.options.postLogoutRedirectUri\n        || defaultUri);\n      const state = options?.state;\n      \n    \n      let accessToken = options.accessToken;\n      let refreshToken = options.refreshToken;\n      const revokeAccessToken = options.revokeAccessToken !== false;\n      const revokeRefreshToken = options.revokeRefreshToken !== false;\n    \n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n      }\n\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n      }\n    \n      if (!options.idToken) {\n        options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n\n      if (revokeRefreshToken && refreshToken) {\n        await this.revokeRefreshToken(refreshToken);\n      }\n\n      if (revokeAccessToken && accessToken) {\n        await this.revokeAccessToken(accessToken);\n      }\n\n      const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n      // No logoutUri? This can happen if the storage was cleared.\n      // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n      if (!logoutUri) {\n        // local tokens are cleared once session is closed\n        const sessionClosed = await this.closeSession();   // can throw if the user cannot be signed out\n        const redirectUri = new URL(postLogoutRedirectUri || defaultUri); // during fallback, redirectUri cannot be null\n        if (state) {\n          redirectUri.searchParams.append('state', state);\n        }\n        if (postLogoutRedirectUri === currentUri) {\n          // window.location.reload(); // force a hard reload if URI is not changing\n          window.location.href = redirectUri.href;\n        } else {\n          window.location.assign(redirectUri.href);\n        }\n        return sessionClosed;\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          // Clear all local tokens\n          this.tokenManager.clear();\n        } else {\n          this.tokenManager.addPendingRemoveFlags();\n        }\n        // Flow ends with logout redirect\n        window.location.assign(logoutUri);\n        return true;\n      }\n    }\n\n  };\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}