{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nclass SelectEnrollmentChannel extends Remediator {\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n    if (this.values.authenticator) {\n      const {\n        id,\n        channel\n      } = this.values.authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n    return false;\n  }\n  getNextStep(authClient, context) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return Object.assign(Object.assign({}, common), {\n      authenticator\n    });\n  }\n  getData() {\n    var _a;\n    const remediationValue = this.remediation.value[0].value;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: ((_a = this.values.authenticator) === null || _a === void 0 ? void 0 : _a.channel) || this.values.channel\n      },\n      stateHandle: this.values.stateHandle\n    };\n  }\n  getValuesAfterProceed() {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => Object.assign(Object.assign({}, values), {\n      [valueKey]: this.values[valueKey]\n    }), {});\n  }\n}\nSelectEnrollmentChannel.remediationName = 'select-enrollment-channel';\nexport { SelectEnrollmentChannel };","map":{"version":3,"names":["SelectEnrollmentChannel","Remediator","canRemediate","values","channel","authenticator","id","getNextStep","authClient","context","common","currentAuthenticator","value","Object","assign","getData","remediationValue","remediation","form","_a","stateHandle","getValuesAfterProceed","authenticators","filterKey","trimmedValues","keys","filter","valueKey","reduce","remediationName"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/SelectEnrollmentChannel.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAsBM,MAAOA,uBAAwB,SAAQC,UAAyC;EAGpFC,YAAYA,CAAA;IACV,IAAI,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE;MACvB,OAAO,IAAI;IACZ;IAED,IAAI,IAAI,CAACD,MAAM,CAACE,aAAa,EAAE;MAC7B,MAAM;QAAEC,EAAE;QAAEF;MAAO,CAAE,GAAG,IAAI,CAACD,MAAM,CAACE,aAA8B;MAClE,IAAI,CAAC,CAACC,EAAE,IAAI,CAAC,CAACF,OAAO,EAAE;QACrB,OAAO,IAAI;MACZ;IACF;IAED,OAAO,KAAK;EACb;EAEDG,WAAWA,CAACC,UAAgC,EAAEC,OAAmB;IAC/D,MAAMC,MAAM,GAAG,KAAK,CAACH,WAAW,CAACC,UAAU,EAAEC,OAAO,CAAC;IACrD,MAAMJ,aAAa,GAAGI,OAAO,CAACE,oBAAoB,CAACC,KAAK;IACxD,OACKC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAJ,MAAM,CACT;MAAAL;IAAa,CACb;EACH;EAEDU,OAAOA,CAAA;;IAEL,MAAMC,gBAAgB,GAAG,IAAI,CAACC,WAAY,CAACL,KAAM,CAAC,CAAC,CAAC,CAACA,KAAgC;IACrF,OAAO;MACLP,aAAa,EAAE;QACbC,EAAE,EAAEU,gBAAgB,CAACE,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK;QACxCR,OAAO,EAAE,EAACe,EAAA,OAAI,CAAChB,MAAM,CAACE,aAA+B,cAAAc,EAAA,uBAAAA,EAAA,CAAEf,OAAO,KAAI,IAAI,CAACD,MAAM,CAACC;MAC/E;MACDgB,WAAW,EAAE,IAAI,CAACjB,MAAM,CAACiB;KAE1B;EACF;EAEDC,qBAAqBA,CAAA;IACnB,IAAI,CAAClB,MAAM,GAAG,KAAK,CAACkB,qBAAqB,EAAE;IAC3C,OAAO,IAAI,CAAClB,MAAM,CAACmB,cAAc;IACjC,MAAMC,SAAS,GAAG,IAAI,CAACpB,MAAM,CAACC,OAAO,GAAG,SAAS,GAAG,eAAe;IACnE,IAAIoB,aAAa,GAAGX,MAAM,CAACY,IAAI,CAAC,IAAI,CAACtB,MAAM,CAAC,CAACuB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAKJ,SAAS,CAAC;IACvF,OAAOC,aAAa,CAACI,MAAM,CAAC,CAACzB,MAAM,EAAEwB,QAAQ,KAAKd,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAKX,MAAM;MAAE,CAACwB,QAAQ,GAAG,IAAI,CAACxB,MAAM,CAACwB,QAAQ;IAAG,IAAE,EAAE,CAAC;EACxG;;AA7CM3B,uBAAe,CAAA6B,eAAA,GAAG,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}