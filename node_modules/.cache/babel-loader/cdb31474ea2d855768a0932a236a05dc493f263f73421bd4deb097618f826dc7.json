{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as api from './api.js';\nfunction mixinMyAccount(Base) {\n  return class OktaAuthMyAccount extends Base {\n    constructor(...args) {\n      super(...args);\n      this.myaccount = Object.entries(api).filter(([name]) => name !== 'default').reduce((acc, [name, fn]) => {\n        acc[name] = fn.bind(null, this);\n        return acc;\n      }, {});\n    }\n  };\n}\nexport { mixinMyAccount };","map":{"version":3,"names":["mixinMyAccount","Base","OktaAuthMyAccount","constructor","args","myaccount","Object","entries","api","filter","name","reduce","acc","fn","bind"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/mixin.ts"],"sourcesContent":["import { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n} from '../oidc/types';\nimport { OktaAuthMyAccountInterface } from './types';\n\nimport * as MyAccountMethods from './api';\n\nexport function mixinMyAccount\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  return class OktaAuthMyAccount extends Base implements OktaAuthMyAccountInterface<M, S, O>\n  {\n    myaccount: any;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.myaccount = Object.entries(MyAccountMethods)\n        .filter(([ name ]) => name !== 'default')\n        .reduce((acc, [name, fn]) => {\n          acc[name] = (fn as any).bind(null, this);\n          return acc;\n        }, {});\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;AAYM,SAAUA,cAAcA,CAQ7BC,IAAW;EAEV,OAAO,MAAMC,iBAAkB,SAAQD,IAAI;IAIzCE,YAAY,GAAGC,IAAW;MACxB,KAAK,CAAC,GAAGA,IAAI,CAAC;MAEd,IAAI,CAACC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACC,GAAgB,CAAC,CAC9CC,MAAM,CAAC,CAAC,CAAEC,IAAI,CAAE,KAAKA,IAAI,KAAK,SAAS,CAAC,CACxCC,MAAM,CAAC,CAACC,GAAG,EAAE,CAACF,IAAI,EAAEG,EAAE,CAAC,KAAI;QAC1BD,GAAG,CAACF,IAAI,CAAC,GAAIG,EAAU,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;QACxC,OAAOF,GAAG;MACX,GAAE,CAAE,EAAC;IACT;GACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}