{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { useModerateCount } from './ModerateCountContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    oktaAuth\n  } = useOktaAuth();\n  const [totalImageCount, setTotalImageCount] = useState(0);\n  const {\n    moderateCount,\n    setModerateCount\n  } = useModerateCount();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:5000/image_count').then(response => {\n      setTotalImageCount(response.data.imageCount);\n    }).catch(error => {\n      console.error('Error fetching image count:', error);\n    });\n  }, []);\n  const handleLogin = async () => {\n    if (username && password && moderateCount > 0) {\n      setIsLoading(true);\n      try {\n        // Send a POST request to the /login endpoint with the username, password, and moderateCount\n        const response = await axios.post('http://localhost:5000/login', {\n          username,\n          password,\n          moderate_count: moderateCount\n        });\n        if (response.data.access_token) {\n          // Store the access token securely (localStorage or sessionStorage)\n          localStorage.setItem('token', response.data.access_token);\n\n          // Update the user state or perform any other necessary actions\n          // For example, you can call onLogin(username) to set the user state.\n\n          // Redirect to the protected route (e.g., '/customer_service')\n          navigate('/customer_service');\n        } else {\n          setErrorMessage('Invalid username or password');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        setErrorMessage('Username or password incorrect');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setErrorMessage('Username, password, and a valid number of images to moderate are required');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Number of Images Pending: \", totalImageCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Images to Moderate\",\n        value: moderateCount,\n        onChange: e => setModerateCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"login-button\",\n        disabled: isLoading,\n        children: isLoading ? 'Logging In...' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"register-link\",\n        children: \"Don't have an account? Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"1ngpjMU+fBXVVEEwWzNzzFROAhY=\", false, function () {\n  return [useNavigate, useOktaAuth, useModerateCount];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","useNavigate","useOktaAuth","useModerateCount","jsxDEV","_jsxDEV","Login","_s","navigate","oktaAuth","totalImageCount","setTotalImageCount","moderateCount","setModerateCount","isLoading","setIsLoading","get","then","response","data","imageCount","catch","error","console","handleLogin","username","password","post","moderate_count","access_token","localStorage","setItem","setErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","to","_c","$RefreshReg$"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js"],"sourcesContent":[" import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { useModerateCount } from './ModerateCountContext';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const { oktaAuth } = useOktaAuth();\n  const [totalImageCount, setTotalImageCount] = useState(0);\n  const { moderateCount, setModerateCount } = useModerateCount();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:5000/image_count')\n      .then((response) => {\n        setTotalImageCount(response.data.imageCount);\n      })\n      .catch((error) => {\n        console.error('Error fetching image count:', error);\n      });\n  }, []);\n\n  const handleLogin = async () => {\n    if (username && password && moderateCount > 0) {\n      setIsLoading(true);\n  \n      try {\n        // Send a POST request to the /login endpoint with the username, password, and moderateCount\n        const response = await axios.post('http://localhost:5000/login', {\n          username,\n          password,\n          moderate_count: moderateCount,\n        });\n  \n        if (response.data.access_token) {\n          // Store the access token securely (localStorage or sessionStorage)\n          localStorage.setItem('token', response.data.access_token);\n  \n          // Update the user state or perform any other necessary actions\n          // For example, you can call onLogin(username) to set the user state.\n  \n          // Redirect to the protected route (e.g., '/customer_service')\n          navigate('/customer_service');\n        } else {\n          setErrorMessage('Invalid username or password');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        setErrorMessage('Username or password incorrect');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setErrorMessage('Username, password, and a valid number of images to moderate are required');\n    }\n  };\n  \n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h2>Login</h2>\n        <p>Total Number of Images Pending: {totalImageCount}</p>\n        <input\n          type=\"number\"\n          placeholder=\"Number of Images to Moderate\"\n          value={moderateCount}\n          onChange={(e) => setModerateCount(e.target.value)}\n        />\n        <button\n          onClick={handleLogin}\n          className=\"login-button\"\n          disabled={isLoading}\n        >\n          {isLoading ? 'Logging In...' : 'Log In'}\n        </button>\n        <Link to=\"/register\" className=\"register-link\">\n          Don't have an account? Register here\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}