{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { warn } from '../util/console.js';\nimport { isIE11OrLess } from '../features.js';\nvar storageUtil = {\n  browserHasLocalStorage: function () {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  browserHasSessionStorage: function () {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  testStorageType: function (storageType) {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n  getStorageByType: function (storageType, options) {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n    }\n    return storageProvider;\n  },\n  findStorageType: function (types) {\n    let curType;\n    let nextType;\n    types = types.slice();\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n    return this.findStorageType(types);\n  },\n  getLocalStorage: function () {\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function () {};\n    }\n    return localStorage;\n  },\n  getSessionStorage: function () {\n    return sessionStorage;\n  },\n  getCookieStorage: function (options) {\n    const secure = options.secure;\n    const sameSite = options.sameSite;\n    const sessionCookie = options.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        expiresAt = sessionCookie ? null : expiresAt;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure,\n          sameSite: sameSite\n        });\n      },\n      removeItem: key => {\n        this.storage.delete(key);\n      }\n    };\n    if (!options.useSeparateCookies) {\n      return storage;\n    }\n    return {\n      getItem: function (key) {\n        var data = storage.getItem();\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key) === 0) {\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]);\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function (key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function (key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n  inMemoryStore: {},\n  getInMemoryStorage: function () {\n    return {\n      getItem: key => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n  testStorage: function (storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n  storage: {\n    set: function (name, value, expiresAt, options) {\n      const {\n        sameSite,\n        secure\n      } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n      if (!!Date.parse(expiresAt)) {\n        cookieOptions.expires = new Date(expiresAt);\n      }\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n    get: function (name) {\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n    delete: function (name) {\n      return Cookies.remove(name, {\n        path: '/'\n      });\n    }\n  }\n};\nexport { storageUtil as default };","map":{"version":3,"names":["storageUtil","browserHasLocalStorage","storage","getLocalStorage","testStorage","e","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","options","storageProvider","getCookieStorage","getInMemoryStorage","AuthSdkError","findStorageType","types","curType","nextType","slice","shift","length","warn","isIE11OrLess","window","onstorage","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","get","setItem","key","value","expiresAt","set","removeItem","delete","useSeparateCookies","data","Object","keys","forEach","k","indexOf","replace","JSON","parse","stringify","existingValues","storageKey","valueToStore","inMemoryStore","name","cookieOptions","path","Date","expires","Cookies","arguments","remove"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/browser/browserStorage.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageOptions,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  StorageUtil,\n} from '../storage/types';\nimport { warn } from '../util';\nimport { isIE11OrLess } from '../features';\n\nexport interface CookieStorage extends SimpleStorage {\n  setItem(key: string, value: any, expiresAt?: string | null): void; // can customize expiresAt\n  getItem(key?: string): any; // if no key is passed, all cookies are returned\n  removeItem(key: string); // remove a cookie\n}\n\nexport interface BrowserStorageUtil extends StorageUtil {\n  browserHasLocalStorage(): boolean;\n  browserHasSessionStorage(): boolean;\n  getStorageByType(storageType: StorageType, options: StorageOptions): SimpleStorage;\n  getLocalStorage(): Storage;\n  getSessionStorage(): Storage;\n  getInMemoryStorage(): SimpleStorage;\n  getCookieStorage(options?: StorageOptions): CookieStorage;\n  testStorage(storage: any): boolean;\n  storage: Cookies;\n  inMemoryStore: Record<string, unknown>;\n}\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    // Workaound for synchronization issue of LocalStorage cross tabs in IE11\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function() {};\n    }\n    \n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      },\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      },\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}