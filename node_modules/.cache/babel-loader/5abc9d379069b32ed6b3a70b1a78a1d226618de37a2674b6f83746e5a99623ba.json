{"ast":null,"code":"import _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager.js';\nimport { TRANSACTION_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, ORIGINAL_URI_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport { SavedObject } from '../storage/SavedObject.js';\nfunction createOAuthStorageManager() {\n  return /*#__PURE__*/function (_BaseStorageManager) {\n    _inherits(OAuthStorageManager, _BaseStorageManager);\n    var _super = _createSuper(OAuthStorageManager);\n    function OAuthStorageManager(storageManagerOptions, cookieOptions, storageUtil) {\n      _classCallCheck(this, OAuthStorageManager);\n      return _super.call(this, storageManagerOptions, cookieOptions, storageUtil);\n    }\n    _createClass(OAuthStorageManager, [{\n      key: \"getTransactionStorage\",\n      value: function getTransactionStorage(options) {\n        options = this.getOptionsForSection('transaction', options);\n        logServerSideMemoryStorageWarning(options);\n        var storage = this.getStorage(options);\n        var storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n      }\n    }, {\n      key: \"getSharedTansactionStorage\",\n      value: function getSharedTansactionStorage(options) {\n        options = this.getOptionsForSection('shared-transaction', options);\n        logServerSideMemoryStorageWarning(options);\n        var storage = this.getStorage(options);\n        var storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n      }\n    }, {\n      key: \"getOriginalUriStorage\",\n      value: function getOriginalUriStorage(options) {\n        options = this.getOptionsForSection('original-uri', options);\n        logServerSideMemoryStorageWarning(options);\n        var storage = this.getStorage(options);\n        var storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n      }\n    }]);\n    return OAuthStorageManager;\n  }(BaseStorageManager);\n}\nexport { createOAuthStorageManager };","map":{"version":3,"names":["createOAuthStorageManager","_BaseStorageManager","_inherits","OAuthStorageManager","_super","_createSuper","storageManagerOptions","cookieOptions","storageUtil","_classCallCheck","call","_createClass","key","value","getTransactionStorage","options","getOptionsForSection","logServerSideMemoryStorageWarning","storage","getStorage","storageKey","TRANSACTION_STORAGE_NAME","SavedObject","getSharedTansactionStorage","SHARED_TRANSACTION_STORAGE_NAME","getOriginalUriStorage","ORIGINAL_URI_STORAGE_NAME","BaseStorageManager"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/storage.ts"],"sourcesContent":["import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;SAYgBA,yBAAyBA,CAAA;EAEvC,8BAAAC,mBAAA;IAAAC,SAAA,CAAAC,mBAAA,EAAAF,mBAAA;IAAA,IAAAG,MAAA,GAAAC,YAAA,CAAAF,mBAAA;IAIE,SAAAA,oBAAYG,qBAA4C,EAAEC,aAA4B,EAAEC,WAAwB;MAAAC,eAAA,OAAAN,mBAAA;MAAA,OAAAC,MAAA,CAAAM,IAAA,OACxGJ,qBAAqB,EAAEC,aAAa,EAAEC,WAAW;IACxD;IAAAG,YAAA,CAAAR,mBAAA;MAAAS,GAAA;MAAAC,KAAA,EAED,SAAAC,sBAAsBC,OAAwB;QAC5CA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,aAAa,EAAED,OAAO,CAAC;QAC3DE,iCAAiC,CAACF,OAAO,CAAC;QAC1C,IAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;QACxC,IAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIC,wBAAwB;QACjE,OAAO,IAAIC,WAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;MAC5C;IAAA;MAAAR,GAAA;MAAAC,KAAA,EAED,SAAAU,2BAA2BR,OAAwB;QACjDA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,oBAAoB,EAAED,OAAO,CAAC;QAClEE,iCAAiC,CAACF,OAAO,CAAC;QAC1C,IAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;QACxC,IAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAII,+BAA+B;QACxE,OAAO,IAAIF,WAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;MAC5C;IAAA;MAAAR,GAAA;MAAAC,KAAA,EAED,SAAAY,sBAAsBV,OAAwB;QAC5CA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,cAAc,EAAED,OAAO,CAAC;QAC5DE,iCAAiC,CAACF,OAAO,CAAC;QAC1C,IAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;QACxC,IAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIM,yBAAyB;QAClE,OAAO,IAAIJ,WAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;MAC5C;IAAA;IAAA,OAAAjB,mBAAA;EAAA,EA7BOwB,kBAAkB;AAgC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}