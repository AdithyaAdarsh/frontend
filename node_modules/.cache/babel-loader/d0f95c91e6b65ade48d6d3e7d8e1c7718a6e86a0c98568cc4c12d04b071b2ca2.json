{"ast":null,"code":"import _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar SdkClock = /*#__PURE__*/function () {\n  function SdkClock(localOffset) {\n    _classCallCheck(this, SdkClock);\n    this.localOffset = parseInt(localOffset || 0);\n  }\n  _createClass(SdkClock, [{\n    key: \"now\",\n    value: function now() {\n      var now = (Date.now() + this.localOffset) / 1000;\n      return now;\n    }\n  }], [{\n    key: \"create\",\n    value: function create() {\n      var localOffset = 0;\n      return new SdkClock(localOffset);\n    }\n  }]);\n  return SdkClock;\n}();\nexport { SdkClock as default };","map":{"version":3,"names":["SdkClock","localOffset","_classCallCheck","parseInt","_createClass","key","value","now","Date","create"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/clock.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;IAYqBA,QAAQ;EAG3B,SAAAA,SAAYC,WAAW;IAAAC,eAAA,OAAAF,QAAA;IAErB,IAAI,CAACC,WAAW,GAAGE,QAAQ,CAACF,WAAW,IAAI,CAAC,CAAC;EAC9C;EAAAG,YAAA,CAAAJ,QAAA;IAAAK,GAAA;IAAAC,KAAA,EAUD,SAAAC,IAAA,EAAG;MACD,IAAIA,GAAG,GAAG,CAACC,IAAI,CAACD,GAAG,CAAE,IAAG,IAAI,CAACN,WAAW,IAAI,IAAI;MAChD,OAAOM,GAAG;IACX;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAVD,SAAAG,OAAA,EAAgC;MAE9B,IAAIR,WAAW,GAAG,CAAC;MACnB,OAAO,IAAID,QAAQ,CAACC,WAAW,CAAC;IACjC;EAAA;EAAA,OAAAD,QAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}