{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { isString } from '../util/types.js';\nimport { isInteractionRequiredError } from './util/errors.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { urlParamsToObject } from './util/urlParams.js';\nimport './types/Token.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\nfunction getResponseMode(sdk) {\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\nfunction parseOAuthResponseFromUrl(sdk, options) {\n  options = options || {};\n  if (isString(options)) {\n    options = {\n      url: options\n    };\n  } else {\n    options = options;\n  }\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n  return urlParamsToObject(paramStr);\n}\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\nfunction parseFromUrl(_x, _x2) {\n  return _parseFromUrl.apply(this, arguments);\n}\nfunction _parseFromUrl() {\n  _parseFromUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, options) {\n    var res, state, oauthParams, urls;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = options || {};\n          if (isString(options)) {\n            options = {\n              url: options\n            };\n          } else {\n            options = options;\n          }\n          res = parseOAuthResponseFromUrl(sdk, options);\n          state = res.state;\n          oauthParams = sdk.transactionManager.load({\n            state: state\n          });\n          if (oauthParams) {\n            _context.next = 9;\n            break;\n          }\n          if (!sdk.options.pkce) {\n            _context.next = 8;\n            break;\n          }\n          throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n        case 8:\n          throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n        case 9:\n          urls = oauthParams.urls;\n          delete oauthParams.urls;\n          if (!options.url) {\n            cleanOAuthResponseFromUrl(sdk, options);\n          }\n          return _context.abrupt(\"return\", handleOAuthResponse(sdk, oauthParams, res, urls).catch(function (err) {\n            if (!isInteractionRequiredError(err)) {\n              sdk.transactionManager.clear({\n                state: state\n              });\n            }\n            throw err;\n          }).then(function (res) {\n            sdk.transactionManager.clear({\n              state: state\n            });\n            return res;\n          }));\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _parseFromUrl.apply(this, arguments);\n}\nexport { cleanOAuthResponseFromUrl, getResponseMode, parseFromUrl, parseOAuthResponseFromUrl };","map":{"version":3,"names":["removeHash","sdk","nativeHistory","token","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","title","pathname","search","hash","removeSearch","getResponseMode","defaultResponseMode","options","pkce","responseMode","parseOAuthResponseFromUrl","isString","url","paramStr","substring","indexOf","AuthSdkError","urlParamsToObject","cleanOAuthResponseFromUrl","_x","_x2","_parseFromUrl","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","state","oauthParams","urls","wrap","_callee$","_context","prev","next","transactionManager","load","undefined","abrupt","handleOAuthResponse","catch","err","isInteractionRequiredError","clear","then","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/parseFromUrl.ts"],"sourcesContent":["/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from './types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    state\n  });\n  if (!oauthParams) {\n    if (sdk.options.pkce) {\n      // eslint-disable-next-line max-len\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}