{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Documents/image-moderation-app/frontend/src/DynamoDBData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DynamoDBData.css';\nimport { useLocation } from 'react-router-dom'; // Import useLocation hook\nimport { useModerateCount } from './ModerateCountContext';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamoDBData = ({\n  user\n}) => {\n  _s();\n  const [usernameError, setUsernameError] = useState(false);\n  const [reasonError, setReasonError] = useState(false);\n  const [data, setData] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showReasonPopup, setShowReasonPopup] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [reasonInput, setReasonInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [uuids, setUuids] = useState([]); // State to store UUIDs\n  const {\n    moderateCount\n  } = useModerateCount();\n  const [newImages, setNewImages] = useState([]);\n  const [newImageCount, setNewImageCount] = useState([]);\n  const [fetchedImageUUIDs, setFetchedImageUUIDs] = useState([]);\n  const [imageCount, setImageCount] = useState(0);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n  const {\n    username\n  } = location.state || {};\n  const token = localStorage.getItem('token');\n  const headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n  useEffect(() => {\n    console.log('DynamoDBData component rendered');\n    fetchDataFromServer();\n    // Set to true after initial rendering\n  }, []);\n  const fetchImageCount = () => {\n    axios.get('http://localhost:5000/image_count').then(response => {\n      setImageCount(response.data.imageCount);\n    }).catch(error => {\n      console.error('Error fetching image count:', error);\n    });\n  };\n  const fetchDataFromServer = () => {\n    // Retrieve the session token and username from local storage\n    const sessionToken = localStorage.getItem('token');\n    console.log(\"The session token is:\", sessionToken);\n    if (!sessionToken) {\n      console.error('Session token not found');\n      return;\n    }\n    const headers = {\n      'Authorization': `Bearer ${sessionToken}`\n    };\n    axios.get(`http://localhost:5000/fetch_new_images?moderate_count=${moderateCount}`, {\n      headers\n    }).then(response => {\n      if (Array.isArray(response.data)) {\n        setData(response.data);\n        const uuidList = response.data.map(item => item.UUID);\n        setUuids(uuidList);\n        console.log('the moderate_count is :', moderateCount);\n        console.log(\"UUID List:\", uuidList);\n      } else {\n        console.error(\"Response data is not an array:\", response.data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    }).finally(() => {\n      setIsLoading(false); // Reset loading state\n    });\n  };\n\n  const fetchImagesByUUIDs = uuidList => {\n    axios.post('http://localhost:5000/fetch_images_by_uuid', {\n      uuids: uuidList\n    }).then(response => {\n      // Update state with the received images\n      setData(response.data);\n    }).catch(error => {\n      console.error('Error fetching images:', error);\n    });\n  };\n  const resetFetchedImageUUIDs = () => {\n    setFetchedImageUUIDs([]); // Reset the fetched image UUIDs in local state\n    // Get the token from local storage or wherever you are storing it\n    const token = localStorage.getItem('token');\n\n    // Check if the token is available\n    if (token) {\n      const headers = {\n        'Authorization': `Bearer ${token}`\n      };\n\n      // Send a request to the server to clear the fetched UUIDs on the backend\n      axios.post('http://localhost:5000/reset_fetched_uuids', null, {\n        headers\n      }).then(response => {\n        console.log('Fetched UUIDs reset:', response.data);\n      }).catch(error => {\n        console.error('Error resetting fetched UUIDs:', error);\n      });\n    } else {\n      console.error('Token not available.');\n    }\n  };\n  const handleManualReview = item => {\n    setSelectedItem(item);\n    setShowReasonPopup(true);\n    setReasonInput('');\n\n    // Set the initial status based on the current status of the item\n    const initialStatus = item.Manual_Status || item.Moderation_Results;\n    setSelectedStatus(initialStatus);\n  };\n  const handlePopupCancel = () => {\n    setShowReasonPopup(false);\n    setSelectedItem(null);\n  };\n  const handlePageRefresh = () => {\n    resetFetchedImageUUIDs();\n    // You can also perform any other necessary cleanup here\n  };\n\n  useEffect(() => {\n    //fetchDataFromServer();\n\n    // Add an event listener for page refresh\n    window.addEventListener('beforeunload', handlePageRefresh);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      resetFetchedImageUUIDs(); // Reset fetched UUIDs when the component unmounts\n      window.removeEventListener('beforeunload', handlePageRefresh);\n    };\n  }, []);\n  const fetchNewImages = () => {\n    // Get the JWT token from your storage (localStorage or sessionStorage)\n    const token = localStorage.getItem('token'); // Replace with your storage method\n\n    // Configure headers with the JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get(`http://localhost:5000/fetch_new_images?count=${newImageCount}&uuids=${uuids.join(',')}`, {\n      headers\n    }).then(response => {\n      if (response.data.message) {\n        alert(response.data.message);\n      } else {\n        const newImagesData = response.data;\n        setNewImages(prevImages => [...prevImages, ...newImagesData]);\n      }\n    }).catch(error => {\n      console.error('Error fetching new images:', error);\n    });\n  };\n  const handleReasonSubmit = status => {\n    if (selectedItem && reasonInput.trim() !== '') {\n      // Reset error states\n      setUsernameError(false);\n      setReasonError(false);\n      const timestamp = new Date().toISOString();\n      const formattedTimestamp = `(${timestamp})`;\n      const updatedReason = `${selectedItem.reason_for_change || ''}\\n${reasonInput} ${formattedTimestamp} (by ${username || usernameInput})`;\n      const updatedItem = {\n        uuid: selectedItem.UUID,\n        manual_status: status,\n        // Use the provided status (Approved or Rejected)\n        reason_for_change: updatedReason,\n        username: username || usernameInput\n      };\n      axios.post('http://localhost:5000/update_manual_status', updatedItem).then(response => {\n        console.log('Update successful:', response.data);\n\n        // Fetch images by UUIDs using the POST method\n        console.log(\"The uuids are:\", uuids);\n        fetchImagesByUUIDs(uuids);\n\n        // Check if the selectedItem is in the newImages array and update its status\n        const updatedNewImages = newImages.map(img => img.UUID === selectedItem.UUID ? {\n          ...img,\n          Manual_Status: status,\n          Reason_For_Change: updatedReason,\n          username: updatedItem.username\n        } : img);\n\n        // Update the state with the updated newImages\n        setNewImages(updatedNewImages);\n        setShowReasonPopup(false);\n        setSelectedItem(null);\n      }).catch(error => {\n        console.error('Error updating status:', error);\n      });\n    } else {\n      // Set error states if inputs are empty\n      if (!usernameInput.trim()) {\n        setUsernameError(true);\n      }\n      if (!reasonInput.trim()) {\n        setReasonError(true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Moderation Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: fetchImageCount,\n        children: [\"Refresh Image Count: \", imageCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-input-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newImageCount,\n          onChange: event => setNewImageCount(parseInt(event.target.value)),\n          placeholder: \"Enter number of new images\",\n          className: \"new-images-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fetch-button\",\n          onClick: fetchNewImages,\n          children: \"Fetch New Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"AWS Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TenantID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UUID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manual Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason for Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Change Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [(data === null || data === void 0 ? void 0 : data.length) > 0 ? data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.file_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: item.Moderation_Results === 'Approved' ? 'approved text-success' : 'text-danger',\n            children: item.Moderation_Results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.TenantID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.UUID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Reason && JSON.parse(item.Reason).moderation_labels ? JSON.parse(item.Reason).moderation_labels.map(label => label.Name).join(', ') : 'NIL'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-label ${item.Manual_Status === 'Approved' ? 'approved' : item.Manual_Status === 'Pending' // Apply the \"pending\" class when Manual_Status is \"Pending\"\n              ? 'pending' : 'rejected'}`,\n              children: item.Manual_Status ? item.Manual_Status : item.Moderation_Results\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Reason_For_Change ? item.Reason_For_Change.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: line\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this)) : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`,\n              alt: `Preview of ${item.file_name}`,\n              className: \"preview-image\",\n              onClick: () => setSelectedImage(`https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleManualReview(item),\n              className: \"button\",\n              children: \"Change Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), (newImages === null || newImages === void 0 ? void 0 : newImages.length) > 0 && newImages.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.file_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: item.Moderation_Results === 'Approved' ? 'approved text-success' : 'text-danger',\n            children: item.Moderation_Results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.TenantID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.UUID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Reason && JSON.parse(item.Reason).moderation_labels ? JSON.parse(item.Reason).moderation_labels.map((label, labelIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [label.Name, \", \"]\n            }, labelIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)) : 'NIL'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-label ${item.Manual_Status === 'Approved' ? 'approved' : 'rejected'}`,\n              children: item.Manual_Status ? item.Manual_Status : item.Moderation_Results\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Reason_For_Change ? item.Reason_For_Change.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: line\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)) : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`,\n              alt: `Preview of ${item.file_name}`,\n              className: \"preview-image\",\n              onClick: () => setSelectedImage(`https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleManualReview(item),\n              className: \"button\",\n              children: \"Change Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 9\n          }, this)]\n        }, `new-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 3\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Selected Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedImage(null),\n        children: \"Close Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this), showReasonPopup && selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handlePopupCancel,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reason for Status Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `input-container ${usernameError ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"usernameInput\",\n              children: \"Name:\\xA0\\xA0\\xA0\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"usernameInput\",\n              value: usernameInput,\n              onChange: event => setUsernameInput(event.target.value),\n              placeholder: \"Enter your username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 7\n            }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: \"Please enter a username.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `input-container ${reasonError ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reasonInput\",\n              children: \"Reason:\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"reasonInput\",\n              value: reasonInput,\n              onChange: event => setReasonInput(event.target.value),\n              placeholder: \"Enter reason here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 7\n            }, this), reasonError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: \"Please enter a reason.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReasonSubmit('Approved'),\n              className: \"approve-button\",\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReasonSubmit('Rejected'),\n              className: \"reject-button\",\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePopupCancel,\n              className: \"cancel\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 1\n  }, this);\n};\n_s(DynamoDBData, \"WtFitoKihTiCD7MOmeizZlC1HcU=\", false, function () {\n  return [useModerateCount, useLocation];\n});\n_c = DynamoDBData;\nexport default DynamoDBData;\nvar _c;\n$RefreshReg$(_c, \"DynamoDBData\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useModerateCount","jwt_decode","jsxDEV","_jsxDEV","DynamoDBData","user","_s","usernameError","setUsernameError","reasonError","setReasonError","data","setData","selectedImage","setSelectedImage","showReasonPopup","setShowReasonPopup","selectedItem","setSelectedItem","reasonInput","setReasonInput","usernameInput","setUsernameInput","uuids","setUuids","moderateCount","newImages","setNewImages","newImageCount","setNewImageCount","fetchedImageUUIDs","setFetchedImageUUIDs","imageCount","setImageCount","selectedStatus","setSelectedStatus","loading","setLoading","location","username","state","token","localStorage","getItem","headers","console","log","fetchDataFromServer","fetchImageCount","get","then","response","catch","error","sessionToken","Array","isArray","uuidList","map","item","UUID","finally","setIsLoading","fetchImagesByUUIDs","post","resetFetchedImageUUIDs","handleManualReview","initialStatus","Manual_Status","Moderation_Results","handlePopupCancel","handlePageRefresh","window","addEventListener","removeEventListener","fetchNewImages","Authorization","join","message","alert","newImagesData","prevImages","handleReasonSubmit","status","trim","timestamp","Date","toISOString","formattedTimestamp","updatedReason","reason_for_change","updatedItem","uuid","manual_status","updatedNewImages","img","Reason_For_Change","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","event","parseInt","target","placeholder","length","index","file_name","TenantID","Reason","JSON","parse","moderation_labels","label","Name","split","line","src","alt","labelIndex","htmlFor","id","_c","$RefreshReg$"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/src/DynamoDBData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DynamoDBData.css';\nimport { useLocation } from 'react-router-dom'; // Import useLocation hook\nimport { useModerateCount } from './ModerateCountContext';\nimport jwt_decode from 'jwt-decode';\n\n\n\nconst DynamoDBData = ({ user }) => {\n  const [usernameError, setUsernameError] = useState(false);\n  const [reasonError, setReasonError] = useState(false);\n  const [data, setData] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showReasonPopup, setShowReasonPopup] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [reasonInput, setReasonInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [uuids, setUuids] = useState([]); // State to store UUIDs\n  const { moderateCount } = useModerateCount();\n  const [newImages, setNewImages] = useState([]); \n  const [newImageCount, setNewImageCount] = useState([]);\n  const [fetchedImageUUIDs, setFetchedImageUUIDs] = useState([]);\n  const [imageCount, setImageCount] = useState(0);\n  const [selectedStatus, setSelectedStatus] = useState(''); \n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n  const { username } = location.state || {};\n  const token = localStorage.getItem('token'); \n  \n  const headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n  useEffect(() => {\n    console.log('DynamoDBData component rendered');\n      fetchDataFromServer();\n   // Set to true after initial rendering\n  \n  }, []);\n\n  const fetchImageCount = () => {\n    axios.get('http://localhost:5000/image_count')\n      .then(response => {\n        setImageCount(response.data.imageCount);\n      })\n      .catch(error => {\n        console.error('Error fetching image count:', error);\n      });\n  };\n\n\n\n  const fetchDataFromServer = () => {\n    // Retrieve the session token and username from local storage\n    const sessionToken = localStorage.getItem('token');\n    console.log(\"The session token is:\", sessionToken);\n  \n    if (!sessionToken) {\n      console.error('Session token not found');\n      return;\n    }\n  \n    const headers = {\n      'Authorization': `Bearer ${sessionToken}`,\n    };\n  \n    axios.get(`http://localhost:5000/fetch_new_images?moderate_count=${moderateCount}`, { headers })\n      .then(response => {\n        if (Array.isArray(response.data)) {\n          setData(response.data);\n          const uuidList = response.data.map(item => item.UUID);\n          setUuids(uuidList);\n          console.log('the moderate_count is :', moderateCount);\n          console.log(\"UUID List:\", uuidList);\n        } else {\n          console.error(\"Response data is not an array:\", response.data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      })\n      .finally(() => {\n        setIsLoading(false); // Reset loading state\n      });\n  };\n  \n  \n  \n  \n  \n  \n\n  const fetchImagesByUUIDs = (uuidList) => {\n    axios\n      .post('http://localhost:5000/fetch_images_by_uuid', { uuids: uuidList })\n      .then(response => {\n        // Update state with the received images\n        setData(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching images:', error);\n      });\n  };\n\n  const resetFetchedImageUUIDs = () => {\n    setFetchedImageUUIDs([]); // Reset the fetched image UUIDs in local state\n    // Get the token from local storage or wherever you are storing it\n    const token = localStorage.getItem('token');\n    \n    // Check if the token is available\n    if (token) {\n      const headers = {\n        'Authorization': `Bearer ${token}`\n      };\n      \n      // Send a request to the server to clear the fetched UUIDs on the backend\n      axios.post('http://localhost:5000/reset_fetched_uuids', null, { headers })\n        .then(response => {\n          console.log('Fetched UUIDs reset:', response.data);\n        })\n        .catch(error => {\n          console.error('Error resetting fetched UUIDs:', error);\n        });\n    } else {\n      console.error('Token not available.');\n    }\n  };\n  \n  \n  \n\n\n\n  const handleManualReview = (item) => {\n    setSelectedItem(item);\n    setShowReasonPopup(true);\n    setReasonInput('');\n\n    // Set the initial status based on the current status of the item\n    const initialStatus = item.Manual_Status || item.Moderation_Results;\n    setSelectedStatus(initialStatus);\n  };\n\n\n  const handlePopupCancel = () => {\n    setShowReasonPopup(false);\n    setSelectedItem(null);\n  };\n\n  const handlePageRefresh = () => {\n    resetFetchedImageUUIDs();\n    // You can also perform any other necessary cleanup here\n  };\n\n  useEffect(() => {\n    //fetchDataFromServer();\n  \n    // Add an event listener for page refresh\n    window.addEventListener('beforeunload', handlePageRefresh);\n  \n    // Remove the event listener when the component unmounts\n    return () => {\n      resetFetchedImageUUIDs(); // Reset fetched UUIDs when the component unmounts\n      window.removeEventListener('beforeunload', handlePageRefresh);\n    };\n  }, []);\n\n\n  const fetchNewImages = () => {\n    // Get the JWT token from your storage (localStorage or sessionStorage)\n    const token = localStorage.getItem('token'); // Replace with your storage method\n  \n    // Configure headers with the JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n  \n    axios.get(`http://localhost:5000/fetch_new_images?count=${newImageCount}&uuids=${uuids.join(',')}`, { headers })\n      .then(response => {\n        if (response.data.message) {\n          alert(response.data.message);\n        } else {\n          const newImagesData = response.data;\n          setNewImages(prevImages => [...prevImages, ...newImagesData]);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching new images:', error);\n      });\n  };\n  \n  \n  \n\n  const handleReasonSubmit = (status) => {\n    if (selectedItem && reasonInput.trim() !== '') {\n      // Reset error states\n      setUsernameError(false);\n      setReasonError(false);\n  \n      const timestamp = new Date().toISOString();\n      const formattedTimestamp = `(${timestamp})`;\n      const updatedReason = `${selectedItem.reason_for_change || ''}\\n${reasonInput} ${formattedTimestamp} (by ${username|| usernameInput})`;\n  \n      const updatedItem = {\n        uuid: selectedItem.UUID,\n        manual_status: status, // Use the provided status (Approved or Rejected)\n        reason_for_change: updatedReason,\n        username: username || usernameInput,\n      };\n  \n      axios\n        .post('http://localhost:5000/update_manual_status', updatedItem)\n        .then(response => {\n          console.log('Update successful:', response.data);\n  \n          // Fetch images by UUIDs using the POST method\n          console.log(\"The uuids are:\", uuids);\n          fetchImagesByUUIDs(uuids);\n  \n          // Check if the selectedItem is in the newImages array and update its status\n          const updatedNewImages = newImages.map(img =>\n            img.UUID === selectedItem.UUID\n              ? { ...img, Manual_Status: status, Reason_For_Change: updatedReason, username: updatedItem.username }\n              : img\n          );\n  \n          // Update the state with the updated newImages\n          setNewImages(updatedNewImages);\n  \n          setShowReasonPopup(false);\n          setSelectedItem(null);\n        })\n        .catch(error => {\n          console.error('Error updating status:', error);\n        });\n    } else {\n      // Set error states if inputs are empty\n      if (!usernameInput.trim()) {\n        setUsernameError(true);\n      }\n      if (!reasonInput.trim()) {\n        setReasonError(true);\n      }\n    }\n  };\n  \n   \n  \n  \n\n  return (\n<div className=\"container\">\n  <h1>Moderation Results</h1>\n  \n  <div className=\"center-buttons\">\n    <button className=\"refresh-button\" onClick={fetchImageCount}>\n      Refresh Image Count: {imageCount}\n    </button>\n    <br></br>\n    <div className=\"center-input-button\">\n        <input\n          type=\"number\"\n          value={newImageCount}\n          onChange={event => setNewImageCount(parseInt(event.target.value))}\n          placeholder=\"Enter number of new images\"\n          className=\"new-images-input\"\n        />\n        <button className=\"fetch-button\" onClick={fetchNewImages}>\n          Fetch New Images\n        </button>\n      </div>\n  </div>\n  <table>\n    <thead>\n      <tr>\n        <th>File Name</th>\n        <th>AWS Results</th>\n        <th>TenantID</th>\n        <th>UUID</th>\n        <th>Reason</th>\n        <th>Manual Status</th>\n        <th>Reason for Change</th>\n        <th>Image</th>\n        <th>Change Status</th>\n      </tr>\n    </thead>\n    <tbody>\n          {data?.length > 0 ? (\n            data.map((item, index) => (\n              <tr key={index}>\n                <td>{item.file_name}</td>\n                <td className={item.Moderation_Results === 'Approved' ? 'approved text-success' : 'text-danger'}>\n                  {item.Moderation_Results}\n                </td>\n                <td>{item.TenantID}</td>\n                <td>{item.UUID}</td>\n                <td>\n                  {item.Reason && JSON.parse(item.Reason).moderation_labels ? JSON.parse(item.Reason).moderation_labels.map(label => label.Name).join(', ') : 'NIL'}\n                </td>\n                <td>\n                <span\n                    className={`status-label ${\n                      item.Manual_Status === 'Approved'\n                        ? 'approved'\n                        : item.Manual_Status === 'Pending' // Apply the \"pending\" class when Manual_Status is \"Pending\"\n                        ? 'pending' \n                        : 'rejected'\n                    }`}\n                    >\n\n                    {item.Manual_Status ? item.Manual_Status : item.Moderation_Results}\n                  </span>\n                </td>\n                <td>\n                  {item.Reason_For_Change ? item.Reason_For_Change.split('\\n').map((line, index) => (\n                    <div key={index}>{line}</div>\n                  )) : 'N/A'}\n                </td>\n                <td>\n                  <img\n                    src={`https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`}\n                    alt={`Preview of ${item.file_name}`}\n                    className=\"preview-image\"\n                    onClick={() =>\n                      setSelectedImage(`https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`)\n                    }\n                  />\n                </td>\n                <td>\n                  <button onClick={() => handleManualReview(item)} className=\"button\">\n                    Change Status\n                  </button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              \n            </tr>\n          )}\n    {newImages?.length > 0 &&\n    newImages.map((item, index) => (\n      <tr key={`new-${index}`}>\n        <td>{item.file_name}</td>\n        <td\n          className={\n            item.Moderation_Results === 'Approved'\n              ? 'approved text-success'\n              : 'text-danger'\n          }\n        >\n          {item.Moderation_Results}\n        </td>\n        <td>{item.TenantID}</td>\n        <td>{item.UUID}</td>\n        <td>\n          {item.Reason &&\n          JSON.parse(item.Reason).moderation_labels ? (\n            JSON.parse(item.Reason).moderation_labels.map(\n              (label, labelIndex) => (\n                <span key={labelIndex}>{label.Name}, </span>\n              )\n            )\n          ) : (\n            'NIL'\n          )}\n        </td>\n        <td>\n          <span\n            className={`status-label ${\n              item.Manual_Status === 'Approved'\n                ? 'approved'\n                : 'rejected'\n            }`}\n          >\n            {item.Manual_Status ? item.Manual_Status : item.Moderation_Results}\n          </span>\n        </td>\n        <td>\n          {item.Reason_For_Change\n            ? item.Reason_For_Change.split('\\n').map((line, index) => (\n                <div key={index}>{line}</div>\n              ))\n            : 'N/A'}\n        </td>\n        <td>\n          <img\n            src={`https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`}\n            alt={`Preview of ${item.file_name}`}\n            className=\"preview-image\"\n            onClick={() =>\n              setSelectedImage(\n                `https://gc-cms-test-bucket.s3.ap-south-1.amazonaws.com/${item.file_name}`\n              )\n            }\n          />\n        </td>\n        <td>\n          <button onClick={() => handleManualReview(item)} className=\"button\">\n            Change Status\n          </button>\n        </td>\n      </tr>\n    ))}\n        </tbody>\n      </table>\n      {selectedImage && (\n        <div className=\"image-preview-popup\">\n          <img src={selectedImage} alt=\"Selected Preview\" />\n          <button onClick={() => setSelectedImage(null)}>Close Preview</button>\n        </div>\n      )}\n      {showReasonPopup && selectedItem && (\n        <div className=\"popup\">\n  <div className=\"popup-content\">\n    <span className=\"close\" onClick={handlePopupCancel}>&times;</span>\n    <h2>Reason for Status Change</h2>\n    <div className=\"popup-form\">\n    <div className={`input-container ${usernameError ? 'error' : ''}`}>\n      <label htmlFor=\"usernameInput\">Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n      <input\n        type=\"text\"\n        id=\"usernameInput\"\n        value={usernameInput}\n        onChange={event => setUsernameInput(event.target.value)}\n        placeholder=\"Enter your username\"\n      />\n      {usernameError && <div className=\"error-message\">Please enter a username.</div>}\n    </div>\n    <div className={`input-container ${reasonError ? 'error' : ''}`}>\n      <label htmlFor=\"reasonInput\">Reason:&nbsp;&nbsp;</label>\n      <textarea\n        id=\"reasonInput\"\n        value={reasonInput}\n        onChange={event => setReasonInput(event.target.value)}\n        placeholder=\"Enter reason here...\"\n      />\n      {reasonError && <div className=\"error-message\">Please enter a reason.</div>}\n    </div>\n      <div className=\"popup-buttons\">\n  <button onClick={() => handleReasonSubmit('Approved')} className=\"approve-button\">\n    Approve\n  </button>\n  <button onClick={() => handleReasonSubmit('Rejected')} className=\"reject-button\">\n    Reject\n  </button>\n  <button onClick={handlePopupCancel} className=\"cancel\">Cancel</button>\n</div>\n    </div>\n  </div>\n</div>\n\n      )}\n    </div>\n  );\n};\n\nexport default DynamoDBData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}