{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../../errors/AuthSdkError.js';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams.js';\nfunction prepareParams(params) {\n  params = Object.assign(Object.assign({}, params), {\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0\n  });\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    throw new AuthSdkError('acr_values must be specified');\n  }\n  delete params.scopes;\n  delete params.nonce;\n  return params;\n}\nfunction prepareEnrollAuthenticatorParams(sdk, options) {\n  return prepareParams(Object.assign(Object.assign({}, getDefaultEnrollAuthenticatorParams(sdk)), options));\n}\nexport { prepareEnrollAuthenticatorParams };","map":{"version":3,"names":["prepareParams","params","Object","assign","responseType","prompt","maxAge","enrollAmrValues","AuthSdkError","acrValues","scopes","nonce","prepareEnrollAuthenticatorParams","sdk","options","getDefaultEnrollAuthenticatorParams"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/util/prepareEnrollAuthenticatorParams.ts"],"sourcesContent":["/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams';\n\nfunction prepareParams(\n  params: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  params = {\n    ...params,\n    // forced params:\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0,\n  };\n\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    // `acr_values` is required and should equal 'urn:okta:2fa:any:ifpossible'\n    // But this can be changed in future\n    throw new AuthSdkError('acr_values must be specified');\n  }\n\n  // `scope`, `nonce` must be omitted\n  delete params.scopes;\n  delete params.nonce;\n\n  return params;\n}\n\n// Prepares params for a call to /authorize\nexport function prepareEnrollAuthenticatorParams(\n  sdk: OktaAuthOAuthInterface,\n  options: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  return prepareParams({\n    ...getDefaultEnrollAuthenticatorParams(sdk),\n    ...options\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;AAiBA,SAASA,aAAaA,CACpBC,MAAkC;EAElCA,MAAM,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACDF,MAAM;IAETG,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE,sBAAsB;IAC9BC,MAAM,EAAE;EAAC,EACV;EAED,IAAI,CAACL,MAAM,CAACM,eAAe,EAAE;IAC3B,MAAM,IAAIC,YAAY,CAAC,qCAAqC,CAAC;EAC9D;EACD,IAAI,CAACP,MAAM,CAACQ,SAAS,EAAE;IAGrB,MAAM,IAAID,YAAY,CAAC,8BAA8B,CAAC;EACvD;EAGD,OAAOP,MAAM,CAACS,MAAM;EACpB,OAAOT,MAAM,CAACU,KAAK;EAEnB,OAAOV,MAAM;AACf;AAGgB,SAAAW,gCAAgCA,CAC9CC,GAA2B,EAC3BC,OAAmC;EAEnC,OAAOd,aAAa,CAAAE,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACfY,mCAAmC,CAACF,GAAG,CAAC,GACxCC,OAAO,EACV;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}