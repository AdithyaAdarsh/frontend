{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeNils, clone } from '../util/object.js';\nimport { isString } from '../util/types.js';\nimport { isAbsoluteUrl } from '../util/url.js';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants.js';\nimport AuthApiError from '../errors/AuthApiError.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport OAuthError from '../errors/OAuthError.js';\nconst parseInsufficientAuthenticationError = header => {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n  return header.split(',').map(part => part.trim()).map(part => part.split('=')).reduce((acc, curr) => {\n    acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n    return acc;\n  }, {});\n};\nconst formatError = (sdk, resp) => {\n  var _a, _b;\n  let err;\n  let serverErr = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description);\n  } else {\n    err = new AuthApiError(serverErr, resp);\n  }\n  if ((resp === null || resp === void 0 ? void 0 : resp.status) === 403 && !!((_a = resp === null || resp === void 0 ? void 0 : resp.headers) === null || _a === void 0 ? void 0 : _a['www-authenticate'])) {\n    const {\n      error,\n      error_description,\n      max_age,\n      acr_values\n    } = parseInsufficientAuthenticationError((_b = resp === null || resp === void 0 ? void 0 : resp.headers) === null || _b === void 0 ? void 0 : _b['www-authenticate']);\n    if (error === 'insufficient_authentication_context') {\n      err = new AuthApiError({\n        errorSummary: error,\n        errorCauses: [{\n          errorSummary: error_description\n        }]\n      }, resp, Object.assign({\n        max_age: +max_age\n      }, acr_values && {\n        acr_values\n      }));\n    }\n  }\n  return err;\n};\nfunction httpRequest(sdk, options) {\n  options = options || {};\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n  var url = options.url,\n    method = options.method,\n    args = options.args,\n    saveAuthnState = options.saveAuthnState,\n    accessToken = options.accessToken,\n    withCredentials = options.withCredentials === true,\n    storageUtil = sdk.options.storageUtil,\n    storage = storageUtil.storage,\n    httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers = Object.assign({\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }, oktaUserAgentHeader);\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers);\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n  var ajaxOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n  var err, res;\n  return sdk.options.httpRequestClient(method, url, ajaxOptions).then(function (resp) {\n    res = resp.responseText;\n    if (res && isString(res)) {\n      res = JSON.parse(res);\n      if (res && typeof res === 'object' && !res.headers) {\n        if (Array.isArray(res)) {\n          res.forEach(item => {\n            item.headers = resp.headers;\n          });\n        } else {\n          res.headers = resp.headers;\n        }\n      }\n    }\n    if (saveAuthnState) {\n      if (!res.stateToken) {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n    }\n    if (res && res.stateToken && res.expiresAt) {\n      storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies);\n    }\n    if (res && options.cacheResponse) {\n      httpCache.updateStorage(url, {\n        expiresAt: Math.floor(Date.now() / 1000) + DEFAULT_CACHE_DURATION,\n        response: res\n      });\n    }\n    return res;\n  }).catch(function (resp) {\n    err = formatError(sdk, resp);\n    if (err.errorCode === 'E0000011') {\n      storage.delete(STATE_TOKEN_KEY_NAME);\n    }\n    throw err;\n  });\n}\nfunction get(sdk, url, options) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\nfunction post(sdk, url, args, options) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\nexport { get, httpRequest, post };","map":{"version":3,"names":["parseInsufficientAuthenticationError","header","AuthSdkError","split","map","part","trim","reduce","acc","curr","replace","formatError","sdk","resp","err","serverErr","responseText","isString","JSON","parse","e","errorSummary","status","options","transformErrorXHR","clone","error","error_description","OAuthError","AuthApiError","_a","headers","max_age","acr_values","_b","errorCauses","Object","assign","httpRequest","httpRequestInterceptors","interceptor","url","method","args","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","storageManager","getHttpCache","cookies","cacheResponse","cacheContents","getStorage","cachedResponse","Date","now","expiresAt","Promise","resolve","response","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","removeNils","ajaxOptions","data","undefined","res","httpRequestClient","then","Array","isArray","forEach","item","stateToken","delete","STATE_TOKEN_KEY_NAME","set","updateStorage","Math","floor","DEFAULT_CACHE_DURATION","catch","errorCode","get","isAbsoluteUrl","getIssuerOrigin","getOptions","post","postOptions"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/http/request.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData,\n  HttpResponse\n} from './types';\nimport { AuthApiError, OAuthError, AuthSdkError, APIError } from '../errors';\n\ntype InsufficientAuthenticationError = {\n  error: string;\n  // eslint-disable-next-line camelcase\n  error_description: string;\n  // eslint-disable-next-line camelcase\n  max_age: string;\n  // eslint-disable-next-line camelcase\n  acr_values: string;\n};\n\nconst parseInsufficientAuthenticationError = (\n  header: string\n): InsufficientAuthenticationError => {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n\n  return header\n    .split(',')\n    .map(part => part.trim())\n    .map(part => part.split('='))\n    .reduce((acc, curr) => {\n      // unwrap quotes from value\n      acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n      return acc;\n    }, {}) as InsufficientAuthenticationError;\n};\n\nconst formatError = (sdk: OktaAuthHttpInterface, resp: HttpResponse): AuthApiError | OAuthError => {\n  let err: AuthApiError | OAuthError;\n  let serverErr: Record<string, any> = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description);\n  } else {\n    err = new AuthApiError(serverErr as APIError, resp);\n  }\n\n  if (resp?.status === 403 && !!resp?.headers?.['www-authenticate']) {\n    const { \n      error, \n      // eslint-disable-next-line camelcase\n      error_description,\n      // eslint-disable-next-line camelcase\n      max_age,\n      // eslint-disable-next-line camelcase\n      acr_values \n    } = parseInsufficientAuthenticationError(resp?.headers?.['www-authenticate']);\n    if (error === 'insufficient_authentication_context') {\n      err = new AuthApiError(\n        { \n          errorSummary: error,\n          // eslint-disable-next-line camelcase\n          errorCauses: [{ errorSummary: error_description }]\n        }, \n        resp, \n        {\n          // eslint-disable-next-line camelcase\n          max_age: +max_age,\n          // eslint-disable-next-line camelcase\n          ...(acr_values && { acr_values })\n        }\n      );\n    }\n  }\n\n  return err;\n};\n\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          if (Array.isArray(res)) {\n            res.forEach(item => {\n              item.headers = resp.headers;\n            });\n          } else {\n            res.headers = resp.headers;\n          }\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n      \n      return res;\n    })\n    .catch(function(resp) {\n      err = formatError(sdk, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAoCA,MAAMA,oCAAoC,GACxCC,MAAc,IACqB;EACnC,IAAI,CAACA,MAAM,EAAE;IACX,MAAM,IAAIC,YAAY,CAAC,uBAAuB,CAAC;EAChD;EAED,OAAOD,MAAM,CACVE,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACxBF,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,CAC5BI,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAI;IAEpBD,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC;IAChD,OAAOF,GAAG;EACX,GAAE,CAAE,EAAoC;AAC7C,CAAC;AAED,MAAMG,WAAW,GAAGA,CAACC,GAA0B,EAAEC,IAAkB,KAA+B;;EAChG,IAAIC,GAA8B;EAClC,IAAIC,SAAS,GAAwB,EAAE;EACvC,IAAIF,IAAI,CAACG,YAAY,IAAIC,QAAQ,CAACJ,IAAI,CAACG,YAAY,CAAC,EAAE;IACpD,IAAI;MACFD,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACN,IAAI,CAACG,YAAY,CAAC;IAC1C,EAAC,OAAOI,CAAC,EAAE;MACVL,SAAS,GAAG;QACVM,YAAY,EAAE;OACf;IACF;EACF;EAED,IAAIR,IAAI,CAACS,MAAM,IAAI,GAAG,EAAE;IACtBP,SAAS,CAACM,YAAY,GAAG,eAAe;EACzC;EAED,IAAIT,GAAG,CAACW,OAAO,CAACC,iBAAiB,EAAE;IACjCX,IAAI,GAAGD,GAAG,CAACW,OAAO,CAACC,iBAAiB,CAACC,KAAK,CAACZ,IAAI,CAAC,CAAC;EAClD;EAED,IAAIE,SAAS,CAACW,KAAK,IAAIX,SAAS,CAACY,iBAAiB,EAAE;IAClDb,GAAG,GAAG,IAAIc,UAAU,CAACb,SAAS,CAACW,KAAK,EAAEX,SAAS,CAACY,iBAAiB,CAAC;EACnE,OAAM;IACLb,GAAG,GAAG,IAAIe,YAAY,CAACd,SAAqB,EAAEF,IAAI,CAAC;EACpD;EAED,IAAI,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,MAAM,MAAK,GAAG,IAAI,CAAC,EAAC,CAAAQ,EAAA,GAAAjB,IAAI,KAAJ,QAAAA,IAAI,KAAJ,kBAAAA,IAAI,CAAEkB,OAAO,MAAG,QAAAD,EAAA,uBAAAA,EAAA,mBAAkB,CAAC,GAAE;IACjE,MAAM;MACJJ,KAAK;MAELC,iBAAiB;MAEjBK,OAAO;MAEPC;IACD,IAAGjC,oCAAoC,CAAC,CAAAkC,EAAA,GAAArB,IAAI,KAAJ,QAAAA,IAAI,KAAJ,kBAAAA,IAAI,CAAEkB,OAAO,cAAAG,EAAA,uBAAAA,EAAA,CAAG,kBAAkB,CAAC,CAAC;IAC7E,IAAIR,KAAK,KAAK,qCAAqC,EAAE;MACnDZ,GAAG,GAAG,IAAIe,YAAY,CACpB;QACER,YAAY,EAAEK,KAAK;QAEnBS,WAAW,EAAE,CAAC;UAAEd,YAAY,EAAEM;QAAiB,CAAE;MAClD,GACDd,IAAI,EAAAuB,MAAA,CAAAC,MAAA;QAGFL,OAAO,EAAE,CAACA;MAAO,GAEbC,UAAU,IAAI;QAAEA;MAAY,EAAC,CAEpC;IACF;EACF;EAED,OAAOnB,GAAG;AACZ,CAAC;AAEe,SAAAwB,WAAWA,CAAC1B,GAA0B,EAAEW,OAAuB;EAC7EA,OAAO,GAAGA,OAAO,IAAI,EAAE;EAEvB,IAAIX,GAAG,CAACW,OAAO,CAACgB,uBAAuB,EAAE;IACvC,KAAK,MAAMC,WAAW,IAAI5B,GAAG,CAACW,OAAO,CAACgB,uBAAuB,EAAE;MAC7DC,WAAW,CAACjB,OAAO,CAAC;IACrB;EACF;EAED,IAAIkB,GAAG,GAAGlB,OAAO,CAACkB,GAAG;IACjBC,MAAM,GAAGnB,OAAO,CAACmB,MAAM;IACvBC,IAAI,GAAGpB,OAAO,CAACoB,IAAI;IACnBC,cAAc,GAAGrB,OAAO,CAACqB,cAAc;IACvCC,WAAW,GAAGtB,OAAO,CAACsB,WAAW;IACjCC,eAAe,GAAGvB,OAAO,CAACuB,eAAe,KAAK,IAAI;IAClDC,WAAW,GAAGnC,GAAG,CAACW,OAAO,CAACwB,WAAW;IACrCC,OAAO,GAAGD,WAAY,CAACC,OAAO;IAC9BC,SAAS,GAAGrC,GAAG,CAACsC,cAAc,CAACC,YAAY,CAACvC,GAAG,CAACW,OAAO,CAAC6B,OAAO,CAAC;EAEpE,IAAI7B,OAAO,CAAC8B,aAAa,EAAE;IACzB,IAAIC,aAAa,GAAGL,SAAS,CAACM,UAAU,EAAE;IAC1C,IAAIC,cAAc,GAAGF,aAAa,CAACb,GAAa,CAAC;IACjD,IAAIe,cAAc,IAAIC,IAAI,CAACC,GAAG,CAAE,IAAC,IAAI,GAAGF,cAAc,CAACG,SAAS,EAAE;MAChE,OAAOC,OAAO,CAACC,OAAO,CAACL,cAAc,CAACM,QAAQ,CAAC;IAChD;EACF;EAED,IAAIC,mBAAmB,GAAGnD,GAAG,CAACoD,cAAc,CAACC,aAAa,EAAE;EAC5D,IAAIlC,OAAO,GAAAK,MAAA,CAAAC,MAAA;IACT,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EAAkB,GAC/B0B,mBAAmB,CACvB;EACD3B,MAAM,CAACC,MAAM,CAACN,OAAO,EAAEnB,GAAG,CAACW,OAAO,CAACQ,OAAO,EAAER,OAAO,CAACQ,OAAO,CAAC;EAC5DA,OAAO,GAAGmC,UAAU,CAACnC,OAAO,CAAgB;EAE5C,IAAIc,WAAW,IAAI5B,QAAQ,CAAC4B,WAAW,CAAC,EAAE;IACxCd,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGc,WAAW;EACnD;EAED,IAAIsB,WAAW,GAAiB;IAC9BpC,OAAO;IACPqC,IAAI,EAAEzB,IAAI,IAAI0B,SAAS;IACvBvB;GACD;EAED,IAAIhC,GAAG,EAAEwD,GAAG;EACZ,OAAO1D,GAAG,CAACW,OAAO,CAACgD,iBAAkB,CAAC7B,MAAO,EAAED,GAAI,EAAE0B,WAAW,CAAC,CAC9DK,IAAI,CAAC,UAAS3D,IAAI;IACjByD,GAAG,GAAGzD,IAAI,CAACG,YAAY;IACvB,IAAIsD,GAAG,IAAIrD,QAAQ,CAACqD,GAAG,CAAC,EAAE;MACxBA,GAAG,GAAGpD,IAAI,CAACC,KAAK,CAACmD,GAAG,CAAC;MACrB,IAAIA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACA,GAAG,CAACvC,OAAO,EAAE;QAClD,IAAI0C,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;UACtBA,GAAG,CAACK,OAAO,CAACC,IAAI,IAAG;YACjBA,IAAI,CAAC7C,OAAO,GAAGlB,IAAI,CAACkB,OAAO;UAC7B,CAAC,CAAC;QACH,OAAM;UACLuC,GAAG,CAACvC,OAAO,GAAGlB,IAAI,CAACkB,OAAO;QAC3B;MACF;IACF;IAED,IAAIa,cAAc,EAAE;MAClB,IAAI,CAAC0B,GAAG,CAACO,UAAU,EAAE;QACnB7B,OAAO,CAAC8B,MAAM,CAACC,oBAAoB,CAAC;MACrC;IACF;IAED,IAAIT,GAAG,IAAIA,GAAG,CAACO,UAAU,IAAIP,GAAG,CAACX,SAAS,EAAE;MAC1CX,OAAO,CAACgC,GAAG,CAACD,oBAAoB,EAAET,GAAG,CAACO,UAAU,EAAEP,GAAG,CAACX,SAAS,EAAE/C,GAAG,CAACW,OAAO,CAAC6B,OAAQ,CAAC;IACvF;IAED,IAAIkB,GAAG,IAAI/C,OAAO,CAAC8B,aAAa,EAAE;MAChCJ,SAAS,CAACgC,aAAa,CAACxC,GAAI,EAAE;QAC5BkB,SAAS,EAAEuB,IAAI,CAACC,KAAK,CAAC1B,IAAI,CAACC,GAAG,CAAE,IAAC,IAAI,CAAC,GAAG0B,sBAAsB;QAC/DtB,QAAQ,EAAEQ;MACX,EAAC;IACH;IAED,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDe,KAAK,CAAC,UAASxE,IAAI;IAClBC,GAAG,GAAGH,WAAW,CAACC,GAAG,EAAEC,IAAI,CAAC;IAE5B,IAAIC,GAAG,CAACwE,SAAS,KAAK,UAAU,EAAE;MAChCtC,OAAO,CAAC8B,MAAM,CAACC,oBAAoB,CAAC;IACrC;IAED,MAAMjE,GAAG;EACX,CAAC,CAAC;AACN;SAEgByE,GAAGA,CAAC3E,GAA0B,EAAE6B,GAAW,EAAElB,OAAwB;EACnFkB,GAAG,GAAG+C,aAAa,CAAC/C,GAAG,CAAC,GAAGA,GAAG,GAAG7B,GAAG,CAAC6E,eAAe,CAAE,IAAGhD,GAAG;EAC5D,IAAIiD,UAAU,GAAG;IACfjD,GAAG,EAAEA,GAAG;IACRC,MAAM,EAAE;GACT;EACDN,MAAM,CAACC,MAAM,CAACqD,UAAU,EAAEnE,OAAO,CAAC;EAClC,OAAOe,WAAW,CAAC1B,GAAG,EAAE8E,UAAU,CAAC;AACrC;AAEM,SAAUC,IAAIA,CAAC/E,GAA0B,EAAE6B,GAAW,EAAEE,IAAkB,EAAEpB,OAAwB;EACxGkB,GAAG,GAAG+C,aAAa,CAAC/C,GAAG,CAAC,GAAGA,GAAG,GAAG7B,GAAG,CAAC6E,eAAe,CAAE,IAAGhD,GAAG;EAC5D,IAAImD,WAAW,GAAG;IAChBnD,GAAG,EAAEA,GAAG;IACRC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEA,IAAI;IACVC,cAAc,EAAE;GACjB;EACDR,MAAM,CAACC,MAAM,CAACuD,WAAW,EAAErE,OAAO,CAAC;EACnC,OAAOe,WAAW,CAAC1B,GAAG,EAAEgF,WAAW,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}