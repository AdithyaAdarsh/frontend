{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeNils } from '../../util/object.js';\nimport { isString } from '../../util/types.js';\nimport { toQueryString } from '../../util/url.js';\nimport AuthSdkError from '../../errors/AuthSdkError.js';\nfunction convertTokenParamsToOAuthParams(tokenParams) {\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n  var oauthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues\n  };\n  oauthParams = removeNils(oauthParams);\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n  if (tokenParams.responseType.indexOf('id_token') !== -1 && tokenParams.scopes.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes.join(' ');\n  }\n  return oauthParams;\n}\nfunction buildAuthorizeParams(tokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString(Object.assign(Object.assign({}, oauthQueryParams), tokenParams.extraParams && Object.assign({}, tokenParams.extraParams)));\n}\nexport { buildAuthorizeParams, convertTokenParamsToOAuthParams };","map":{"version":3,"names":["convertTokenParamsToOAuthParams","tokenParams","clientId","AuthSdkError","isString","responseType","indexOf","oauthParams","codeChallenge","codeChallengeMethod","display","idp","idpScope","loginHint","maxAge","nonce","prompt","redirectUri","responseMode","sessionToken","state","acrValues","enrollAmrValues","removeNils","forEach","mayBeArray","Array","isArray","join","scopes","scope","buildAuthorizeParams","oauthQueryParams","toQueryString","Object","assign","extraParams"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/endpoints/authorize.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAkBM,SAAUA,+BAA+BA,CAACC,WAAwB;EAEtE,IAAI,CAACA,WAAW,CAACC,QAAQ,EAAE;IACzB,MAAM,IAAIC,YAAY,CAAC,yEAAyE,CAAC;EAClG;EAED,IAAIC,QAAQ,CAACH,WAAW,CAACI,YAAY,CAAC,IAAIJ,WAAW,CAACI,YAAY,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;IACtF,MAAM,IAAIH,YAAY,CAAC,0DAA0D,CAAC;EACnF;EAGD,IAAII,WAAW,GAAgB;IAC7B,WAAW,EAAEN,WAAW,CAACC,QAAQ;IACjC,gBAAgB,EAAED,WAAW,CAACO,aAAa;IAC3C,uBAAuB,EAAEP,WAAW,CAACQ,mBAAmB;IACxD,SAAS,EAAER,WAAW,CAACS,OAAO;IAC9B,KAAK,EAAET,WAAW,CAACU,GAAG;IACtB,WAAW,EAAEV,WAAW,CAACW,QAAQ;IACjC,YAAY,EAAEX,WAAW,CAACY,SAAS;IACnC,SAAS,EAAEZ,WAAW,CAACa,MAAM;IAC7B,OAAO,EAAEb,WAAW,CAACc,KAAK;IAC1B,QAAQ,EAAEd,WAAW,CAACe,MAAM;IAC5B,cAAc,EAAEf,WAAW,CAACgB,WAAW;IACvC,eAAe,EAAEhB,WAAW,CAACiB,YAAY;IACzC,eAAe,EAAEjB,WAAW,CAACI,YAAY;IACzC,cAAc,EAAEJ,WAAW,CAACkB,YAAY;IACxC,OAAO,EAAElB,WAAW,CAACmB,KAAK;IAC1B,YAAY,EAAEnB,WAAW,CAACoB,SAAS;IACnC,mBAAmB,EAAEpB,WAAW,CAACqB;GAClC;EACDf,WAAW,GAAGgB,UAAU,CAAChB,WAAW,CAAgB;EAEpD,CAAC,WAAW,EAAE,eAAe,EAAE,mBAAmB,CAAC,CAACiB,OAAO,CAAC,UAAUC,UAAU;IAC9E,IAAIC,KAAK,CAACC,OAAO,CAACpB,WAAW,CAACkB,UAAU,CAAC,CAAC,EAAE;MAC1ClB,WAAW,CAACkB,UAAU,CAAC,GAAGlB,WAAW,CAACkB,UAAU,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;IAC5D;EACH,CAAC,CAAC;EAEF,IAAI3B,WAAW,CAACI,YAAa,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IACtDL,WAAW,CAAC4B,MAAO,CAACvB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;IAC9C,MAAM,IAAIH,YAAY,CAAC,mFAAmF,CAAC;EAC5G,OAAM,IAAIF,WAAW,CAAC4B,MAAM,EAAE;IAC7BtB,WAAW,CAACuB,KAAK,GAAG7B,WAAW,CAAC4B,MAAO,CAACD,IAAI,CAAC,GAAG,CAAC;EAClD;EAED,OAAOrB,WAAW;AACpB;AAEM,SAAUwB,oBAAoBA,CAAC9B,WAAwB;EAC3D,IAAI+B,gBAAgB,GAAGhC,+BAA+B,CAACC,WAAW,CAAC;EACnE,OAAOgC,aAAa,CAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACfH,gBAAgB,GACf/B,WAAW,CAACmC,WAAW,IAAAF,MAAA,CAAAC,MAAA,KAASlC,WAAW,CAACmC,WAAW,CAAE,EAC7D;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}