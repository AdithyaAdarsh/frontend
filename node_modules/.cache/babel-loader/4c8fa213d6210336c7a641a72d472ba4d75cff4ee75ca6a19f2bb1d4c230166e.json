{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Documents/image-moderation-app/frontend/src/OktaSignInWidget.js\",\n  _s = $RefreshSig$();\n// src/OktaSignInWidget.jsx\nimport React, { useEffect, useRef } from 'react';\nimport OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OktaSignInWidget = ({\n  onSuccess,\n  onError\n}) => {\n  _s();\n  const widgetRef = useRef();\n  useEffect(() => {\n    if (!widgetRef.current) {\n      return false;\n    }\n    const widget = new OktaSignIn(config.widget);\n\n    // Configure widget settings here\n\n    widget.showSignInToGetTokens({\n      el: widgetRef.current\n    }).then(onSuccess).catch(onError);\n    return () => widget.remove();\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: widgetRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n_s(OktaSignInWidget, \"CZzzYrIwcW/Y90FcvHOrjP2cLf4=\");\n_c = OktaSignInWidget;\nexport default OktaSignInWidget;\nvar _c;\n$RefreshReg$(_c, \"OktaSignInWidget\");","map":{"version":3,"names":["React","useEffect","useRef","OktaSignIn","config","jsxDEV","_jsxDEV","OktaSignInWidget","onSuccess","onError","_s","widgetRef","current","widget","showSignInToGetTokens","el","then","catch","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/src/OktaSignInWidget.js"],"sourcesContent":["// src/OktaSignInWidget.jsx\nimport React, { useEffect, useRef } from 'react';\nimport OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\nimport config from './config';\n\nconst OktaSignInWidget = ({ onSuccess, onError }) => {\n  const widgetRef = useRef();\n\n  useEffect(() => {\n    if (!widgetRef.current) {\n      return false;\n    }\n\n    const widget = new OktaSignIn(config.widget);\n\n    // Configure widget settings here\n\n    widget.showSignInToGetTokens({\n      el: widgetRef.current,\n    }).then(onSuccess).catch(onError);\n\n    return () => widget.remove();\n  }, [onSuccess, onError]);\n\n  return (<div ref={widgetRef} />);\n};\n\nexport default OktaSignInWidget;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,wDAAwD;AAC/D,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,SAAS,GAAGT,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,SAAS,CAACC,OAAO,EAAE;MACtB,OAAO,KAAK;IACd;IAEA,MAAMC,MAAM,GAAG,IAAIV,UAAU,CAACC,MAAM,CAACS,MAAM,CAAC;;IAE5C;;IAEAA,MAAM,CAACC,qBAAqB,CAAC;MAC3BC,EAAE,EAAEJ,SAAS,CAACC;IAChB,CAAC,CAAC,CAACI,IAAI,CAACR,SAAS,CAAC,CAACS,KAAK,CAACR,OAAO,CAAC;IAEjC,OAAO,MAAMI,MAAM,CAACK,MAAM,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACV,SAAS,EAAEC,OAAO,CAAC,CAAC;EAExB,oBAAQH,OAAA;IAAKa,GAAG,EAAER;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACb,EAAA,CApBIH,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AAsBtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}