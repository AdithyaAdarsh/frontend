{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nclass EnrollPoll extends Remediator {\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n  getNextStep(authClient, context) {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && (context === null || context === void 0 ? void 0 : context.currentAuthenticator)) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return Object.assign(Object.assign({}, common), {\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      }\n    });\n  }\n  getValuesAfterProceed() {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => Object.assign(Object.assign({}, values), {\n      [valueKey]: this.values[valueKey]\n    }), {});\n  }\n}\nEnrollPoll.remediationName = 'enroll-poll';\nexport { EnrollPoll };","map":{"version":3,"names":["EnrollPoll","Remediator","canRemediate","values","startPolling","options","step","getNextStep","authClient","context","common","authenticator","getAuthenticator","currentAuthenticator","value","Object","assign","poll","required","refresh","remediation","getValuesAfterProceed","trimmedValues","keys","filter","valueKey","reduce","remediationName"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/EnrollPoll.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAqBM,MAAOA,UAAW,SAAQC,UAA4B;EAG1DC,YAAYA,CAAA;IACV,OAAO,CAAC,CAAC,IAAI,CAACC,MAAM,CAACC,YAAY,IAAI,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,aAAa;EACzE;EAEDC,WAAWA,CAACC,UAAgC,EAAEC,OAAoB;IAChE,MAAMC,MAAM,GAAG,KAAK,CAACH,WAAW,CAACC,UAAU,EAAEC,OAAO,CAAC;IACrD,IAAIE,aAAa,GAAG,IAAI,CAACC,gBAAgB,EAAE;IAC3C,IAAI,CAACD,aAAa,KAAIF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,oBAAoB,GAAE;MACnDF,aAAa,GAAGF,OAAO,CAACI,oBAAoB,CAACC,KAAK;IACnD;IACD,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKN,MAAM;MACTC,aAAa;MACbM,IAAI,EAAE;QACJC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,IAAI,CAACC,WAAW,CAACD;MAC3B;IAAA,CACD;EACH;EAEDE,qBAAqBA,CAAA;IACnB,IAAIC,aAAa,GAAGP,MAAM,CAACQ,IAAI,CAAC,IAAI,CAACpB,MAAM,CAAC,CAACqB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAK,cAAc,CAAC;IAC5F,OAAOH,aAAa,CAACI,MAAM,CAAC,CAACvB,MAAM,EAAEsB,QAAQ,KAAKV,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAKb,MAAM;MAAE,CAACsB,QAAQ,GAAG,IAAI,CAACtB,MAAM,CAACsB,QAAQ;IAAG,IAAE,EAAE,CAAC;EACxG;;AAzBMzB,UAAe,CAAA2B,eAAA,GAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}