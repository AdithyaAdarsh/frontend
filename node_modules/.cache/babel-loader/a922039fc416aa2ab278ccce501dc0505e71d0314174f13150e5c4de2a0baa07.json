{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util/object.js';\nimport { createEnrollAuthenticatorMeta } from './util/enrollAuthenticatorMeta.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { prepareEnrollAuthenticatorParams } from './util/prepareEnrollAuthenticatorParams.js';\nimport './types/Token.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\nfunction enrollAuthenticator(sdk, options) {\n  options = clone(options) || {};\n  var params = prepareEnrollAuthenticatorParams(sdk, options);\n  var meta = createEnrollAuthenticatorMeta(sdk, params);\n  var requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\nexport { enrollAuthenticator };","map":{"version":3,"names":["enrollAuthenticator","sdk","options","clone","params","prepareEnrollAuthenticatorParams","meta","createEnrollAuthenticatorMeta","requestUrl","urls","authorizeUrl","buildAuthorizeParams","transactionManager","save","setLocation","window","location","assign"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/enrollAuthenticator.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from './types';\nimport { clone } from '../util';\nimport { prepareEnrollAuthenticatorParams, createEnrollAuthenticatorMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function enrollAuthenticator(\n  sdk: OktaAuthOAuthInterface, \n  options: EnrollAuthenticatorOptions\n): void {\n  options = clone(options) || {};\n\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBgB,SAAAA,mBAAmBA,CACjCC,GAA2B,EAC3BC,OAAmC;EAEnCA,OAAO,GAAGC,KAAK,CAACD,OAAO,CAAC,IAAI,EAAE;EAE9B,IAAME,MAAM,GAAGC,gCAAgC,CAACJ,GAAG,EAAEC,OAAO,CAAC;EAC7D,IAAMI,IAAI,GAAGC,6BAA6B,CAACN,GAAG,EAAEG,MAAM,CAAC;EACvD,IAAMI,UAAU,GAAGF,IAAI,CAACG,IAAI,CAACC,YAAY,GAAGC,oBAAoB,CAACP,MAAM,CAAC;EACxEH,GAAG,CAACW,kBAAkB,CAACC,IAAI,CAACP,IAAI,CAAC;EACjC,IAAIL,GAAG,CAACC,OAAO,CAACY,WAAW,EAAE;IAC3Bb,GAAG,CAACC,OAAO,CAACY,WAAW,CAACN,UAAU,CAAC;EACpC,OAAM;IACLO,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACT,UAAU,CAAC;EACnC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}