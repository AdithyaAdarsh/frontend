{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from '../../_virtual/_tslib.js';\nclass BaseTransaction {\n  constructor(oktaAuth, options) {\n    const {\n      res\n    } = options;\n    const {\n        headers\n      } = res,\n      rest = __rest(res, [\"headers\"]);\n    if (headers) {\n      this.headers = headers;\n    }\n    Object.keys(rest).forEach(key => {\n      if (key === '_links') {\n        return;\n      }\n      this[key] = rest[key];\n    });\n  }\n}\nexport { BaseTransaction as default };","map":{"version":3,"names":["BaseTransaction","constructor","oktaAuth","options","res","headers","rest","__rest","Object","keys","forEach","key"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/transactions/Base.ts"],"sourcesContent":["import { OktaAuthHttpInterface } from '../../http/types';\nimport { TransactionLink } from '../request';\n\ntype TransactionOptions = {\n  // TODO: move res type to http module\n  res: {\n    headers: Record<string, string>;\n    _links?: Record<string, TransactionLink>;\n    [property: string]: unknown;\n  };\n  accessToken: string;\n};\nexport default class BaseTransaction {\n  // Deprecated\n  headers?: Record<string, string>;\n\n  constructor(oktaAuth: OktaAuthHttpInterface, options: TransactionOptions) {\n    const { res } = options;\n    const { headers, ...rest } = res;\n    \n    // assign required fields from res\n    if (headers) {\n      this.headers = headers;\n    }\n\n    // add all rest fields from res\n    Object.keys(rest).forEach(key => {\n      if (key === '_links') {\n        return;\n      }\n      this[key] = rest[key];\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAYc,MAAOA,eAAe;EAIlCC,WAAYA,CAAAC,QAA+B,EAAEC,OAA2B;IACtE,MAAM;MAAEC;IAAK,IAAGD,OAAO;IACvB,MAAM;QAAEE;MAAO,IAAcD,GAAG;MAAZE,IAAI,GAAAC,MAAA,CAAKH,GAAG,EAA1B,CAAoB,WAAM;IAGhC,IAAIC,OAAO,EAAE;MACX,IAAI,CAACA,OAAO,GAAGA,OAAO;IACvB;IAGDG,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAACC,GAAG,IAAG;MAC9B,IAAIA,GAAG,KAAK,QAAQ,EAAE;QACpB;MACD;MACD,IAAI,CAACA,GAAG,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;IACvB,CAAC,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}