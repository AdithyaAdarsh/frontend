{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from '../../../errors/AuthApiError.js';\nimport { httpRequest } from '../../../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { divideActionParamsByMutability } from './actionParser.js';\nconst generateDirectFetch = function generateDirectFetch(authClient, {\n  actionDefinition,\n  defaultParamsForAction = {},\n  immutableParamsForAction = {},\n  toPersist = {}\n}) {\n  const target = actionDefinition.href;\n  return async function (params = {}) {\n    var _a;\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json'\n    };\n    const body = JSON.stringify(Object.assign(Object.assign(Object.assign({}, defaultParamsForAction), params), immutableParamsForAction));\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: (_a = toPersist === null || toPersist === void 0 ? void 0 : toPersist.withCredentials) !== null && _a !== void 0 ? _a : true\n      });\n      return authClient.idx.makeIdxResponse(Object.assign({}, response), toPersist, true);\n    } catch (err) {\n      if (!(err instanceof AuthApiError) || !(err === null || err === void 0 ? void 0 : err.xhr)) {\n        throw err;\n      }\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n      const idxResponse = authClient.idx.makeIdxResponse(Object.assign({}, payload), toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        idxResponse.stepUp = true;\n      }\n      return idxResponse;\n    }\n  };\n};\nconst generateIdxAction = function generateIdxAction(authClient, actionDefinition, toPersist) {\n  const generator = generateDirectFetch;\n  const {\n    defaultParams,\n    neededParams,\n    immutableParams\n  } = divideActionParamsByMutability(actionDefinition);\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\nexport { generateIdxAction as default };","map":{"version":3,"names":["generateDirectFetch","authClient","actionDefinition","defaultParamsForAction","immutableParamsForAction","toPersist","target","href","params","headers","accepts","body","JSON","stringify","Object","assign","response","httpRequest","url","method","args","withCredentials","_a","idx","makeIdxResponse","err","AuthApiError","xhr","payload","responseJSON","parse","responseText","wwwAuthHeader","idxResponse","status","stepUp","generateIdxAction","generator","defaultParams","neededParams","immutableParams","divideActionParamsByMutability","action","name"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/idxState/v1/generateIdxAction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,MAAMA,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,UAAgC,EAAE;EACzFC,gBAAgB;EAChBC,sBAAsB,GAAG,CAAE;EAC3BC,wBAAwB,GAAG,EAAE;EAC7BC,SAAS,GAAG,CAAkB;AAAA,CAC/B;EACC,MAAMC,MAAM,GAAGJ,gBAAgB,CAACK,IAAI;EACpC,OAAO,gBAAeC,MAAA,GAA0B,EAAE;;IAChD,MAAMC,OAAO,GAAG;MACd,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAEP,gBAAgB,CAACQ,OAAO,IAAI;KACvC;IACD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACtBZ,sBAAsB,GACtBK,MAAM,GACNJ,wBAAwB,EAC3B;IAEF,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,WAAW,CAAChB,UAAU,EAAE;QAC7CiB,GAAG,EAAEZ,MAAM;QACXa,MAAM,EAAEjB,gBAAgB,CAACiB,MAAM;QAC/BV,OAAO;QACPW,IAAI,EAAET,IAAI;QACVU,eAAe,EAAE,CAAAC,EAAA,GAAAjB,SAAS,KAAT,QAAAA,SAAS,uBAATA,SAAS,CAAEgB,eAAe,cAAAC,EAAA,cAAAA,EAAA,GAAI;MAChD,EAAC;MAEF,OAAOrB,UAAU,CAACsB,GAAG,CAACC,eAAe,CAAAV,MAAA,CAAAC,MAAA,KAAMC,QAAQ,GAAIX,SAAS,EAAE,IAAI,CAAC;IACxE,EACD,OAAOoB,GAAG,EAAE;MACV,IAAI,EAAEA,GAAG,YAAYC,YAAY,CAAC,IAAI,EAACD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,GAAG,GAAE;QAC/C,MAAMF,GAAG;MACV;MAED,MAAMT,QAAQ,GAAGS,GAAG,CAACE,GAAG;MACxB,MAAMC,OAAO,GAAGZ,QAAQ,CAACa,YAAY,IAAIjB,IAAI,CAACkB,KAAK,CAACd,QAAQ,CAACe,YAAY,CAAC;MAC1E,MAAMC,aAAa,GAAGhB,QAAQ,CAACP,OAAO,CAAC,kBAAkB,CAAC,IAAIO,QAAQ,CAACP,OAAO,CAAC,kBAAkB,CAAC;MAElG,MAAMwB,WAAW,GAAGhC,UAAU,CAACsB,GAAG,CAACC,eAAe,CAAMV,MAAA,CAAAC,MAAA,KAAAa,OAAO,CAAI,EAAAvB,SAAS,EAAE,KAAK,CAAC;MACpF,IAAIW,QAAQ,CAACkB,MAAM,KAAK,GAAG,IAAIF,aAAa,KAAK,mCAAmC,EAAE;QAKpFC,WAAW,CAACE,MAAM,GAAG,IAAI;MAC1B;MAED,OAAOF,WAAW;IACnB;EACH,CAAC;AACH,CAAC;AAmBK,MAAAG,iBAAiB,GAAG,SAASA,iBAAiBA,CAAEnC,UAAgC,EAAEC,gBAAgB,EAAEG,SAAS;EAGjH,MAAMgC,SAAS,GAAGrC,mBAAmB;EACrC,MAAM;IAAEsC,aAAa;IAAEC,YAAY;IAAEC;EAAe,CAAE,GAAGC,8BAA8B,CAAEvC,gBAAgB,CAAE;EAE3G,MAAMwC,MAAM,GAAGL,SAAS,CAACpC,UAAU,EAAE;IACnCC,gBAAgB;IAChBC,sBAAsB,EAAEmC,aAAa,CAACpC,gBAAgB,CAACyC,IAAI,CAAC;IAC5DvC,wBAAwB,EAAEoC,eAAe,CAACtC,gBAAgB,CAACyC,IAAI,CAAC;IAChEtC;EACD,EAAC;EACFqC,MAAM,CAACH,YAAY,GAAGA,YAAY;EAClC,OAAOG,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}