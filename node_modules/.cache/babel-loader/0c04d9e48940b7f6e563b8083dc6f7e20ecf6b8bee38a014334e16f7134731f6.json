{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction addStateToken(res, options) {\n  var builtArgs = {};\n  Object.assign(builtArgs, options);\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n  return builtArgs;\n}\nfunction getStateToken(res) {\n  return addStateToken(res);\n}\nexport { addStateToken, getStateToken };","map":{"version":3,"names":["addStateToken","res","options","builtArgs","Object","assign","stateToken","getStateToken"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/authn/util/stateToken.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { AuthnTransactionState } from '../types';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as AuthnTransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n"],"mappings":";;;;;;;;;;;;AAgBgB,SAAAA,aAAaA,CAACC,GAAG,EAAEC,OAAQ;EACzC,IAAIC,SAAS,GAAG,EAA2B;EAC3CC,MAAM,CAACC,MAAM,CAACF,SAAS,EAAED,OAAO,CAAC;EAGjC,IAAI,CAACC,SAAS,CAACG,UAAU,IAAIL,GAAG,CAACK,UAAU,EAAE;IAC3CH,SAAS,CAACG,UAAU,GAAGL,GAAG,CAACK,UAAU;EACtC;EAED,OAAOH,SAAS;AAClB;AAEM,SAAUI,aAAaA,CAACN,GAAG;EAC/B,OAAOD,aAAa,CAACC,GAAG,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}