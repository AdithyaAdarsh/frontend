{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\nclass WebauthnEnrollment extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n    const obj = credentials || values;\n    const {\n      clientData,\n      attestation\n    } = obj;\n    return !!(clientData && attestation);\n  }\n  mapCredentials(values) {\n    const {\n      credentials,\n      clientData,\n      attestation\n    } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || {\n      clientData,\n      attestation\n    };\n  }\n  getInputs() {\n    return [{\n      name: 'clientData',\n      type: 'string',\n      required: true,\n      visible: false,\n      label: 'Client Data'\n    }, {\n      name: 'attestation',\n      type: 'string',\n      required: true,\n      visible: false,\n      label: 'Attestation'\n    }];\n  }\n}\nexport { WebauthnEnrollment };","map":{"version":3,"names":["WebauthnEnrollment","Authenticator","canVerify","values","credentials","obj","clientData","attestation","mapCredentials","getInputs","name","type","required","visible","label"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/authenticator/WebauthnEnrollment.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAQM,MAAOA,kBAAmB,SAAQC,aAAmC;EACzEC,SAASA,CAACC,MAA4B;IACpC,MAAM;MAAEC;IAAa,IAAGD,MAAM;IAC9B,MAAME,GAAG,GAAGD,WAAW,IAAID,MAAM;IACjC,MAAM;MAAEG,UAAU;MAAEC;IAAa,IAAGF,GAAG;IACvC,OAAO,CAAC,EAAEC,UAAU,IAAIC,WAAW,CAAC;EACrC;EAEDC,cAAcA,CAACL,MAA4B;IACzC,MAAM;MAAEC,WAAW;MAAEE,UAAU;MAAEC;IAAW,CAAE,GAAGJ,MAAM;IACvD,IAAI,CAACC,WAAW,IAAI,CAACE,UAAU,IAAI,CAACC,WAAW,EAAE;MAC/C;IACD;IACD,OAAOH,WAAW,IAAK;MACrBE,UAAU;MACVC;IACD,CAAC;EACH;EAEDE,SAASA,CAAA;IACP,OAAO,CACL;MAAEC,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAe,GAC5F;MAAEJ,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAe,EAC9F;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}