{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\nclass EmailChallengeTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      accessToken,\n      res\n    } = options;\n    const {\n      id,\n      expiresAt,\n      profile,\n      status,\n      _links\n    } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'poll',\n        links: _links,\n        transactionClassName: 'EmailStatusTransaction'\n      });\n      return await fn();\n    };\n    this.verify = async payload => {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'verify',\n        links: _links\n      });\n      return await fn(payload);\n    };\n  }\n}\nexport { EmailChallengeTransaction as default };","map":{"version":3,"names":["EmailChallengeTransaction","BaseTransaction","constructor","oktaAuth","options","accessToken","res","id","expiresAt","profile","status","_links","poll","fn","generateRequestFnFromLinks","methodName","links","transactionClassName","verify","payload"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/transactions/EmailChallengeTransaction.ts"],"sourcesContent":["import EmailStatusTransaction from './EmailStatusTransaction';\nimport { \n  EmailProfile, \n  Status,\n  VerificationPayload, \n} from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailChallengeTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  poll: () => Promise<EmailStatusTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  verify: (payload: VerificationPayload) => Promise<EmailChallengeTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, expiresAt, profile, status, _links } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'poll', \n        links: _links,\n        transactionClassName: 'EmailStatusTransaction'\n      });\n      return await fn() as EmailStatusTransaction;\n    };\n    this.verify = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'verify', \n        links: _links,\n      });\n      return await fn(payload) as EmailChallengeTransaction;\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AASqB,MAAAA,yBAA0B,SAAQC,eAAe;EAUpEC,WAAYA,CAAAC,QAAQ,EAAEC,OAAO;IAC3B,KAAK,CAACD,QAAQ,EAAEC,OAAO,CAAC;IAExB,MAAM;MAAEC,WAAW;MAAEC;IAAK,IAAGF,OAAO;IAEpC,MAAM;MAAEG,EAAE;MAAEC,SAAS;MAAEC,OAAO;MAAEC,MAAM;MAAEC;IAAQ,IAAGL,GAAG;IACtD,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;IAGpB,IAAI,CAACE,IAAI,GAAG,YAAW;MACrB,MAAMC,EAAE,GAAGC,0BAA0B,CAAC;QACpCX,QAAQ;QACRE,WAAW;QACXU,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAEL,MAAM;QACbM,oBAAoB,EAAE;MACvB,EAAC;MACF,OAAO,MAAMJ,EAAE,EAA4B;IAC7C,CAAC;IACD,IAAI,CAACK,MAAM,GAAG,MAAOC,OAAO,IAAI;MAC9B,MAAMN,EAAE,GAAGC,0BAA0B,CAAC;QACpCX,QAAQ;QACRE,WAAW;QACXU,UAAU,EAAE,QAAQ;QACpBC,KAAK,EAAEL;MACR,EAAC;MACF,OAAO,MAAME,EAAE,CAACM,OAAO,CAA8B;IACvD,CAAC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}