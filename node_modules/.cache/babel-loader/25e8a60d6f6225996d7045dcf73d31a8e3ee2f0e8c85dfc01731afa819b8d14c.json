{"ast":null,"code":"import _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\nvar VerificationCodeAuthenticator = /*#__PURE__*/function (_Authenticator) {\n  _inherits(VerificationCodeAuthenticator, _Authenticator);\n  var _super = _createSuper(VerificationCodeAuthenticator);\n  function VerificationCodeAuthenticator() {\n    _classCallCheck(this, VerificationCodeAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(VerificationCodeAuthenticator, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      return !!(values.credentials || values.verificationCode || values.otp);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var credentials = values.credentials,\n        verificationCode = values.verificationCode,\n        otp = values.otp;\n      if (!credentials && !verificationCode && !otp) {\n        return;\n      }\n      return credentials || {\n        passcode: verificationCode || otp\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs(idxRemediationValue) {\n      var _a;\n      return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n        name: 'verificationCode',\n        type: 'string',\n        required: idxRemediationValue.required\n      });\n    }\n  }]);\n  return VerificationCodeAuthenticator;\n}(Authenticator);\nexport { VerificationCodeAuthenticator };","map":{"version":3,"names":["VerificationCodeAuthenticator","_Authenticator","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","canVerify","values","credentials","verificationCode","otp","mapCredentials","passcode","getInputs","idxRemediationValue","Object","assign","_a","form","name","type","required","Authenticator"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/authenticator/VerificationCodeAuthenticator.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;IAeaA,6BAA8B,0BAAAC,cAAA;EAAAC,SAAA,CAAAF,6BAAA,EAAAC,cAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,6BAAA;EAAA,SAAAA,8BAAA;IAAAK,eAAA,OAAAL,6BAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,6BAAA;IAAAS,GAAA;IAAAC,KAAA,EACzC,SAAAC,UAAUC,MAA8B;MACtC,OAAO,CAAC,EAAEA,MAAM,CAACC,WAAW,IAAGD,MAAM,CAACE,gBAAgB,IAAIF,MAAM,CAACG,GAAG,CAAC;IACtE;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAM,eAAeJ,MAAM;MACnB,IAAQC,WAAW,GAA4BD,MAAM,CAA7CC,WAAW;QAAEC,gBAAgB,GAAUF,MAAM,CAAhCE,gBAAgB;QAAEC,GAAG,GAAKH,MAAM,CAAdG,GAAG;MAC1C,IAAI,CAACF,WAAW,IAAI,CAACC,gBAAgB,IAAI,CAACC,GAAG,EAAE;QAC7C;MACD;MACD,OAAOF,WAAW,IAAI;QAAEI,QAAQ,EAAEH,gBAAgB,IAAIC;MAAG,CAAE;IAC5D;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAQ,UAAUC,mBAAmB;;MAC3B,OACKC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,MAAAC,EAAA,GAAAH,mBAAmB,CAACI,IAAI,cAAAD,EAAA,uBAAAA,EAAA,CAAEZ,KAAK,CAAC,CAAC,CAAC,CACrC;QAAAc,IAAI,EAAE,kBAAkB;QACxBC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAEP,mBAAmB,CAACO;MAC9B;IACH;EAAA;EAAA,OAAA1B,6BAAA;AAAA,EApBgD2B,aAAqC"},"metadata":{},"sourceType":"module","externalDependencies":[]}