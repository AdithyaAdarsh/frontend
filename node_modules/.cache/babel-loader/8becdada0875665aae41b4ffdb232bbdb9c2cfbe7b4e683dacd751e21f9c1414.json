{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { validateVersionConfig, makeIdxState } from './idxState/index.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\nimport { isAuthApiError } from '../errors/index.js';\nimport { getOAuthDomain } from '../oidc/util/oauth.js';\nimport { IDX_API_VERSION } from '../constants.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport '../oidc/types/Token.js';\nfunction introspect(_x) {\n  return _introspect.apply(this, arguments);\n}\nfunction _introspect() {\n  _introspect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient) {\n    var options,\n      _a,\n      rawIdxResponse,\n      requestDidSucceed,\n      savedIdxResponse,\n      version,\n      domain,\n      interactionHandle,\n      stateHandle,\n      _withCredentials,\n      url,\n      body,\n      headers,\n      withCredentials,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n          if (savedIdxResponse) {\n            rawIdxResponse = savedIdxResponse.rawIdxResponse;\n            requestDidSucceed = savedIdxResponse.requestDidSucceed;\n          }\n          if (rawIdxResponse) {\n            _context.next = 27;\n            break;\n          }\n          version = options.version || IDX_API_VERSION;\n          domain = getOAuthDomain(authClient);\n          interactionHandle = options.interactionHandle, stateHandle = options.stateHandle;\n          _withCredentials = (_a = options.withCredentials) !== null && _a !== void 0 ? _a : true;\n          _context.prev = 8;\n          requestDidSucceed = true;\n          validateVersionConfig(version);\n          url = \"\".concat(domain, \"/idp/idx/introspect\");\n          body = stateHandle ? {\n            stateToken: stateHandle\n          } : {\n            interactionHandle: interactionHandle\n          };\n          headers = {\n            'Content-Type': \"application/ion+json; okta-version=\".concat(version),\n            Accept: \"application/ion+json; okta-version=\".concat(version)\n          };\n          _context.next = 16;\n          return httpRequest(authClient, {\n            method: 'POST',\n            url: url,\n            headers: headers,\n            withCredentials: _withCredentials,\n            args: body\n          });\n        case 16:\n          rawIdxResponse = _context.sent;\n          _context.next = 27;\n          break;\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](8);\n          if (!(isAuthApiError(_context.t0) && _context.t0.xhr && isRawIdxResponse(_context.t0.xhr.responseJSON))) {\n            _context.next = 26;\n            break;\n          }\n          rawIdxResponse = _context.t0.xhr.responseJSON;\n          requestDidSucceed = false;\n          _context.next = 27;\n          break;\n        case 26:\n          throw _context.t0;\n        case 27:\n          withCredentials = options.withCredentials;\n          return _context.abrupt(\"return\", makeIdxState(authClient, rawIdxResponse, {\n            withCredentials: withCredentials\n          }, requestDidSucceed));\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[8, 19]]);\n  }));\n  return _introspect.apply(this, arguments);\n}\nexport { introspect };","map":{"version":3,"names":["introspect","_x","_introspect","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authClient","options","_a","rawIdxResponse","requestDidSucceed","savedIdxResponse","version","domain","interactionHandle","stateHandle","_withCredentials","url","body","headers","withCredentials","_args","wrap","_callee$","_context","prev","next","length","undefined","transactionManager","loadIdxResponse","IDX_API_VERSION","getOAuthDomain","validateVersionConfig","concat","stateToken","Accept","httpRequest","method","args","sent","t0","isAuthApiError","xhr","isRawIdxResponse","responseJSON","abrupt","makeIdxState","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/introspect.ts"],"sourcesContent":["/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from './types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}