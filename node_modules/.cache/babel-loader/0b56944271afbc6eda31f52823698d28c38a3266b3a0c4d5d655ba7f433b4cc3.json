{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from '../../../errors/AuthApiError.js';\nimport { httpRequest } from '../../../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { divideActionParamsByMutability } from './actionParser.js';\nvar generateDirectFetch = function generateDirectFetch(authClient, _ref) {\n  var actionDefinition = _ref.actionDefinition,\n    _ref$defaultParamsFor = _ref.defaultParamsForAction,\n    defaultParamsForAction = _ref$defaultParamsFor === void 0 ? {} : _ref$defaultParamsFor,\n    _ref$immutableParamsF = _ref.immutableParamsForAction,\n    immutableParamsForAction = _ref$immutableParamsF === void 0 ? {} : _ref$immutableParamsF,\n    _ref$toPersist = _ref.toPersist,\n    toPersist = _ref$toPersist === void 0 ? {} : _ref$toPersist;\n  var target = actionDefinition.href;\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var params,\n      _a,\n      headers,\n      body,\n      response,\n      _response,\n      payload,\n      wwwAuthHeader,\n      idxResponse,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n          headers = {\n            'Content-Type': 'application/json',\n            'Accept': actionDefinition.accepts || 'application/ion+json'\n          };\n          body = JSON.stringify(Object.assign(Object.assign(Object.assign({}, defaultParamsForAction), params), immutableParamsForAction));\n          _context.prev = 3;\n          _context.next = 6;\n          return httpRequest(authClient, {\n            url: target,\n            method: actionDefinition.method,\n            headers: headers,\n            args: body,\n            withCredentials: (_a = toPersist === null || toPersist === void 0 ? void 0 : toPersist.withCredentials) !== null && _a !== void 0 ? _a : true\n          });\n        case 6:\n          response = _context.sent;\n          return _context.abrupt(\"return\", authClient.idx.makeIdxResponse(Object.assign({}, response), toPersist, true));\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](3);\n          if (!(!(_context.t0 instanceof AuthApiError) || !(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.xhr))) {\n            _context.next = 14;\n            break;\n          }\n          throw _context.t0;\n        case 14:\n          _response = _context.t0.xhr;\n          payload = _response.responseJSON || JSON.parse(_response.responseText);\n          wwwAuthHeader = _response.headers['WWW-Authenticate'] || _response.headers['www-authenticate'];\n          idxResponse = authClient.idx.makeIdxResponse(Object.assign({}, payload), toPersist, false);\n          if (_response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n            idxResponse.stepUp = true;\n          }\n          return _context.abrupt(\"return\", idxResponse);\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n};\nvar generateIdxAction = function generateIdxAction(authClient, actionDefinition, toPersist) {\n  var generator = generateDirectFetch;\n  var _divideActionParamsBy = divideActionParamsByMutability(actionDefinition),\n    defaultParams = _divideActionParamsBy.defaultParams,\n    neededParams = _divideActionParamsBy.neededParams,\n    immutableParams = _divideActionParamsBy.immutableParams;\n  var action = generator(authClient, {\n    actionDefinition: actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist: toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\nexport { generateIdxAction as default };","map":{"version":3,"names":["generateDirectFetch","authClient","_ref","actionDefinition","_ref$defaultParamsFor","defaultParamsForAction","_ref$immutableParamsF","immutableParamsForAction","_ref$toPersist","toPersist","target","href","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_a","headers","body","response","_response","payload","wwwAuthHeader","idxResponse","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","accepts","JSON","stringify","Object","assign","httpRequest","url","method","args","withCredentials","sent","abrupt","idx","makeIdxResponse","t0","AuthApiError","xhr","responseJSON","parse","responseText","status","stepUp","stop","generateIdxAction","generator","_divideActionParamsBy","divideActionParamsByMutability","defaultParams","neededParams","immutableParams","action","name"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/idxState/v1/generateIdxAction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}