{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nfunction startTransaction(_x) {\n  return _startTransaction.apply(this, arguments);\n}\nfunction _startTransaction() {\n  _startTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient) {\n    var options,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          authClient.transactionManager.clear();\n          return _context.abrupt(\"return\", run(authClient, Object.assign({\n            exchangeCodeForTokens: false\n          }, options)));\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _startTransaction.apply(this, arguments);\n}\nexport { startTransaction };","map":{"version":3,"names":["startTransaction","_x","_startTransaction","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authClient","options","_args","wrap","_callee$","_context","prev","next","length","undefined","transactionManager","clear","abrupt","run","Object","assign","exchangeCodeForTokens","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/startTransaction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from './types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;SAgBsBA,gBAAgBA,CAAAC,EAAA;EAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,kBAAA;EAAAA,iBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA/B,SAAAC,QACLC,UAAgC;IAAA,IAAAC,OAAA;MAAAC,KAAA,GAAAP,SAAA;IAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAChCN,OAAA,GAAAC,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAwB,EAAE;UAG1BF,UAAU,CAACU,kBAAkB,CAACC,KAAK,EAAE;UAAC,OAAAN,QAAA,CAAAO,MAAA,WAE/BC,GAAG,CAACb,UAAU,EACnBc,MAAA,CAAAC,MAAA;YAAAC,qBAAqB,EAAE;UAAK,GACzBf,OAAO,EACV;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAY,IAAA;MAAA;IAAA,GAAAlB,OAAA;EAAA,CACJ;EAAA,OAAAN,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}