{"ast":null,"code":"import _toConsumableArray from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nimport { OktaPassword } from '../authenticator/OktaPassword.js';\nimport '../types/api.js';\nvar EnrollProfile = /*#__PURE__*/function (_Remediator) {\n  _inherits(EnrollProfile, _Remediator);\n  var _super = _createSuper(EnrollProfile);\n  function EnrollProfile(remediation) {\n    var _this;\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, EnrollProfile);\n    _this = _super.call(this, remediation, values, options);\n    _this.authenticator = null;\n    var credentials = _this.getCredentialsFromRemediation();\n    if (credentials) {\n      _this.authenticator = _this.authenticator = new OktaPassword({});\n    }\n    return _this;\n  }\n  _createClass(EnrollProfile, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n        return false;\n      }\n      var userProfileFromValues = this.getData().userProfile;\n      if (!userProfileFromValues) {\n        return false;\n      }\n      var userProfileFromRemediation = this.remediation.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'userProfile';\n      });\n      return userProfileFromRemediation.form.value.reduce(function (canRemediate, curr) {\n        if (curr.required) {\n          canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n        }\n        return canRemediate;\n      }, true);\n    }\n  }, {\n    key: \"getCredentialsFromRemediation\",\n    value: function getCredentialsFromRemediation() {\n      return this.remediation.value.find(function (_ref2) {\n        var name = _ref2.name;\n        return name === 'credentials';\n      });\n    }\n  }, {\n    key: \"mapUserProfile\",\n    value: function mapUserProfile(_ref3) {\n      var _this2 = this;\n      var profileAttributes = _ref3.form.value;\n      var attributeNames = profileAttributes.map(function (_ref4) {\n        var name = _ref4.name;\n        return name;\n      });\n      var data = attributeNames.reduce(function (attributeValues, attributeName) {\n        return _this2.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), _defineProperty({}, attributeName, _this2.values[attributeName])) : attributeValues;\n      }, {});\n      if (Object.keys(data).length === 0) {\n        return;\n      }\n      return data;\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      var val = this.authenticator && this.authenticator.mapCredentials(this.values);\n      if (!val) {\n        return;\n      }\n      return val;\n    }\n  }, {\n    key: \"getInputUserProfile\",\n    value: function getInputUserProfile(input) {\n      return _toConsumableArray(input.form.value);\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      return _toConsumableArray(input.form.value);\n    }\n  }, {\n    key: \"getErrorMessages\",\n    value: function getErrorMessages(errorRemediation) {\n      return errorRemediation.value[0].form.value.reduce(function (errors, field) {\n        if (field.messages) {\n          errors.push(field.messages.value[0].message);\n        }\n        return errors;\n      }, []);\n    }\n  }]);\n  return EnrollProfile;\n}(Remediator);\nEnrollProfile.remediationName = 'enroll-profile';\nexport { EnrollProfile };","map":{"version":3,"names":["EnrollProfile","_Remediator","_inherits","_super","_createSuper","remediation","_this","values","arguments","length","undefined","options","_classCallCheck","call","authenticator","credentials","getCredentialsFromRemediation","OktaPassword","_createClass","key","value","canRemediate","canVerify","userProfileFromValues","getData","userProfile","userProfileFromRemediation","find","_ref","name","form","reduce","curr","required","_ref2","mapUserProfile","_ref3","_this2","profileAttributes","attributeNames","map","_ref4","data","attributeValues","attributeName","Object","assign","_defineProperty","keys","mapCredentials","val","getInputUserProfile","input","_toConsumableArray","getInputCredentials","getErrorMessages","errorRemediation","errors","field","messages","push","message","Remediator","remediationName"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/EnrollProfile.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue, IdxAuthenticator } from '../types/idx-js';\nimport { RemediateOptions } from '../types';\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, Credentials, OktaPassword } from '../authenticator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  credentials?: Credentials;\n  password?: string;\n  passcode?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  authenticator: Authenticator<any> | null = null;\n\n  constructor(\n    remediation: IdxRemediation,\n    values: EnrollProfileValues = {},\n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // credentials are only required when Profile Enrollment policy requires them\n    // if credentials are included in the remediation, they are considered required\n    // otherwise it will be omitted\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({} as IdxAuthenticator);\n    }\n  }\n\n  canRemediate() {\n    // ensure credentials can be verified, if required\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation () {\n    return this.remediation.value!.find(({ name }) => name === 'credentials');\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}