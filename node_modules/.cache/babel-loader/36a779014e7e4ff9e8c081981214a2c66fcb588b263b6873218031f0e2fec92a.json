{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nvar EmailRole;\n(function (EmailRole) {\n  EmailRole[\"PRIMARY\"] = \"PRIMARY\";\n  EmailRole[\"SECONDARY\"] = \"SECONDARY\";\n})(EmailRole || (EmailRole = {}));\nvar Status;\n(function (Status) {\n  Status[\"VERIFIED\"] = \"VERIFIED\";\n  Status[\"UNVERIFIED\"] = \"UNVERIFIED\";\n})(Status || (Status = {}));\nvar PasswordStatus;\n(function (PasswordStatus) {\n  PasswordStatus[\"NOT_ENROLLED\"] = \"NOT_ENROLLED\";\n  PasswordStatus[\"ACTIVE\"] = \"ACTIVE\";\n})(PasswordStatus || (PasswordStatus = {}));\nexport { EmailRole, PasswordStatus, Status };","map":{"version":3,"names":["EmailRole","Status","PasswordStatus"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/types.ts"],"sourcesContent":["import {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta\n} from '../oidc/types';\n\nexport { \n  EmailTransaction, \n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  PhoneTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PasswordTransaction,\n  BaseTransaction\n} from './transactions';\n\nexport enum EmailRole {\n  PRIMARY = 'PRIMARY',\n  SECONDARY = 'SECONDARY'\n}\n\nexport enum Status {\n  VERIFIED = 'VERIFIED',\n  UNVERIFIED = 'UNVERIFIED'\n}\n\nexport enum PasswordStatus {\n  NOT_ENROLLED = 'NOT_ENROLLED',\n  ACTIVE = 'ACTIVE'\n}\n\nexport type EmailProfile = {\n  email: string;\n}\n\nexport type AddEmailPayload = {\n  profile: {\n    email: string;\n  };\n  sendEmail: boolean;\n  role: EmailRole;\n}\n\nexport type PhoneProfile = {\n  profile: {\n    phoneNumber: string;\n  };\n}\n\nexport type AddPhonePayload = {\n  profile: {\n    phoneNumber: string;\n  };\n  sendCode: boolean;\n  method: string;\n};\n\nexport type ChallengePhonePayload = {\n  method: string;\n}\n\nexport type VerificationPayload = {\n  verificationCode: string;\n};\n\nexport type EnrollPasswordPayload = {\n  profile: {\n    password: string;\n  }\n}\n\nexport type UpdatePasswordPayload = {\n  profile: {\n    password: string;\n    currentPassword?: string;\n  }\n}\n\nexport type UpdateProfilePayload = {\n  profile: {\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    login?: string;\n    [property: string]: any;\n  };\n};\n\nexport type MyAccountRequestOptions = {\n  id?: string;\n  emailId?: string;\n  challengeId?: string;\n  payload?: AddEmailPayload \n    | AddPhonePayload \n    | ChallengePhonePayload\n    | VerificationPayload \n    | UpdateProfilePayload\n    | EnrollPasswordPayload\n    | UpdatePasswordPayload;\n  accessToken?: string;\n}\n\nexport type IAPIFunction<T> = (\n  oktaAuth: OktaAuthOAuthInterface, \n  options?: MyAccountRequestOptions\n) => Promise<T>;\n\nexport interface OktaAuthMyAccountInterface\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions\n> \n  extends OktaAuthOAuthInterface<M, S, O>\n{\n  myaccount;\n}\n"],"mappings":";;;;;;;;;;;;;;;IAmBYA,SAGX;AAHD,WAAYA,SAAS;EACnBA,SAAA,uBAAmB;EACnBA,SAAA,2BAAuB;AACzB,CAAC,EAHWA,SAAS,KAATA,SAAS,GAGpB;IAEWC,MAGX;AAHD,WAAYA,MAAM;EAChBA,MAAA,yBAAqB;EACrBA,MAAA,6BAAyB;AAC3B,CAAC,EAHWA,MAAM,KAANA,MAAM,GAGjB;IAEWC,cAGX;AAHD,WAAYA,cAAc;EACxBA,cAAA,iCAA6B;EAC7BA,cAAA,qBAAiB;AACnB,CAAC,EAHWA,cAAc,KAAdA,cAAc,GAGzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}