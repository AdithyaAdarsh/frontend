{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\nfunction register(_x) {\n  return _register.apply(this, arguments);\n}\nfunction _register() {\n  _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient) {\n    var options,\n      _yield$startTransacti,\n      enabledFeatures,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          if (hasSavedInteractionHandle(authClient)) {\n            _context.next = 8;\n            break;\n          }\n          _context.next = 4;\n          return startTransaction(authClient, Object.assign(Object.assign({}, options), {\n            flow: 'register',\n            autoRemediate: false\n          }));\n        case 4:\n          _yield$startTransacti = _context.sent;\n          enabledFeatures = _yield$startTransacti.enabledFeatures;\n          if (!(!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION))) {\n            _context.next = 8;\n            break;\n          }\n          throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n        case 8:\n          return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), {\n            flow: 'register'\n          })));\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _register.apply(this, arguments);\n}\nexport { register };","map":{"version":3,"names":["register","_x","_register","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authClient","options","_yield$startTransacti","enabledFeatures","_args","wrap","_callee$","_context","prev","next","length","undefined","hasSavedInteractionHandle","startTransaction","Object","assign","flow","autoRemediate","sent","activationToken","includes","IdxFeature","REGISTRATION","AuthSdkError","abrupt","run","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/register.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;SAwBsBA,QAAQA,CAAAC,EAAA;EAAA,OAAAC,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,UAAA;EAAAA,SAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAvB,SAAAC,QACLC,UAAgC;IAAA,IAAAC,OAAA;MAAAC,qBAAA;MAAAC,eAAA;MAAAC,KAAA,GAAAT,SAAA;IAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAER,OAAA,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAA+B,EAAE;UAAA,IAI9DQ,yBAAyB,CAACZ,UAAU,CAAC;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACNI,gBAAgB,CAACb,UAAU,EAAAc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACxDd,OAAO,CACV;YAAAe,IAAI,EAAE,UAAU;YAChBC,aAAa,EAAE;UAAK,GACpB;QAAA;UAAAf,qBAAA,GAAAK,QAAA,CAAAW,IAAA;UAJMf,eAAe,GAAAD,qBAAA,CAAfC,eAAe;UAAA,MAKnB,CAACF,OAAO,CAACkB,eAAe,IAAIhB,eAAe,IAAI,CAACA,eAAe,CAACiB,QAAQ,CAACC,UAAU,CAACC,YAAY,CAAC;YAAAf,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAC7F,IAAIc,YAAY,CAAC,wEAAwE,CAAC;QAAA;UAAA,OAAAhB,QAAA,CAAAiB,MAAA,WAI7FC,GAAG,CAACzB,UAAU,EAChBc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAd,OAAO;YACVe,IAAI,EAAE;UAAU,GAChB;QAAA;QAAA;UAAA,OAAAT,QAAA,CAAAmB,IAAA;MAAA;IAAA,GAAA3B,OAAA;EAAA,CACJ;EAAA,OAAAN,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}