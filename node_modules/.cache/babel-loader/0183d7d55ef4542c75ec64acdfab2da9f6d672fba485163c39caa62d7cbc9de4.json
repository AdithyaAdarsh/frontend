{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaUserAgent } from './OktaUserAgent.js';\nimport { setRequestHeader } from './headers.js';\nimport { toQueryString } from '../util/url.js';\nimport { get } from './request.js';\nfunction mixinHttp(Base) {\n  return class OktaAuthHttp extends Base {\n    constructor(...args) {\n      super(...args);\n      this._oktaUserAgent = new OktaUserAgent();\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n    getIssuerOrigin() {\n      return this.options.issuer.split('/oauth2/')[0];\n    }\n    webfinger(opts) {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\nexport { mixinHttp };","map":{"version":3,"names":["mixinHttp","Base","OktaAuthHttp","constructor","args","_oktaUserAgent","OktaUserAgent","http","setRequestHeader","bind","setHeaders","headers","options","Object","assign","getIssuerOrigin","issuer","split","webfinger","opts","url","toQueryString","get"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/http/mixin.ts"],"sourcesContent":["import { OktaAuthStorageInterface, StorageManagerInterface } from '../storage/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  HttpAPI,\n  OktaAuthHttpInterface,\n  OktaAuthHttpOptions,\n} from './types';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { setRequestHeader } from './headers';\nimport { toQueryString } from '../util';\nimport { get } from './request';\n\nexport function mixinHttp\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n{\n  return class OktaAuthHttp extends Base implements OktaAuthHttpInterface<S, O>\n  {\n    _oktaUserAgent: OktaUserAgent;\n    http: HttpAPI;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this._oktaUserAgent = new OktaUserAgent();\n\n      // HTTP\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  \n    getIssuerOrigin(): string {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.options.issuer!.split('/oauth2/')[0];\n    }\n  \n    webfinger(opts): Promise<object> {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAYM,SAAUA,SAASA,CAOxBC,IAAW;EAEV,OAAO,MAAMC,YAAa,SAAQD,IAAI;IAKpCE,YAAY,GAAGC,IAAW;MACxB,KAAK,CAAC,GAAGA,IAAI,CAAC;MAEd,IAAI,CAACC,cAAc,GAAG,IAAIC,aAAa,EAAE;MAGzC,IAAI,CAACC,IAAI,GAAG;QACVC,gBAAgB,EAAEA,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI;OACnD;IACF;IAEDC,UAAUA,CAACC,OAAO;MAChB,IAAI,CAACC,OAAO,CAACD,OAAO,GAAGE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,IAAI,CAACF,OAAO,CAACD,OAAO,EAAEA,OAAO,CAAC;IACxE;IAEDI,eAAeA,CAAA;MAGb,OAAO,IAAI,CAACH,OAAO,CAACI,MAAO,CAACC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACjD;IAEDC,SAASA,CAACC,IAAI;MACZ,IAAIC,GAAG,GAAG,wBAAwB,GAAGC,aAAa,CAACF,IAAI,CAAC;MACxD,IAAIP,OAAO,GAAG;QACZD,OAAO,EAAE;UACP,QAAQ,EAAE;QACX;OACF;MACD,OAAOW,GAAG,CAAC,IAAI,EAAEF,GAAG,EAAER,OAAO,CAAC;IAC/B;GACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}