{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nclass Identify extends Remediator {\n  constructor() {\n    super(...arguments);\n    this.map = {\n      'identifier': ['username']\n    };\n  }\n  canRemediate() {\n    const {\n      identifier\n    } = this.getData();\n    return !!identifier;\n  }\n  mapCredentials() {\n    const {\n      credentials,\n      password\n    } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || {\n      passcode: password\n    };\n  }\n  getInputCredentials(input) {\n    return Object.assign(Object.assign({}, input.form.value[0]), {\n      name: 'password',\n      required: input.required\n    });\n  }\n}\nIdentify.remediationName = 'identify';\nexport { Identify };","map":{"version":3,"names":["Identify","Remediator","constructor","map","canRemediate","identifier","getData","mapCredentials","credentials","password","values","passcode","getInputCredentials","input","Object","assign","form","value","name","required","remediationName"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/Identify.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;AAsBM,MAAOA,QAAS,SAAQC,UAA0B;EAAxDC,YAAA;;IAGE,KAAAC,GAAG,GAAG;MACJ,YAAY,EAAE,CAAC,UAAU;KAC1B;EAuBF;EArBCC,YAAYA,CAAA;IACV,MAAM;MAAEC;IAAU,CAAE,GAAG,IAAI,CAACC,OAAO,EAAE;IACrC,OAAO,CAAC,CAACD,UAAU;EACpB;EAEDE,cAAcA,CAAA;IACZ,MAAM;MAAEC,WAAW;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACC,MAAM;IAC7C,IAAI,CAACF,WAAW,IAAI,CAACC,QAAQ,EAAE;MAC7B;IACD;IACD,OAAOD,WAAW,IAAI;MAAEG,QAAQ,EAAEF;IAAQ,CAAE;EAC7C;EAEDG,mBAAmBA,CAACC,KAAK;IACvB,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKF,KAAK,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACtBC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAEN,KAAK,CAACM;IAAQ,CACxB;EACH;;AAzBMnB,QAAe,CAAAoB,eAAA,GAAG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}