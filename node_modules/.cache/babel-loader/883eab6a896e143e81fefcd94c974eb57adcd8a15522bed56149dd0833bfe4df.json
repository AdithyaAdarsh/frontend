{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features.js';\nimport '../oidc/types/Token.js';\nimport { EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE } from '../oidc/types/TokenManager.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nclass SyncStorageService {\n  constructor(tokenManager, options = {}) {\n    this.started = false;\n    this.enablePostMessage = true;\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n  requiresLeadership() {\n    return false;\n  }\n  isStarted() {\n    return this.started;\n  }\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    const {\n      syncChannelName\n    } = this.options;\n    try {\n      this.channel = new BroadcastChannel(syncChannelName);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n  async stop() {\n    var _a, _b;\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      (_a = this.channel) === null || _a === void 0 ? void 0 : _a.removeEventListener('message', this.onSyncMessageHandler);\n      await ((_b = this.channel) === null || _b === void 0 ? void 0 : _b.close());\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n  onTokenAddedHandler(key, token) {\n    var _a;\n    if (!this.enablePostMessage) {\n      return;\n    }\n    (_a = this.channel) === null || _a === void 0 ? void 0 : _a.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n  onTokenRemovedHandler(key, token) {\n    var _a;\n    if (!this.enablePostMessage) {\n      return;\n    }\n    (_a = this.channel) === null || _a === void 0 ? void 0 : _a.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n  onTokenRenewedHandler(key, token, oldToken) {\n    var _a;\n    if (!this.enablePostMessage) {\n      return;\n    }\n    (_a = this.channel) === null || _a === void 0 ? void 0 : _a.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n  onSetStorageHandler(storage) {\n    var _a;\n    (_a = this.channel) === null || _a === void 0 ? void 0 : _a.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n  onSyncMessageHandler(msg) {\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key, msg.token);\n        this.tokenManager.setExpireEventTimeout(msg.key, msg.token);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key);\n        this.tokenManager.emitRemoved(msg.key, msg.token);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key, msg.token, msg.oldToken);\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n}\nexport { SyncStorageService };","map":{"version":3,"names":["SyncStorageService","constructor","tokenManager","options","started","enablePostMessage","onTokenAddedHandler","bind","onTokenRemovedHandler","onTokenRenewedHandler","onSetStorageHandler","onSyncMessageHandler","requiresLeadership","isStarted","canStart","syncStorage","isBrowser","start","syncChannelName","channel","BroadcastChannel","err","AuthSdkError","on","EVENT_ADDED","EVENT_REMOVED","EVENT_RENEWED","EVENT_SET_STORAGE","addEventListener","stop","off","_a","removeEventListener","_b","close","undefined","key","token","postMessage","type","oldToken","storage","msg","getStorage","setStorage","emitAdded","setExpireEventTimeout","clearExpireEventTimeout","emitRemoved","emitRenewed"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/services/SyncStorageService.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface\n} from '../core/types';\nimport {\n  Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE, TokenManagerInterface\n} from '../oidc/types';\nimport { AuthSdkError } from '../errors';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    \n    const { syncChannelName } = this.options;\n    try {\n      // BroadcastChannel throws if no supported method can be found\n      this.channel = new BroadcastChannel(syncChannelName as string);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key!, msg.token!);\n        this.tokenManager.setExpireEventTimeout(msg.key!, msg.token!);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key!);\n        this.tokenManager.emitRemoved(msg.key!, msg.token!);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key!, msg.token!, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}