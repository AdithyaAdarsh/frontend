{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util/object.js';\nimport { stringToBuffer, base64UrlDecode } from './base64.js';\nimport { webcrypto as c } from './browser.js';\nfunction verifyToken(idToken, key) {\n  key = clone(key);\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n  delete key.use;\n  return c.subtle.importKey(format, key, algo, extractable, usages).then(function (cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n    return c.subtle.verify(algo, cryptoKey, signature, payload);\n  });\n}\nexport { verifyToken };","map":{"version":3,"names":["verifyToken","idToken","key","clone","format","algo","name","hash","extractable","usages","use","c","subtle","importKey","then","cryptoKey","jwt","split","payload","stringToBuffer","b64Signature","base64UrlDecode","signature","verify"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/crypto/verifyToken.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n"],"mappings":";;;;;;;;;;;;;;;AAgBgB,SAAAA,WAAWA,CAACC,OAAO,EAAEC,GAAG;EACtCA,GAAG,GAAGC,KAAK,CAACD,GAAG,CAAC;EAEhB,IAAIE,MAAM,GAAG,KAAK;EAClB,IAAIC,IAAI,GAAG;IACTC,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE;MAAED,IAAI,EAAE;IAAW;GAC1B;EACD,IAAIE,WAAW,GAAG,IAAI;EACtB,IAAIC,MAAM,GAAG,CAAC,QAAQ,CAAC;EAKvB,OAAOP,GAAG,CAACQ,GAAG;EAId,OAAOC,CAAS,CAACC,MAAM,CAACC,SAAS,CAC/BT,MAAM,EACNF,GAAG,EACHG,IAAI,EACJG,WAAW,EACXC,MAAM,CACP,CACAK,IAAI,CAAC,UAASC,SAAS;IACtB,IAAIC,GAAG,GAAGf,OAAO,CAACgB,KAAK,CAAC,GAAG,CAAC;IAC5B,IAAIC,OAAO,GAAGC,cAAc,CAACH,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,IAAII,YAAY,GAAGC,eAAe,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAIM,SAAS,GAAGH,cAAc,CAACC,YAAY,CAAC;IAE5C,OAAOT,CAAS,CAACC,MAAM,CAACW,MAAM,CAC5BlB,IAAI,EACJU,SAAS,EACTO,SAAS,EACTJ,OAAO,CACR;EACH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}