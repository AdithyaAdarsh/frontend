{"ast":null,"code":"import _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nvar ReEnrollAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(ReEnrollAuthenticator, _Remediator);\n  var _super = _createSuper(ReEnrollAuthenticator);\n  function ReEnrollAuthenticator() {\n    _classCallCheck(this, ReEnrollAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ReEnrollAuthenticator, [{\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      var newPassword = this.values.newPassword;\n      if (!newPassword) {\n        return;\n      }\n      return {\n        passcode: newPassword\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      var challengeType = this.getAuthenticator().type;\n      var name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n      return Object.assign(Object.assign({}, input.form.value[0]), {\n        name: name\n      });\n    }\n  }]);\n  return ReEnrollAuthenticator;\n}(Remediator);\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\nexport { ReEnrollAuthenticator };","map":{"version":3,"names":["ReEnrollAuthenticator","_Remediator","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","mapCredentials","newPassword","values","passcode","getInputCredentials","input","challengeType","getAuthenticator","type","name","Object","assign","form","Remediator","remediationName"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/ReEnrollAuthenticator.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;IAmBaA,qBAAsB,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,qBAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,qBAAA;EAAA,SAAAA,sBAAA;IAAAK,eAAA,OAAAL,qBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,qBAAA;IAAAS,GAAA;IAAAC,KAAA,EAGjC,SAAAC,eAAA,EAAc;MACZ,IAAQC,WAAW,GAAK,IAAI,CAACC,MAAM,CAA3BD,WAAW;MACnB,IAAI,CAACA,WAAW,EAAE;QAChB;MACD;MACD,OAAO;QACLE,QAAQ,EAAEF;OACX;IACF;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAK,oBAAoBC,KAAK;MAEvB,IAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,EAAG,CAACC,IAAI;MACnD,IAAMC,IAAI,GAAGH,aAAa,KAAK,UAAU,GAAG,aAAa,GAAG,kBAAkB;MAC9E,OACKI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAN,KAAK,CAACO,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC,CACtB;QAAAU,IAAI,EAAJA;MACA;IACH;EAAA;EAAA,OAAApB,qBAAA;AAAA,EArBwCwB,UAAuC;AACzExB,qBAAe,CAAAyB,eAAA,GAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}