{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOktaAuthCore } from '../core/factory.js';\nimport { mixinMyAccount } from './mixin.js';\nfunction createOktaAuthMyAccount(StorageManagerConstructor, OptionsConstructor, TransactionManager) {\n  const Core = createOktaAuthCore(StorageManagerConstructor, OptionsConstructor, TransactionManager);\n  const WithMyAccount = mixinMyAccount(Core);\n  return WithMyAccount;\n}\nexport { createOktaAuthMyAccount };","map":{"version":3,"names":["createOktaAuthMyAccount","StorageManagerConstructor","OptionsConstructor","TransactionManager","Core","createOktaAuthCore","WithMyAccount","mixinMyAccount"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/factory.ts"],"sourcesContent":["import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { createOktaAuthCore } from '../core/factory';\nimport { OktaAuthCoreOptions } from '../core/types';\nimport { mixinMyAccount } from './mixin';\nimport { OktaAuthMyAccountInterface } from './types';\n\nexport function createOktaAuthMyAccount\n<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManager: TransactionManagerConstructor<TM>\n)\n: OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  const Core = createOktaAuthCore<M, S, O>(StorageManagerConstructor, OptionsConstructor, TransactionManager);\n  const WithMyAccount = mixinMyAccount<M, S, O>(Core);\n  return WithMyAccount;\n}\n"],"mappings":";;;;;;;;;;;;;;SAagBA,uBAAuBA,CAQrCC,yBAAuD,EACvDC,kBAAiD,EACjDC,kBAAqD;EAIrD,MAAMC,IAAI,GAAGC,kBAAkB,CAAUJ,yBAAyB,EAAEC,kBAAkB,EAAEC,kBAAkB,CAAC;EAC3G,MAAMG,aAAa,GAAGC,cAAc,CAAUH,IAAI,CAAC;EACnD,OAAOE,aAAa;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}