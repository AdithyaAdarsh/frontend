{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar isFieldMutable = function isFieldMutable(field) {\n  return field.mutable !== false;\n};\nvar divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability(action) {\n  var _a, _b;\n  var defaultParamsForAction = {};\n  var neededParamsForAction = [];\n  var immutableParamsForAction = {};\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return {\n      defaultParamsForAction: defaultParamsForAction,\n      neededParamsForAction: neededParamsForAction,\n      immutableParamsForAction: immutableParamsForAction\n    };\n  }\n  var _iterator = _createForOfIteratorHelper(action.value),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var field = _step.value;\n      if (isFieldMutable(field)) {\n        neededParamsForAction.push(field);\n        if ((_a = field.value) !== null && _a !== void 0 ? _a : false) {\n          defaultParamsForAction[field.name] = field.value;\n        }\n      } else {\n        immutableParamsForAction[field.name] = (_b = field.value) !== null && _b !== void 0 ? _b : '';\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    defaultParamsForAction: defaultParamsForAction,\n    neededParamsForAction: neededParamsForAction,\n    immutableParamsForAction: immutableParamsForAction\n  };\n};\nvar divideActionParamsByMutability = function divideActionParamsByMutability(actionList) {\n  actionList = Array.isArray(actionList) ? actionList : [actionList];\n  var neededParams = [];\n  var defaultParams = {};\n  var immutableParams = {};\n  var _iterator2 = _createForOfIteratorHelper(actionList),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var action = _step2.value;\n      var _divideSingleActionPa = divideSingleActionParamsByMutability(action),\n        defaultParamsForAction = _divideSingleActionPa.defaultParamsForAction,\n        neededParamsForAction = _divideSingleActionPa.neededParamsForAction,\n        immutableParamsForAction = _divideSingleActionPa.immutableParamsForAction;\n      neededParams.push(neededParamsForAction);\n      defaultParams[action.name] = defaultParamsForAction;\n      immutableParams[action.name] = immutableParamsForAction;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    defaultParams: defaultParams,\n    neededParams: neededParams,\n    immutableParams: immutableParams\n  };\n};\nexport { divideActionParamsByMutability };","map":{"version":3,"names":["isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","value","push","_iterator","_createForOfIteratorHelper","_step","s","n","done","_a","name","_b","err","e","f","divideActionParamsByMutability","actionList","Array","isArray","neededParams","defaultParams","immutableParams","_iterator2","_step2","_divideSingleActionPa"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/idxState/v1/actionParser.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}