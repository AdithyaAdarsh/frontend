{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar TokenKind;\n(function (TokenKind) {\n  TokenKind[\"ACCESS\"] = \"accessToken\";\n  TokenKind[\"ID\"] = \"idToken\";\n  TokenKind[\"REFRESH\"] = \"refreshToken\";\n})(TokenKind || (TokenKind = {}));\nfunction isToken(obj) {\n  if (obj && (obj.accessToken || obj.idToken || obj.refreshToken) && Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\nfunction isAccessToken(obj) {\n  return obj && obj.accessToken;\n}\nfunction isIDToken(obj) {\n  return obj && obj.idToken;\n}\nfunction isRefreshToken(obj) {\n  return obj && obj.refreshToken;\n}\nexport { TokenKind, isAccessToken, isIDToken, isRefreshToken, isToken };","map":{"version":3,"names":["TokenKind","isToken","obj","accessToken","idToken","refreshToken","Array","isArray","scopes","isAccessToken","isIDToken","isRefreshToken"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/types/Token.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\nexport enum TokenKind {\n  ACCESS = 'accessToken',\n  ID = 'idToken',\n  REFRESH = 'refreshToken',\n}\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n"],"mappings":";;;;;;;;;;;;IA6CYA,SAIX;AAJD,WAAYA,SAAS;EACnBA,SAAA,0BAAsB;EACtBA,SAAA,kBAAc;EACdA,SAAA,4BAAwB;AAC1B,CAAC,EAJWA,SAAS,KAATA,SAAS,GAIpB;AAEK,SAAUC,OAAOA,CAACC,GAAQ;EAC9B,IAAIA,GAAG,KACFA,GAAG,CAACC,WAAW,IAAID,GAAG,CAACE,OAAO,IAAIF,GAAG,CAACG,YAAY,CAAC,IACpDC,KAAK,CAACC,OAAO,CAACL,GAAG,CAACM,MAAM,CAAC,EAAE;IAC7B,OAAO,IAAI;EACZ;EACD,OAAO,KAAK;AACd;AAEM,SAAUC,aAAaA,CAACP,GAAQ;EACpC,OAAOA,GAAG,IAAIA,GAAG,CAACC,WAAW;AAC/B;AAEM,SAAUO,SAASA,CAACR,GAAQ;EAChC,OAAOA,GAAG,IAAIA,GAAG,CAACE,OAAO;AAC3B;AAEM,SAAUO,cAAcA,CAACT,GAAQ;EACrC,OAAOA,GAAG,IAAIA,GAAG,CAACG,YAAY;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}