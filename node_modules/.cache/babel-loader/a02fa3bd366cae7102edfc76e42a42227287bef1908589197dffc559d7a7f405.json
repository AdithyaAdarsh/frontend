{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nvar getPassword = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return sendRequest(oktaAuth, {\n            url: \"/idp/myaccount/password\",\n            method: 'GET',\n            accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n            transactionClassName: 'PasswordTransaction'\n          });\n        case 2:\n          transaction = _context.sent;\n          return _context.abrupt(\"return\", transaction);\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getPassword(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar enrollPassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(oktaAuth, options) {\n    var accessToken, payload, transaction;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          accessToken = options.accessToken, payload = options.payload;\n          _context2.next = 3;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/password',\n            method: 'POST',\n            payload: payload,\n            accessToken: accessToken,\n            transactionClassName: 'PasswordTransaction'\n          });\n        case 3:\n          transaction = _context2.sent;\n          return _context2.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function enrollPassword(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar updatePassword = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(oktaAuth, options) {\n    var accessToken, payload, transaction;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          accessToken = options.accessToken, payload = options.payload;\n          _context3.next = 3;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/password',\n            method: 'PUT',\n            payload: payload,\n            accessToken: accessToken,\n            transactionClassName: 'PasswordTransaction'\n          });\n        case 3:\n          transaction = _context3.sent;\n          return _context3.abrupt(\"return\", transaction);\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function updatePassword(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar deletePassword = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return sendRequest(oktaAuth, {\n            url: \"/idp/myaccount/password\",\n            method: 'DELETE',\n            accessToken: options === null || options === void 0 ? void 0 : options.accessToken\n          });\n        case 2:\n          transaction = _context4.sent;\n          return _context4.abrupt(\"return\", transaction);\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function deletePassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport { deletePassword, enrollPassword, getPassword, updatePassword };","map":{"version":3,"names":["getPassword","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","oktaAuth","options","transaction","wrap","_callee$","_context","prev","next","sendRequest","url","method","accessToken","transactionClassName","sent","abrupt","stop","_x","_x2","apply","arguments","enrollPassword","_ref2","_callee2","payload","_callee2$","_context2","_x3","_x4","updatePassword","_ref3","_callee3","_callee3$","_context3","_x5","_x6","deletePassword","_ref4","_callee4","_callee4$","_context4","_x7","_x8"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/passwordApi.ts"],"sourcesContent":["import { sendRequest } from './request';\nimport { \n  IAPIFunction,\n  BaseTransaction, \n  PasswordTransaction\n} from './types';\n\n/**\n * @scope: okta.myAccount.password.read\n */\nexport const getPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'PasswordTransaction'\n  }) as PasswordTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const enrollPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'POST',\n    payload,\n    accessToken,\n    transactionClassName: 'PasswordTransaction'\n  }) as PasswordTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const updatePassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'PUT',\n    payload,\n    accessToken,\n    transactionClassName: 'PasswordTransaction'\n  }) as PasswordTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const deletePassword: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'DELETE',\n    accessToken: options?.accessToken,\n  }) as BaseTransaction;\n  return transaction;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}