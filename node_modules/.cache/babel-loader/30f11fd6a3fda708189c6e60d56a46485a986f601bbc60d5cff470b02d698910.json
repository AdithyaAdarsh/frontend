{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    oktaAuth\n  } = useOktaAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = async () => {\n    setIsLoading(true);\n    try {\n      // Redirect the user to the Okta sign-in page\n      await oktaAuth.signInWithRedirect();\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsLoading(false);\n    }\n  };\n  const sendTokenToServer = async token => {\n    try {\n      // Send the Okta token to your server's /login endpoint\n      const response = await axios.post('http://localhost:5000/login', {\n        okta_token: token\n      });\n\n      // Store the access token in local storage\n      localStorage.setItem('token', response.data.access_token);\n\n      // You can now navigate to the protected route if needed\n      // Example: navigate('/customer_service');\n    } catch (error) {\n      console.error('Error sending token to server:', error);\n    }\n  };\n\n  // Listen for the Okta authentication event\n  oktaAuth.authStateManager.subscribe(async authState => {\n    if (authState.isAuthenticated) {\n      // Send the Okta token to your server when the user is authenticated\n      sendTokenToServer(authState.idToken);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: isLoading ? 'Logging In...' : 'Log In with Okta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"y8o1UrflEoDWjCGXOnC4rFR1kjw=\", false, function () {\n  return [useOktaAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useOktaAuth","axios","jsxDEV","_jsxDEV","Login","_s","oktaAuth","isLoading","setIsLoading","handleLogin","signInWithRedirect","error","console","sendTokenToServer","token","response","post","okta_token","localStorage","setItem","data","access_token","authStateManager","subscribe","authState","isAuthenticated","idToken","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport axios from 'axios';\n\nconst Login = () => {\n  const { oktaAuth } = useOktaAuth();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n\n    try {\n      // Redirect the user to the Okta sign-in page\n      await oktaAuth.signInWithRedirect();\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  const sendTokenToServer = async (token) => {\n    try {\n      // Send the Okta token to your server's /login endpoint\n      const response = await axios.post('http://localhost:5000/login', { okta_token: token });\n      \n      // Store the access token in local storage\n      localStorage.setItem('token', response.data.access_token);\n      \n      \n      // You can now navigate to the protected route if needed\n      // Example: navigate('/customer_service');\n    } catch (error) {\n      console.error('Error sending token to server:', error);\n    }\n  };\n\n  // Listen for the Okta authentication event\n  oktaAuth.authStateManager.subscribe(async (authState) => {\n    if (authState.isAuthenticated) {\n      // Send the Okta token to your server when the user is authenticated\n      sendTokenToServer(authState.idToken);\n    }\n  });\n\n  return (\n    <div>\n      <button onClick={handleLogin} disabled={isLoading}>\n        {isLoading ? 'Logging In...' : 'Log In with Okta'}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAS,CAAC,GAAGN,WAAW,CAAC,CAAC;EAClC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMF,QAAQ,CAACI,kBAAkB,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,6BAA6B,EAAE;QAAEC,UAAU,EAAEH;MAAM,CAAC,CAAC;;MAEvF;MACAI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,IAAI,CAACC,YAAY,CAAC;;MAGzD;MACA;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;;EAED;EACAL,QAAQ,CAACgB,gBAAgB,CAACC,SAAS,CAAC,MAAOC,SAAS,IAAK;IACvD,IAAIA,SAAS,CAACC,eAAe,EAAE;MAC7B;MACAZ,iBAAiB,CAACW,SAAS,CAACE,OAAO,CAAC;IACtC;EACF,CAAC,CAAC;EAEF,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAQyB,OAAO,EAAEnB,WAAY;MAACoB,QAAQ,EAAEtB,SAAU;MAAAoB,QAAA,EAC/CpB,SAAS,GAAG,eAAe,GAAG;IAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/CID,KAAK;EAAA,QACYJ,WAAW;AAAA;AAAAkC,EAAA,GAD5B9B,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}