{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\nasync function register(authClient, options = {}) {\n  if (!hasSavedInteractionHandle(authClient)) {\n    const {\n      enabledFeatures\n    } = await startTransaction(authClient, Object.assign(Object.assign({}, options), {\n      flow: 'register',\n      autoRemediate: false\n    }));\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n  return run(authClient, Object.assign(Object.assign({}, options), {\n    flow: 'register'\n  }));\n}\nexport { register };","map":{"version":3,"names":["register","authClient","options","hasSavedInteractionHandle","enabledFeatures","startTransaction","Object","assign","flow","autoRemediate","activationToken","includes","IdxFeature","REGISTRATION","AuthSdkError","run"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/register.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAwBO,eAAeA,QAAQA,CAC5BC,UAAgC,EAAEC,OAAA,GAA+B,EAAE;EAInE,IAAI,CAACC,yBAAyB,CAACF,UAAU,CAAC,EAAE;IAC1C,MAAM;MAAEG;IAAe,CAAE,GAAG,MAAMC,gBAAgB,CAACJ,UAAU,EAAAK,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACxDL,OAAO,CACV;MAAAM,IAAI,EAAE,UAAU;MAChBC,aAAa,EAAE;IAAK,GACpB;IACF,IAAI,CAACP,OAAO,CAACQ,eAAe,IAAIN,eAAe,IAAI,CAACA,eAAe,CAACO,QAAQ,CAACC,UAAU,CAACC,YAAY,CAAC,EAAE;MACrG,MAAM,IAAIC,YAAY,CAAC,wEAAwE,CAAC;IACjG;EACF;EAED,OAAOC,GAAG,CAACd,UAAU,EAChBK,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAL,OAAO;IACVM,IAAI,EAAE;EAAU,GAChB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}