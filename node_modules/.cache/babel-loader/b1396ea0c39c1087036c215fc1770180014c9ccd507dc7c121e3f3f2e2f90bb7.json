{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage/options/StorageOptionsConstructor.js';\nimport fetchRequest from '../fetch/fetchRequest.js';\nfunction createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor {\n    constructor(args) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n    }\n  };\n}\nexport { createHttpOptionsConstructor };","map":{"version":3,"names":["createHttpOptionsConstructor","StorageOptionsConstructor","createStorageOptionsConstructor","HttpOptionsConstructor","constructor","args","issuer","transformErrorXHR","headers","httpRequestClient","fetchRequest","httpRequestInterceptors"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/http/options.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage';\nimport { HttpRequestClient, OktaAuthHttpOptions, RequestOptions } from './types';\nimport fetchRequest from '../fetch/fetchRequest';\n\nexport function createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor implements Required<OktaAuthHttpOptions> {\n    issuer: string;\n    transformErrorXHR: (xhr: object) => any;\n    headers: object;\n    httpRequestClient: HttpRequestClient;\n    httpRequestInterceptors: ((request: RequestOptions) => void)[];\n    \n    constructor(args: any) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;SAgBgBA,4BAA4BA,CAAA;EAC1C,MAAMC,yBAAyB,GAAGC,+BAA+B,EAAE;EACnE,OAAO,MAAMC,sBAAuB,SAAQF,yBAAyB;IAOnEG,YAAYC,IAAS;MACnB,KAAK,CAACA,IAAI,CAAC;MACX,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzB,IAAI,CAACC,iBAAiB,GAAGF,IAAI,CAACE,iBAAiB;MAC/C,IAAI,CAACC,OAAO,GAAGH,IAAI,CAACG,OAAO;MAC3B,IAAI,CAACC,iBAAiB,GAAGJ,IAAI,CAACI,iBAAiB,IAAIC,YAAY;MAC/D,IAAI,CAACC,uBAAuB,GAAGN,IAAI,CAACM,uBAAuB;IAC5D;GACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}