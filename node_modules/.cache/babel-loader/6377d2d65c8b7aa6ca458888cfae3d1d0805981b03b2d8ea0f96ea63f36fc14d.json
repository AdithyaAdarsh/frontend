{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nconst getProfile = async (oktaAuth, options) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    transactionClassName: 'ProfileTransaction'\n  });\n  return transaction;\n};\nconst updateProfile = async (oktaAuth, options) => {\n  const {\n    payload,\n    accessToken\n  } = options;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n    transactionClassName: 'ProfileTransaction'\n  });\n  return transaction;\n};\nconst getProfileSchema = async (oktaAuth, options) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    transactionClassName: 'ProfileSchemaTransaction'\n  });\n  return transaction;\n};\nexport { getProfile, getProfileSchema, updateProfile };","map":{"version":3,"names":["getProfile","oktaAuth","options","transaction","sendRequest","url","method","accessToken","transactionClassName","updateProfile","payload","getProfileSchema"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/profileApi.ts"],"sourcesContent":["import { sendRequest } from './request';\nimport { \n  IAPIFunction,\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './types';\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'ProfileTransaction'\n  }) as ProfileTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n    transactionClassName: 'ProfileTransaction'\n  }) as ProfileTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'ProfileSchemaTransaction'\n  }) as ProfileSchemaTransaction;\n  return transaction;\n};\n"],"mappings":";;;;;;;;;;;;;AAUa,MAAAA,UAAU,GAAqC,MAAAA,CAAOC,QAAQ,EAAEC,OAAQ,KAAI;EACvF,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAE,wBAAwB;IAC7BC,MAAM,EAAE,KAAK;IACbC,WAAW,EAAEL,OAAO,aAAPA,OAAO,KAAP,kBAAAA,OAAO,CAAEK,WAAW;IACjCC,oBAAoB,EAAE;EACvB,EAAuB;EACxB,OAAOL,WAAW;AACpB,CAAE;AAKW,MAAAM,aAAa,GAAqC,MAAAA,CAC7DR,QAAQ,EACRC,OAAO,KACL;EACF,MAAM;IAAEQ,OAAO;IAAEH;EAAa,IAAGL,OAAQ;EACzC,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAE,wBAAwB;IAC7BC,MAAM,EAAE,KAAK;IACbI,OAAO;IACPH,WAAW;IACXC,oBAAoB,EAAE;EACvB,EAAuB;EACxB,OAAOL,WAAW;AACpB,CAAE;AAKW,MAAAQ,gBAAgB,GAA2C,MAAAA,CACtEV,QAAQ,EACRC,OAAQ,KAC6B;EACrC,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAE,+BAA+B;IACpCC,MAAM,EAAE,KAAK;IACbC,WAAW,EAAEL,OAAO,aAAPA,OAAO,KAAP,kBAAAA,OAAO,CAAEK,WAAW;IACjCC,oBAAoB,EAAE;EACvB,EAA6B;EAC9B,OAAOL,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}