{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    oktaAuth\n  } = useOktaAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = async () => {\n    setIsLoading(true);\n    try {\n      // Redirect the user to the Okta sign-in page\n      await oktaAuth.signInWithRedirect();\n\n      // After successful Okta login, obtain the Okta token\n      const authState = await oktaAuth.authStateManager.getAuthState();\n      const oktaToken = authState.idToken;\n\n      // Send the Okta token to your server's /login endpoint\n      axios.post('http://localhost:5000/login', {\n        oktaToken: oktaToken\n      }).then(response => {\n        if (response.data.access_token) {\n          // Store the token securely (localStorage or sessionStorage)\n          localStorage.setItem('token', response.data.access_token);\n\n          // You can now navigate to the protected route if needed\n          // Example: navigate('/customer_service');\n        } else {\n          console.error('Access token not received');\n        }\n      }).catch(error => {\n        console.error('Error sending token to server:', error);\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: isLoading ? 'Logging In...' : 'Log In with Okta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"y8o1UrflEoDWjCGXOnC4rFR1kjw=\", false, function () {\n  return [useOktaAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useOktaAuth","axios","jsxDEV","_jsxDEV","Login","_s","oktaAuth","isLoading","setIsLoading","handleLogin","signInWithRedirect","authState","authStateManager","getAuthState","oktaToken","idToken","post","then","response","data","access_token","localStorage","setItem","console","error","catch","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport axios from 'axios';\n\nconst Login = () => {\n  const { oktaAuth } = useOktaAuth();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n\n    try {\n      // Redirect the user to the Okta sign-in page\n      await oktaAuth.signInWithRedirect();\n\n      // After successful Okta login, obtain the Okta token\n      const authState = await oktaAuth.authStateManager.getAuthState();\n      const oktaToken = authState.idToken;\n\n      // Send the Okta token to your server's /login endpoint\n      axios\n        .post('http://localhost:5000/login', { oktaToken: oktaToken })\n        .then((response) => {\n          if (response.data.access_token) {\n            // Store the token securely (localStorage or sessionStorage)\n            localStorage.setItem('token', response.data.access_token);\n\n            // You can now navigate to the protected route if needed\n            // Example: navigate('/customer_service');\n          } else {\n            console.error('Access token not received');\n          }\n        })\n        .catch((error) => {\n          console.error('Error sending token to server:', error);\n        });\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleLogin} disabled={isLoading}>\n        {isLoading ? 'Logging In...' : 'Log In with Okta'}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAS,CAAC,GAAGN,WAAW,CAAC,CAAC;EAClC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMF,QAAQ,CAACI,kBAAkB,CAAC,CAAC;;MAEnC;MACA,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,gBAAgB,CAACC,YAAY,CAAC,CAAC;MAChE,MAAMC,SAAS,GAAGH,SAAS,CAACI,OAAO;;MAEnC;MACAd,KAAK,CACFe,IAAI,CAAC,6BAA6B,EAAE;QAAEF,SAAS,EAAEA;MAAU,CAAC,CAAC,CAC7DG,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,YAAY,EAAE;UAC9B;UACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC;;UAEzD;UACA;QACF,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;QAC5C;MACF,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,CAAC;IACN,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpChB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAQwB,OAAO,EAAElB,WAAY;MAACmB,QAAQ,EAAErB,SAAU;MAAAmB,QAAA,EAC/CnB,SAAS,GAAG,eAAe,GAAG;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA7CID,KAAK;EAAA,QACYJ,WAAW;AAAA;AAAAiC,EAAA,GAD5B7B,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}