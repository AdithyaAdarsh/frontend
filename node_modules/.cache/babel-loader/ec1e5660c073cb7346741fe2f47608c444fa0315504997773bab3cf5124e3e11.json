{"ast":null,"code":"import _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isPromise } from './types.js';\nimport { warn } from './console.js';\nvar PromiseQueue = /*#__PURE__*/function () {\n  function PromiseQueue() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      quiet: false\n    };\n    _classCallCheck(this, PromiseQueue);\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n  _createClass(PromiseQueue, [{\n    key: \"push\",\n    value: function push(method, thisObject) {\n      var _this = this;\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      return new Promise(function (resolve, reject) {\n        if (_this.queue.length > 0) {\n          if (_this.options.quiet !== false) {\n            warn('Async method is being called but another async method is already running. ' + 'The new method will be delayed until the previous method completes.');\n          }\n        }\n        _this.queue.push({\n          method: method,\n          thisObject: thisObject,\n          args: args,\n          resolve: resolve,\n          reject: reject\n        });\n        _this.run();\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this2 = this;\n      if (this.running) {\n        return;\n      }\n      if (this.queue.length === 0) {\n        return;\n      }\n      this.running = true;\n      var queueItem = this.queue.shift();\n      var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n      if (isPromise(res)) {\n        res.then(queueItem.resolve, queueItem.reject).finally(function () {\n          _this2.running = false;\n          _this2.run();\n        });\n      } else {\n        queueItem.resolve(res);\n        this.running = false;\n        this.run();\n      }\n    }\n  }]);\n  return PromiseQueue;\n}();\nexport { PromiseQueue };","map":{"version":3,"names":["PromiseQueue","options","arguments","length","undefined","quiet","_classCallCheck","queue","running","_createClass","key","value","push","method","thisObject","_this","_len","args","Array","_key","Promise","resolve","reject","warn","run","_this2","queueItem","shift","res","apply","isPromise","then","finally"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/util/PromiseQueue.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;IA8BaA,YAAY;EAKvB,SAAAA,aAAA,EAA2D;IAAA,IAA/CC,OAA+B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;MAAEG,KAAK,EAAE;IAAK,CAAE;IAAAC,eAAA,OAAAN,YAAA;IACzD,IAAI,CAACO,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACP,OAAO,GAAGA,OAAO;EACvB;EAAAQ,YAAA,CAAAT,YAAA;IAAAU,GAAA;IAAAC,KAAA,EAKD,SAAAC,KAAKC,MAA6B,EAAEC,UAAe,EAAgB;MAAA,IAAAC,KAAA;MAAA,SAAAC,IAAA,GAAAd,SAAA,CAAAC,MAAA,EAAXc,IAAW,OAAAC,KAAA,CAAAF,IAAA,OAAAA,IAAA,WAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;QAAXF,IAAW,CAAAE,IAAA,QAAAjB,SAAA,CAAAiB,IAAA;MAAA;MACjE,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAI;QACrC,IAAIP,KAAI,CAACR,KAAK,CAACJ,MAAM,GAAG,CAAC,EAAE;UAGzB,IAAIY,KAAI,CAACd,OAAO,CAACI,KAAK,KAAK,KAAK,EAAE;YAChCkB,IAAI,CACF,4EAA4E,GAC5E,qEAAqE,CACtE;UACF;QACF;QACDR,KAAI,CAACR,KAAK,CAACK,IAAI,CAAC;UACdC,MAAM,EAANA,MAAM;UACNC,UAAU,EAAVA,UAAU;UACVG,IAAI,EAAJA,IAAI;UACJI,OAAO,EAAPA,OAAO;UACPC,MAAM,EAANA;QACD,EAAC;QACFP,KAAI,CAACS,GAAG,EAAE;MACZ,CAAC,CAAC;IACH;EAAA;IAAAd,GAAA;IAAAC,KAAA,EAED,SAAAa,IAAA,EAAG;MAAA,IAAAC,MAAA;MACD,IAAI,IAAI,CAACjB,OAAO,EAAE;QAChB;MACD;MACD,IAAI,IAAI,CAACD,KAAK,CAACJ,MAAM,KAAK,CAAC,EAAE;QAC3B;MACD;MACD,IAAI,CAACK,OAAO,GAAG,IAAI;MAEnB,IAAIkB,SAAS,GAAG,IAAI,CAACnB,KAAK,CAACoB,KAAK,EAAG;MACnC,IAAIC,GAAG,GAAGF,SAAS,CAACb,MAAM,CAACgB,KAAK,CAACH,SAAS,CAACZ,UAAU,EAAEY,SAAS,CAACT,IAAa,CAAY;MAC1F,IAAIa,SAAS,CAACF,GAAG,CAAC,EAAE;QACjBA,GAAwB,CAACG,IAAI,CAACL,SAAS,CAACL,OAAO,EAAEK,SAAS,CAACJ,MAAM,CAAC,CAACU,OAAO,CAAC,YAAK;UAC/EP,MAAI,CAACjB,OAAO,GAAG,KAAK;UACpBiB,MAAI,CAACD,GAAG,EAAE;QACZ,CAAC,CAAC;MACH,OAAM;QACLE,SAAS,CAACL,OAAO,CAACO,GAAG,CAAC;QACtB,IAAI,CAACpB,OAAO,GAAG,KAAK;QACpB,IAAI,CAACgB,GAAG,EAAE;MACX;IACF;EAAA;EAAA,OAAAxB,YAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}