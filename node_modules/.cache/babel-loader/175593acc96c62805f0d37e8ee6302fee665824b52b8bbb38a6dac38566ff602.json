{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport OAuthError from '../errors/OAuthError.js';\nfunction handleInteractionCodeRedirect(_x, _x2) {\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\nfunction _handleInteractionCodeRedirect() {\n  _handleInteractionCodeRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient, url) {\n    var meta, codeVerifier, savedState, _URL, searchParams, state, interactionCode, error, _yield$authClient$tok, tokens;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          meta = authClient.transactionManager.load();\n          if (meta) {\n            _context.next = 3;\n            break;\n          }\n          throw new AuthSdkError('No transaction data was found in storage');\n        case 3:\n          codeVerifier = meta.codeVerifier, savedState = meta.state;\n          _URL = new URL(url), searchParams = _URL.searchParams;\n          state = searchParams.get('state');\n          interactionCode = searchParams.get('interaction_code');\n          error = searchParams.get('error');\n          if (!error) {\n            _context.next = 10;\n            break;\n          }\n          throw new OAuthError(error, searchParams.get('error_description'));\n        case 10:\n          if (!(state !== savedState)) {\n            _context.next = 12;\n            break;\n          }\n          throw new AuthSdkError('State in redirect uri does not match with transaction state');\n        case 12:\n          if (interactionCode) {\n            _context.next = 14;\n            break;\n          }\n          throw new AuthSdkError('Unable to parse interaction_code from the url');\n        case 14:\n          _context.next = 16;\n          return authClient.token.exchangeCodeForTokens({\n            interactionCode: interactionCode,\n            codeVerifier: codeVerifier\n          });\n        case 16:\n          _yield$authClient$tok = _context.sent;\n          tokens = _yield$authClient$tok.tokens;\n          authClient.tokenManager.setTokens(tokens);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\nexport { handleInteractionCodeRedirect };","map":{"version":3,"names":["handleInteractionCodeRedirect","_x","_x2","_handleInteractionCodeRedirect","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authClient","url","meta","codeVerifier","savedState","_URL","searchParams","state","interactionCode","error","_yield$authClient$tok","tokens","wrap","_callee$","_context","prev","next","transactionManager","load","AuthSdkError","URL","get","OAuthError","token","exchangeCodeForTokens","sent","tokenManager","setTokens","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/handleInteractionCodeRedirect.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { IdxTransactionMeta } from './types/meta';\nimport { OktaAuthIdxInterface } from './types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuthIdxInterface, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}"],"mappings":";;;;;;;;;;;;;;;;SAiBsBA,6BAA6BA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,8BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,+BAAA;EAAAA,8BAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA5C,SAAAC,QACLC,UAAgC,EAChCC,GAAW;IAAA,IAAAC,IAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,IAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,MAAA;IAAA,OAAAd,mBAAA,GAAAe,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAELd,IAAI,GAAGF,UAAU,CAACiB,kBAAkB,CAACC,IAAI,EAAwB;UAAA,IAClEhB,IAAI;YAAAY,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACD,IAAIG,YAAY,CAAC,0CAA0C,CAAC;QAAA;UAIlEhB,YAAY,GAEVD,IAAI,CAFNC,YAAY,EACLC,UAAU,GACfF,IAAI,CADNK,KAAK;UAAAF,IAAA,GAMH,IAAIe,GAAG,CAACnB,GAAG,CAAC,EAHdK,YAAY,GAAAD,IAAA,CAAZC,YAAY;UAIRC,KAAK,GAAGD,YAAY,CAACe,GAAG,CAAC,OAAO,CAAC;UACjCb,eAAe,GAAGF,YAAY,CAACe,GAAG,CAAC,kBAAkB,CAAC;UAGtDZ,KAAK,GAAGH,YAAY,CAACe,GAAG,CAAC,OAAO,CAAC;UAAA,KACnCZ,KAAK;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAED,IAAIM,UAAU,CAACb,KAAK,EAAEH,YAAY,CAACe,GAAG,CAAC,mBAAmB,CAAE,CAAC;QAAA;UAAA,MAEjEd,KAAK,KAAKH,UAAU;YAAAU,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAChB,IAAIG,YAAY,CAAC,6DAA6D,CAAC;QAAA;UAAA,IAElFX,eAAe;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACZ,IAAIG,YAAY,CAAC,+CAA+C,CAAC;QAAA;UAAAL,QAAA,CAAAE,IAAA;UAAA,OAIhDhB,UAAU,CAACuB,KAAK,CAACC,qBAAqB,CAAC;YAAEhB,eAAe,EAAfA,eAAe;YAAEL,YAAY,EAAZA;UAAY,CAAE,CAAC;QAAA;UAAAO,qBAAA,GAAAI,QAAA,CAAAW,IAAA;UAA1Fd,MAAM,GAAAD,qBAAA,CAANC,MAAM;UACdX,UAAU,CAAC0B,YAAY,CAACC,SAAS,CAAChB,MAAM,CAAC;QAAC;QAAA;UAAA,OAAAG,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAA7B,OAAA;EAAA,CAC5C;EAAA,OAAAN,8BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}