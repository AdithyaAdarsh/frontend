{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { genRandomString } from '../../util/misc.js';\nimport { removeTrailingSlash } from '../../util/url.js';\nimport AuthSdkError from '../../errors/AuthSdkError.js';\nfunction generateState() {\n  return genRandomString(64);\n}\nfunction generateNonce() {\n  return genRandomString(64);\n}\nfunction getIssuer(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\nfunction getOAuthBaseUrl(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = getIssuer(sdk, options);\n  var baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\nfunction getOAuthDomain(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = getIssuer(sdk, options);\n  var domain = issuer.split('/oauth2')[0];\n  return domain;\n}\nfunction getOAuthUrls(sdk, options) {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\nexport { generateNonce, generateState, getOAuthBaseUrl, getOAuthDomain, getOAuthUrls };","map":{"version":3,"names":["generateState","genRandomString","generateNonce","getIssuer","sdk","options","arguments","length","undefined","issuer","removeTrailingSlash","getOAuthBaseUrl","baseUrl","indexOf","getOAuthDomain","domain","split","getOAuthUrls","AuthSdkError","authorizeUrl","userinfoUrl","tokenUrl","logoutUrl","revokeUrl"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/oidc/util/oauth.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, CustomUrls } from '../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}