{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst isFieldMutable = function isFieldMutable(field) {\n  return field.mutable !== false;\n};\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability(action) {\n  var _a, _b;\n  const defaultParamsForAction = {};\n  const neededParamsForAction = [];\n  const immutableParamsForAction = {};\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return {\n      defaultParamsForAction,\n      neededParamsForAction,\n      immutableParamsForAction\n    };\n  }\n  for (let field of action.value) {\n    if (isFieldMutable(field)) {\n      neededParamsForAction.push(field);\n      if ((_a = field.value) !== null && _a !== void 0 ? _a : false) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n    } else {\n      immutableParamsForAction[field.name] = (_b = field.value) !== null && _b !== void 0 ? _b : '';\n    }\n  }\n  return {\n    defaultParamsForAction,\n    neededParamsForAction,\n    immutableParamsForAction\n  };\n};\nconst divideActionParamsByMutability = function divideActionParamsByMutability(actionList) {\n  actionList = Array.isArray(actionList) ? actionList : [actionList];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n  for (let action of actionList) {\n    const {\n      defaultParamsForAction,\n      neededParamsForAction,\n      immutableParamsForAction\n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n  return {\n    defaultParams,\n    neededParams,\n    immutableParams\n  };\n};\nexport { divideActionParamsByMutability };","map":{"version":3,"names":["isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","value","push","_a","name","_b","divideActionParamsByMutability","actionList","Array","isArray","neededParams","defaultParams","immutableParams"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/idxState/v1/actionParser.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n"],"mappings":";;;;;;;;;;;;AAcA,MAAMA,cAAc,GAAG,SAASA,cAAcA,CAACC,KAAK;EAElD,OAASA,KAAK,CAACC,OAAO,KAAK,KAAK;AAClC,CAAC;AAED,MAAMC,oCAAoC,GAAG,SAASA,oCAAoCA,CAAEC,MAAM;;EAChG,MAAMC,sBAAsB,GAAG,EAAE;EACjC,MAAMC,qBAAqB,GAAG,EAAE;EAChC,MAAMC,wBAAwB,GAAG,EAAE;EAInC,IAAI,CAACH,MAAM,CAACI,KAAK,EAAE;IACjBF,qBAAqB,CAACG,IAAI,CAACL,MAAM,CAAC;IAClC,OAAO;MAAEC,sBAAsB;MAAEC,qBAAqB;MAAEC;IAAwB,CAAE;EACnF;EAED,KAAM,IAAIN,KAAK,IAAIG,MAAM,CAACI,KAAK,EAAG;IAEhC,IAAKR,cAAc,CAAEC,KAAK,CAAE,EAAG;MAE7BK,qBAAqB,CAACG,IAAI,CAACR,KAAK,CAAC;MAEjC,IAAK,CAAAS,EAAA,GAAAT,KAAK,CAACO,KAAK,cAAAE,EAAA,cAAAA,EAAA,GAAI,KAAK,EAAG;QAC1BL,sBAAsB,CAACJ,KAAK,CAACU,IAAI,CAAC,GAAGV,KAAK,CAACO,KAAK;MACjD;IAEF,OAAM;MACLD,wBAAwB,CAACN,KAAK,CAACU,IAAI,CAAC,GAAG,CAAAC,EAAA,GAAAX,KAAK,CAACO,KAAK,MAAI,QAAAI,EAAA,cAAAA,EAAA,KAAE;IACzD;EACF;EACD,OAAO;IAAEP,sBAAsB;IAAEC,qBAAqB;IAAEC;EAAwB,CAAE;AACpF,CAAC;AAEY,MAAAM,8BAA8B,GAAG,SAASA,8BAA8BA,CAAEC,UAAU;EAE/FA,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,GAAGA,UAAU,GAAG,CAAEA,UAAU,CAAE;EACpE,MAAMG,YAAY,GAAG,EAAE;EACvB,MAAMC,aAAa,GAAG,EAAE;EACxB,MAAMC,eAAe,GAAG,EAAE;EAE1B,KAAM,IAAIf,MAAM,IAAIU,UAAU,EAAG;IAC/B,MAAM;MACJT,sBAAsB;MACtBC,qBAAqB;MACrBC;IAAwB,CACzB,GAAGJ,oCAAoC,CAACC,MAAM,CAAC;IAChDa,YAAY,CAACR,IAAI,CAACH,qBAAqB,CAAC;IACxCY,aAAa,CAACd,MAAM,CAACO,IAAI,CAAC,GAAGN,sBAAsB;IACnDc,eAAe,CAACf,MAAM,CAACO,IAAI,CAAC,GAAGJ,wBAAwB;EACxD;EAED,OAAO;IAAEW,aAAa;IAAED,YAAY;IAAEE;EAAe,CAAE;AACzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}