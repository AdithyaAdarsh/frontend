{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticationFlow } from './AuthenticationFlow.js';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow.js';\nimport { RegistrationFlow } from './RegistrationFlow.js';\nimport { AccountUnlockFlow } from './AccountUnlockFlow.js';\nfunction getFlowSpecification(oktaAuth) {\n  var flow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n  var remediators,\n    actions,\n    withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = ['unlock-account'];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return {\n    flow: flow,\n    remediators: remediators,\n    actions: actions,\n    withCredentials: withCredentials\n  };\n}\nexport { getFlowSpecification };","map":{"version":3,"names":["getFlowSpecification","oktaAuth","flow","arguments","length","undefined","remediators","actions","withCredentials","RegistrationFlow","PasswordRecoveryFlow","AccountUnlockFlow","AuthenticationFlow"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/flow/FlowSpecification.ts"],"sourcesContent":["import { OktaAuthIdxInterface, FlowIdentifier } from '../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n"],"mappings":";;;;;;;;;;;;;;;;SAegBA,oBAAoBA,CAClCC,QAA8B,EACE;EAAA,IAAhCC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB,SAAS;EAEhC,IAAIG,WAAW;IAAEC,OAAO;IAAEC,eAAe,GAAG,IAAI;EAChD,QAAQN,IAAI;IACV,KAAK,UAAU;IACf,KAAK,QAAQ;IACb,KAAK,eAAe;MAClBI,WAAW,GAAGG,gBAAgB;MAC9BD,eAAe,GAAG,KAAK;MACvB;IACF,KAAK,iBAAiB;IACtB,KAAK,eAAe;MAClBF,WAAW,GAAGI,oBAAoB;MAClCH,OAAO,GAAG,CACR,8BAA8B,EAC9B,wCAAwC,CACzC;MACDC,eAAe,GAAG,KAAK;MACvB;IACF,KAAK,eAAe;MAClBF,WAAW,GAAGK,iBAAiB;MAC/BH,eAAe,GAAG,KAAK;MACvBD,OAAO,GAAG,CACR,gBAAgB,CACjB;MACD;IACF,KAAK,cAAc;IACnB,KAAK,OAAO;IACZ,KAAK,QAAQ;MACXD,WAAW,GAAGM,kBAAkB;MAChC;IACF;MAEEN,WAAW,GAAGM,kBAAkB;MAChC;EACH;EACD,OAAO;IAAEV,IAAI,EAAJA,IAAI;IAAEI,WAAW,EAAXA,WAAW;IAAEC,OAAO,EAAPA,OAAO;IAAEC,eAAe,EAAfA;EAAe,CAAE;AACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}