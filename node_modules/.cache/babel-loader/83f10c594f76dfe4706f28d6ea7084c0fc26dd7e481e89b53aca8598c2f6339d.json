{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { link2fn } from './link2fn.js';\nimport { getPollFn } from './poll.js';\nfunction links2fns(sdk, tx, res, obj, ref) {\n  var fns = {};\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n    var link = obj._links[linkName];\n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n    switch (linkName) {\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n      default:\n        var fn = link2fn(sdk, tx, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\nexport { links2fns };","map":{"version":3,"names":["links2fns","sdk","tx","res","obj","ref","fns","linkName","_links","Object","prototype","hasOwnProperty","call","link","name","type","poll","getPollFn","fn","link2fn"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/authn/util/links2fns.ts"],"sourcesContent":["import { OktaAuthHttpInterface } from '../../http/types';\nimport { AuthnTransactionFunctions, AuthnTransactionAPI } from '../types';\nimport { link2fn } from './link2fn';\nimport { getPollFn } from './poll';\n\nexport function links2fns(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  var fns = {} as AuthnTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, tx, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n"],"mappings":";;;;;;;;;;;;;;AAKM,SAAUA,SAASA,CAACC,GAA0B,EAAEC,EAAuB,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG;EAC1F,IAAIC,GAAG,GAAG,EAA+B;EACzC,KAAK,IAAIC,QAAQ,IAAIH,GAAG,CAACI,MAAM,EAAE;IAC/B,IAAI,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,GAAG,CAACI,MAAM,EAAED,QAAQ,CAAC,EAAE;MAC/D;IACD;IAED,IAAIM,IAAI,GAAGT,GAAG,CAACI,MAAM,CAACD,QAAQ,CAAC;IAE/B,IAAIA,QAAQ,KAAK,MAAM,EAAE;MACvBA,QAAQ,GAAGM,IAAI,CAACC,IAAI;IACrB;IAED,IAAID,IAAI,CAACE,IAAI,EAAE;MACbT,GAAG,CAACC,QAAQ,CAAC,GAAGM,IAAI;MACpB;IACD;IAED,QAAQN,QAAQ;MAGd,KAAK,MAAM;QACTD,GAAG,CAACU,IAAI,GAAGC,SAAS,CAAChB,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC;QACnC;MAEF;QACE,IAAIa,EAAE,GAAGC,OAAO,CAAClB,GAAG,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAES,IAAI,EAAER,GAAG,CAAC;QAC9C,IAAIa,EAAE,EAAE;UACNZ,GAAG,CAACC,QAAQ,CAAC,GAAGW,EAAE;QACnB;IACJ;EACF;EACD,OAAOZ,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}