{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { PasswordStatus } from '../types.js';\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\nclass PasswordTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      res,\n      accessToken\n    } = options;\n    const {\n      id,\n      status,\n      created,\n      lastUpdated,\n      _links\n    } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async payload => {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'enroll',\n          links: _links,\n          transactionClassName: 'PasswordTransaction'\n        });\n        return await fn(payload);\n      };\n    } else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'get',\n          links: _links,\n          transactionClassName: 'PasswordTransaction'\n        });\n        return await fn();\n      };\n      this.update = async payload => {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'put',\n          links: _links,\n          transactionClassName: 'PasswordTransaction'\n        });\n        return await fn(payload);\n      };\n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'delete',\n          links: _links\n        });\n        return await fn();\n      };\n    }\n  }\n}\nexport { PasswordTransaction as default };","map":{"version":3,"names":["PasswordTransaction","BaseTransaction","constructor","oktaAuth","options","res","accessToken","id","status","created","lastUpdated","_links","PasswordStatus","NOT_ENROLLED","enroll","payload","fn","generateRequestFnFromLinks","methodName","links","transactionClassName","get","update","delete"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/myaccount/transactions/PasswordTransaction.ts"],"sourcesContent":["import { EnrollPasswordPayload, UpdatePasswordPayload, PasswordStatus } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PasswordTransaction extends BaseTransaction {\n  id: string;\n  created: string;\n  lastUpdated: string;\n  status: PasswordStatus;\n\n  // eslint-disable-next-line no-use-before-define\n  get?: () => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  enroll?: (payload: EnrollPasswordPayload) => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  update?: (payload: UpdatePasswordPayload) => Promise<PasswordTransaction>;\n  delete?: () => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, status, created, lastUpdated, _links } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n\n    // assign transformed fns to transaction\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'enroll',\n          links: _links,\n          transactionClassName: 'PasswordTransaction'\n        });\n        return await fn(payload) as PasswordTransaction;\n      };\n    }\n    else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'get',\n          links: _links,\n          transactionClassName: 'PasswordTransaction'\n        });\n        return await fn() as PasswordTransaction;\n      };\n\n      this.update = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'put', \n          links: _links,\n          transactionClassName: 'PasswordTransaction'\n        });\n        return await fn(payload) as PasswordTransaction;\n      };\n  \n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'delete', \n          links: _links \n        });\n        return await fn() as BaseTransaction;\n      };\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAIqB,MAAAA,mBAAoB,SAAQC,eAAe;EAc9DC,WAAYA,CAAAC,QAAQ,EAAEC,OAAO;IAC3B,KAAK,CAACD,QAAQ,EAAEC,OAAO,CAAC;IAExB,MAAM;MAAEC,GAAG;MAAEC;IAAa,IAAGF,OAAO;IAEpC,MAAM;MAAEG,EAAE;MAAEC,MAAM;MAAEC,OAAO;MAAEC,WAAW;MAAEC;IAAQ,IAAGN,GAAG;IACxD,IAAI,CAACE,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAG9B,IAAI,IAAI,CAACF,MAAM,IAAII,cAAc,CAACC,YAAY,EAAE;MAC9C,IAAI,CAACC,MAAM,GAAG,MAAOC,OAAO,IAAI;QAC9B,MAAMC,EAAE,GAAGC,0BAA0B,CAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAER,MAAM;UACbS,oBAAoB,EAAE;QACvB,EAAC;QACF,OAAO,MAAMJ,EAAE,CAACD,OAAO,CAAwB;MACjD,CAAC;IACF,OACI;MACH,IAAI,CAACM,GAAG,GAAG,YAAW;QACpB,MAAML,EAAE,GAAGC,0BAA0B,CAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAER,MAAM;UACbS,oBAAoB,EAAE;QACvB,EAAC;QACF,OAAO,MAAMJ,EAAE,EAAyB;MAC1C,CAAC;MAED,IAAI,CAACM,MAAM,GAAG,MAAOP,OAAO,IAAI;QAC9B,MAAMC,EAAE,GAAGC,0BAA0B,CAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAER,MAAM;UACbS,oBAAoB,EAAE;QACvB,EAAC;QACF,OAAO,MAAMJ,EAAE,CAACD,OAAO,CAAwB;MACjD,CAAC;MAED,IAAI,CAACQ,MAAM,GAAG,YAAW;QACvB,MAAMP,EAAE,GAAGC,0BAA0B,CAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAER;QACR,EAAC;QACF,OAAO,MAAMK,EAAE,EAAqB;MACtC,CAAC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}