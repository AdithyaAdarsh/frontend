{"ast":null,"code":"var _jsxFileName = \"/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/src/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport './ImageUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader({\n  setFilesUploaded\n}) {\n  _s();\n  const [imageUrls, setImageUrls] = useState([]);\n  const [moderationResults, setModerationResults] = useState([]);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const [uploadProgress, setUploadProgress] = useState({});\n  const handleFileChange = event => {\n    const selectedFiles = event.target.files;\n    const urls = Array.from(selectedFiles).map(file => URL.createObjectURL(file));\n    setImageUrls(urls);\n  };\n  const handleUpload = async () => {\n    try {\n      const selectedFiles = document.getElementById('imageFileInput').files;\n      if (!selectedFiles.length) {\n        console.error('No files selected');\n        return;\n      }\n      const results = [];\n      for (const file of selectedFiles) {\n        const uuid = uuidv4();\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('uuid', uuid);\n        setUploadProgress(prevProgress => ({\n          ...prevProgress,\n          [uuid]: 0\n        })); // Initialize progress\n\n        try {\n          const response = await axios.post('http://localhost:5000/cms', formData, {\n            onUploadProgress: progressEvent => {\n              const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n              setUploadProgress(prevProgress => ({\n                ...prevProgress,\n                [uuid]: progress\n              }));\n            }\n          });\n          console.log('Server Response:', response.data);\n\n          // Process response and add to results...\n        } catch (error) {\n          console.error('Error uploading image:', error);\n          // Handle error...\n        }\n      }\n\n      setUploadProgress({}); // Reset progress\n      setModerationResults(results);\n      setUploadMessage('Files uploaded successfully');\n    } catch (error) {\n      console.error('Error:', error);\n      setUploadMessage('Upload failed. Please try again.');\n    }\n  };\n  const isUploadComplete = Object.keys(uploadProgress).length === imageUrls.length;\n  const overallProgress = isUploadComplete ? 100 : Math.round(Object.values(uploadProgress).reduce((total, progress) => total + progress, 0) / imageUrls.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Moderation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageFileInput\",\n          className: \"file-label\",\n          children: \"Choose Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          id: \"imageFileInput\",\n          accept: \"image/*\",\n          multiple: true,\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"uploadButton\",\n          onClick: handleUpload,\n          children: \"Upload Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar bg-success\",\n            role: \"progressbar\",\n            style: {\n              width: `100`\n            },\n            \"aria-valuenow\": overallProgress,\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            children: isUploadComplete ? '100%' : `${overallProgress}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-container\",\n        children: imageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: `Uploaded ${index}`,\n          className: \"uploaded-image\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), uploadMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `upload-message ${uploadMessage.includes('successfully') ? 'upload-success' : 'upload-error'}`,\n      children: uploadMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"r9lmeWz40nyWbINAuXfm06CixDo=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","v4","uuidv4","jsxDEV","_jsxDEV","ImageUploader","setFilesUploaded","_s","imageUrls","setImageUrls","moderationResults","setModerationResults","uploadMessage","setUploadMessage","uploadProgress","setUploadProgress","handleFileChange","event","selectedFiles","target","files","urls","Array","from","map","file","URL","createObjectURL","handleUpload","document","getElementById","length","console","error","results","uuid","formData","FormData","append","prevProgress","response","post","onUploadProgress","progressEvent","progress","Math","round","loaded","total","log","data","isUploadComplete","Object","keys","overallProgress","values","reduce","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","id","accept","multiple","onChange","onClick","role","style","width","imageUrl","index","src","alt","includes","_c","$RefreshReg$"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/src/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport './ImageUploader.css';\n\nfunction ImageUploader({ setFilesUploaded }) {\n  const [imageUrls, setImageUrls] = useState([]);\n  const [moderationResults, setModerationResults] = useState([]);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const [uploadProgress, setUploadProgress] = useState({});\n\n  const handleFileChange = (event) => {\n    const selectedFiles = event.target.files;\n    const urls = Array.from(selectedFiles).map((file) =>\n      URL.createObjectURL(file)\n    );\n    setImageUrls(urls);\n  };\n\n  const handleUpload = async () => {\n    try {\n      const selectedFiles = document.getElementById('imageFileInput').files;\n\n      if (!selectedFiles.length) {\n        console.error('No files selected');\n        return;\n      }\n\n      const results = [];\n\n      for (const file of selectedFiles) {\n        const uuid = uuidv4();\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('uuid', uuid);\n\n        setUploadProgress((prevProgress) => ({ ...prevProgress, [uuid]: 0 })); // Initialize progress\n\n        try {\n          const response = await axios.post('http://localhost:5000/cms', formData, {\n            onUploadProgress: (progressEvent) => {\n              const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n              setUploadProgress((prevProgress) => ({ ...prevProgress, [uuid]: progress }));\n            },\n          });\n\n          console.log('Server Response:', response.data);\n\n          // Process response and add to results...\n        } catch (error) {\n          console.error('Error uploading image:', error);\n          // Handle error...\n        }\n      }\n\n      setUploadProgress({}); // Reset progress\n      setModerationResults(results);\n      setUploadMessage('Files uploaded successfully');\n    } catch (error) {\n      console.error('Error:', error);\n      setUploadMessage('Upload failed. Please try again.');\n    }\n  };\n\n  const isUploadComplete = Object.keys(uploadProgress).length === imageUrls.length;\n  const overallProgress = isUploadComplete\n    ? 100\n    : Math.round(\n        (Object.values(uploadProgress).reduce((total, progress) => total + progress, 0) / imageUrls.length)\n      );\n\n  return (\n    <div className=\"container\">\n      <h1>Image Moderation</h1>\n      <div className=\"image-container\">\n        <form>\n          <label htmlFor=\"imageFileInput\" className=\"file-label\">\n            Choose Files\n          </label>\n          <input\n            type=\"file\"\n            name=\"file\"\n            id=\"imageFileInput\"\n            accept=\"image/*\"\n            multiple\n            onChange={handleFileChange}\n          />\n          <button type=\"button\" id=\"uploadButton\" onClick={handleUpload}>\n            Upload Images\n          </button>\n        </form>\n\n        <div className=\"progress-container\">\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar bg-success\"\n              role=\"progressbar\"\n              style={{ width: `100` }}\n              aria-valuenow={overallProgress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              {isUploadComplete ? '100%' : `${overallProgress}%`}\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"image-preview-container\">\n          {imageUrls.map((imageUrl, index) => (\n            <img\n              key={index}\n              src={imageUrl}\n              alt={`Uploaded ${index}`}\n              className=\"uploaded-image\"\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* {moderationResults.length > 0 && (\n        <div className=\"result-container\">\n          {moderationResults.map((result, index) => (\n            <div\n              key={index}\n              className={`status-container ${\n                result.status.toLowerCase() === 'rejected'\n                  ? 'status-rejected'\n                  : 'status-approved'\n              }`}\n            >\n              Image {index + 1} Moderation Status: {result.status}\n            </div>\n          ))}\n        </div>\n      )} */}\n\n      {uploadMessage && (\n        <div className={`upload-message ${uploadMessage.includes('successfully') ? 'upload-success' : 'upload-error'}`}>\n          {uploadMessage}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ImageUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}