{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport './types/api.js';\nimport './remediators/EnrollAuthenticator.js';\nimport './remediators/EnrollPoll.js';\nimport './remediators/SelectEnrollmentChannel.js';\nimport './remediators/EnrollmentChannelData.js';\nimport './remediators/ChallengeAuthenticator.js';\nimport './remediators/ChallengePoll.js';\nimport './remediators/ResetAuthenticator.js';\nimport './remediators/EnrollProfile.js';\nimport './remediators/Identify.js';\nimport './remediators/ReEnrollAuthenticator.js';\nimport './remediators/RedirectIdp.js';\nimport './remediators/SelectAuthenticatorAuthenticate.js';\nimport './remediators/SelectAuthenticatorEnroll.js';\nimport './remediators/SelectAuthenticatorUnlockAccount.js';\nimport './remediators/SelectEnrollProfile.js';\nimport './remediators/AuthenticatorVerificationData.js';\nimport './remediators/AuthenticatorEnrollmentData.js';\nimport './remediators/Skip.js';\nimport { getFlowSpecification } from './flow/FlowSpecification.js';\nfunction recoverPassword(_x) {\n  return _recoverPassword.apply(this, arguments);\n}\nfunction _recoverPassword() {\n  _recoverPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient) {\n    var options,\n      flowSpec,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n          return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), flowSpec)));\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _recoverPassword.apply(this, arguments);\n}\nexport { recoverPassword };","map":{"version":3,"names":["recoverPassword","_x","_recoverPassword","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authClient","options","flowSpec","_args","wrap","_callee$","_context","prev","next","length","undefined","getFlowSpecification","abrupt","run","Object","assign","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/recoverPassword.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from './types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAqBsBA,eAAeA,CAAAC,EAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA9B,SAAAC,QACLC,UAAgC;IAAA,IAAAC,OAAA;MAAAC,QAAA;MAAAC,KAAA,GAAAR,SAAA;IAAA,OAAAE,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAEP,OAAA,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAmC,EAAE;UAEjED,QAAQ,GAAGS,oBAAoB,CAACX,UAAU,EAAE,iBAAiB,CAAC;UAAA,OAAAM,QAAA,CAAAM,MAAA,WAC7DC,GAAG,CACRb,UAAU,EAAAc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAELd,OAAO,CACP,EAAAC,QAAQ,EAEd;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAU,IAAA;MAAA;IAAA,GAAAjB,OAAA;EAAA,CACH;EAAA,OAAAN,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}