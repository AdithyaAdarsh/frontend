{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Remediator.js';\nimport { getAuthenticator } from '../../authenticator/getAuthenticator.js';\nclass VerifyAuthenticator extends Remediator {\n  constructor(remediation, values = {}) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n  getNextStep(authClient, context) {\n    var _a;\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = (_a = context === null || context === void 0 ? void 0 : context.authenticatorEnrollments) === null || _a === void 0 ? void 0 : _a.value;\n    return Object.assign(Object.assign({}, nextStep), {\n      authenticatorEnrollments\n    });\n  }\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n  getValuesAfterProceed() {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => Object.assign(Object.assign({}, values), {\n      [valueKey]: this.values[valueKey]\n    }), {});\n  }\n}\nexport { VerifyAuthenticator };","map":{"version":3,"names":["VerifyAuthenticator","Remediator","constructor","remediation","values","authenticator","getAuthenticator","getNextStep","authClient","context","nextStep","authenticatorEnrollments","_a","value","Object","assign","canRemediate","canVerify","mapCredentials","getInputCredentials","input","getInputs","getValuesAfterProceed","trimmedValues","keys","filter","valueKey","reduce"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/Base/VerifyAuthenticator.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAqBM,MAAOA,mBACX,SAAQC,UAAa;EAIrBC,WAAYA,CAAAC,WAA2B,EAAEC,MAAA,GAAY,EAAO;IAC1D,KAAK,CAACD,WAAW,EAAEC,MAAM,CAAC;IAC1B,IAAI,CAACC,aAAa,GAAGC,gBAAgB,CAACH,WAAW,CAAC;EACnD;EAEDI,WAAWA,CAACC,UAAgC,EAAEC,OAAoB;;IAChE,MAAMC,QAAQ,GAAG,KAAK,CAACH,WAAW,CAACC,UAAU,EAAEC,OAAO,CAAC;IACvD,MAAME,wBAAwB,GAAG,CAAAC,EAAA,GAAAH,OAAO,KAAP,QAAAA,OAAO,KAAP,kBAAAA,OAAO,CAAEE,wBAAwB,MAAE,QAAAC,EAAA,uBAAAA,EAAA,CAAAC,KAAK;IAEzE,OACKC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAL,QAAQ,CACX;MAAAC;IAAwB,CACxB;EACH;EAEDK,YAAYA,CAAA;IACV,OAAO,IAAI,CAACX,aAAa,CAACY,SAAS,CAAC,IAAI,CAACb,MAAM,CAAC;EACjD;EAEDc,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACb,aAAa,CAACa,cAAc,CAAC,IAAI,CAACd,MAAM,CAAC;EACtD;EAEDe,mBAAmBA,CAACC,KAAK;IACvB,OAAO,IAAI,CAACf,aAAa,CAACgB,SAAS,CAACD,KAAK,CAAC;EAC3C;EAEDE,qBAAqBA,CAAA;IACnB,IAAI,CAAClB,MAAM,GAAG,KAAK,CAACkB,qBAAqB,EAAE;IAC3C,IAAIC,aAAa,GAAGT,MAAM,CAACU,IAAI,CAAC,IAAI,CAACpB,MAAM,CAAC,CAACqB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAK,aAAa,CAAC;IAC3F,OAAOH,aAAa,CAACI,MAAM,CAAC,CAACvB,MAAM,EAAEsB,QAAQ,KAAKZ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAKX,MAAM;MAAE,CAACsB,QAAQ,GAAG,IAAI,CAACtB,MAAM,CAACsB,QAAQ;IAAG,IAAE,EAAO,CAAC;EAC7G;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}