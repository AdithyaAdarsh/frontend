{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeNils } from '../util/object.js';\nimport * as features from '../features.js';\nimport * as constants from '../constants.js';\nimport Emitter from 'tiny-emitter';\nfunction createOktaAuthBase(OptionsConstructor) {\n  class OktaAuthBase {\n    constructor(...args) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options);\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n  OktaAuthBase.features = features;\n  OktaAuthBase.constants = constants;\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n  return OktaAuthBase;\n}\nexport { createOktaAuthBase };","map":{"version":3,"names":["createOktaAuthBase","OptionsConstructor","OktaAuthBase","constructor","args","options","length","removeNils","emitter","Emitter","features","constants","prototype","Object","assign"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/base/factory.ts"],"sourcesContent":["\n\n// Do not use this type in code, so it won't be emitted in the declaration output\nimport { removeNils } from '../util';\n\nimport * as features from '../features';\nimport * as constants from '../constants';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nimport {\n  EventEmitter,\n  OktaAuthConstructor,\n  OktaAuthBaseInterface,\n  OktaAuthBaseOptions,\n  OktaAuthOptionsConstructor, \n  FeaturesAPI,\n} from './types';\n\nexport function createOktaAuthBase\n<\n  O extends OktaAuthBaseOptions = OktaAuthBaseOptions,\n>\n(\n  OptionsConstructor: OktaAuthOptionsConstructor<O>\n): OktaAuthConstructor<OktaAuthBaseInterface<O>>\n{\n  class OktaAuthBase implements OktaAuthBaseInterface<O>\n  {\n    options: O;\n    emitter: EventEmitter;\n    features: FeaturesAPI;\n    static features: FeaturesAPI = features;\n    static constants = constants;\n    \n    constructor(...args: any[]) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options) as O; // clear out undefined values\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n\n  // Hoist feature detection functions to prototype & static type\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n\n  // Also hoist constants for CommonJS users\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n\n  return OktaAuthBase;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAsBM,SAAUA,kBAAkBA,CAKhCC,kBAAiD;EAGjD,MAAMC,YAAY;IAQhBC,YAAY,GAAGC,IAAW;MACxB,MAAMC,OAAO,GAAG,IAAIJ,kBAAkB,CAACG,IAAI,CAACE,MAAM,GAAGF,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;MACxE,IAAI,CAACC,OAAO,GAAGE,UAAU,CAACF,OAAO,CAAM;MACvC,IAAI,CAACG,OAAO,GAAG,IAAIC,OAAO,EAAE;MAC5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACzB;;EARMR,YAAQ,CAAAQ,QAAA,GAAgBA,QAAQ;EAChCR,YAAS,CAAAS,SAAA,GAAGA,SAAS;EAW9BT,YAAY,CAACQ,QAAQ,GAAGR,YAAY,CAACU,SAAS,CAACF,QAAQ,GAAGA,QAAQ;EAGlEG,MAAM,CAACC,MAAM,CAACZ,YAAY,EAAE;IAC1BS;EACD,EAAC;EAEF,OAAOT,YAAY;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}