{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createSessionApi } from './factory.js';\nfunction mixinSession(Base) {\n  return class OktaAuthSession extends Base {\n    constructor(...args) {\n      super(...args);\n      this.session = createSessionApi(this);\n    }\n    closeSession() {\n      return this.session.close().then(async () => {\n        this.clearStorage();\n        return true;\n      }).catch(function (e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\nexport { mixinSession };","map":{"version":3,"names":["mixinSession","Base","OktaAuthSession","constructor","args","session","createSessionApi","closeSession","close","then","clearStorage","catch","e","name","errorCode"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/session/mixin.ts"],"sourcesContent":["import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport { createSessionApi } from './factory';\nimport {\n  OktaAuthSessionInterface, SessionAPI,\n} from './types';\nimport { StorageManagerInterface } from '../storage/types';\n\nexport function mixinSession\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n{\n  return class OktaAuthSession extends Base implements OktaAuthSessionInterface<S, O>\n  {\n    session: SessionAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.session = createSessionApi(this);\n    }\n\n    // Ends the current Okta SSO session without redirecting to Okta.\n    closeSession(): Promise<boolean> {\n      return this.session.close() // DELETE /api/v1/sessions/me\n      .then(async () => {\n        // Clear all local tokens\n        this.clearStorage();\n        return true;\n      })\n      .catch(function(e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          // Session does not exist or has already been closed\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;AAQM,SAAUA,YAAYA,CAO3BC,IAAW;EAEV,OAAO,MAAMC,eAAgB,SAAQD,IAAI;IAIvCE,YAAY,GAAGC,IAAW;MACxB,KAAK,CAAC,GAAGA,IAAI,CAAC;MAEd,IAAI,CAACC,OAAO,GAAGC,gBAAgB,CAAC,IAAI,CAAC;IACtC;IAGDC,YAAYA,CAAA;MACV,OAAO,IAAI,CAACF,OAAO,CAACG,KAAK,CAAE,EAC1BC,IAAI,CAAC,YAAW;QAEf,IAAI,CAACC,YAAY,EAAE;QACnB,OAAO,IAAI;MACb,CAAC,CAAC,CACDC,KAAK,CAAC,UAASC,CAAC;QACf,IAAIA,CAAC,CAACC,IAAI,KAAK,cAAc,IAAID,CAAC,CAACE,SAAS,KAAK,UAAU,EAAE;UAE3D,OAAO,KAAK;QACb;QACD,MAAMF,CAAC;MACT,CAAC,CAAC;IACH;GACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}