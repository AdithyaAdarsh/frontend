{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction getAllValues(idxRemediation) {\n  var _a;\n  return (_a = idxRemediation.value) === null || _a === void 0 ? void 0 : _a.map(r => r.name);\n}\nfunction getRequiredValues(idxRemediation) {\n  var _a;\n  return (_a = idxRemediation.value) === null || _a === void 0 ? void 0 : _a.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name);\n    }\n    return required;\n  }, []);\n}\nfunction titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\nfunction getAuthenticatorFromRemediation(remediation) {\n  return remediation.value.find(({\n    name\n  }) => name === 'authenticator');\n}\nexport { getAllValues, getAuthenticatorFromRemediation, getRequiredValues, titleCase };","map":{"version":3,"names":["getAllValues","idxRemediation","_a","value","map","r","name","getRequiredValues","reduce","required","cur","push","titleCase","str","charAt","toUpperCase","substring","getAuthenticatorFromRemediation","remediation","find"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/util.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n"],"mappings":";;;;;;;;;;;;AAcM,SAAUA,YAAYA,CAACC,cAA8B;;EACzD,OAAO,CAAAC,EAAA,GAAAD,cAAc,CAACE,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;AAC/C;AAEM,SAAUC,iBAAiBA,CAACN,cAA8B;;EAC9D,OAAO,CAAAC,EAAA,GAAAD,cAAc,CAACE,KAAK,MAAE,QAAAD,EAAA,uBAAAA,EAAA,CAAAM,MAAM,CAAC,CAACC,QAAQ,EAAEC,GAAG,KAAI;IACpD,IAAIA,GAAG,CAACD,QAAQ,EAAE;MAChBA,QAAQ,CAACE,IAAI,CAACD,GAAG,CAACJ,IAAa,CAAC;IACjC;IACD,OAAOG,QAAQ;EAChB,GAAE,EAAE,CAAC;AACR;AAEM,SAAUG,SAASA,CAACC,GAAW;EACnC,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,GAAG,CAACG,SAAS,CAAC,CAAC,CAAC;AACvD;AAEM,SAAUC,+BAA+BA,CAC7CC,WAA2B;EAG3B,OAAOA,WAAW,CAACf,KAAM,CAACgB,IAAI,CAAC,CAAC;IAAEb;EAAI,CAAE,KAAKA,IAAI,KAAK,eAAe,CAAwB;AAC/F"},"metadata":{},"sourceType":"module","externalDependencies":[]}