{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed.js';\nimport { getSavedTransactionMeta } from './transactionMeta.js';\nimport { warn } from '../util/console.js';\nfunction poll(_x) {\n  return _poll.apply(this, arguments);\n}\nfunction _poll() {\n  _poll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(authClient) {\n    var options,\n      _a,\n      transaction,\n      meta,\n      availablePollingRemeditaions,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n          _context2.next = 3;\n          return proceed(authClient, {\n            startPolling: true\n          });\n        case 3:\n          transaction = _context2.sent;\n          meta = getSavedTransactionMeta(authClient);\n          availablePollingRemeditaions = (_a = meta === null || meta === void 0 ? void 0 : meta.remediations) === null || _a === void 0 ? void 0 : _a.find(function (remediation) {\n            return remediation.includes('poll');\n          });\n          if (!(availablePollingRemeditaions === null || availablePollingRemeditaions === void 0 ? void 0 : availablePollingRemeditaions.length)) {\n            warn('No polling remediations available at the current IDX flow stage');\n          }\n          if (!Number.isInteger(options.refresh)) {\n            _context2.next = 9;\n            break;\n          }\n          return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n            setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              var _a, _b, refresh;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    try {\n                      refresh = (_b = (_a = transaction.nextStep) === null || _a === void 0 ? void 0 : _a.poll) === null || _b === void 0 ? void 0 : _b.refresh;\n                      if (refresh) {\n                        resolve(poll(authClient, {\n                          refresh: refresh\n                        }));\n                      } else {\n                        resolve(transaction);\n                      }\n                    } catch (err) {\n                      reject(err);\n                    }\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            })), options.refresh);\n          }));\n        case 9:\n          return _context2.abrupt(\"return\", transaction);\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _poll.apply(this, arguments);\n}\nexport { poll };","map":{"version":3,"names":["poll","_x","_poll","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","authClient","options","_a","transaction","meta","availablePollingRemeditaions","_args2","wrap","_callee2$","_context2","prev","next","length","undefined","proceed","startPolling","sent","getSavedTransactionMeta","remediations","find","remediation","includes","warn","Number","isInteger","refresh","abrupt","Promise","resolve","reject","setTimeout","_callee","_b","_callee$","_context","nextStep","err","stop"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/poll.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from './types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;SAsBsBA,IAAIA,CAAAC,EAAA;EAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,MAAA;EAAAA,KAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAnB,SAAAC,SAAoBC,UAAgC;IAAA,IAAAC,OAAA;MAAAC,EAAA;MAAAC,WAAA;MAAAC,IAAA;MAAAC,4BAAA;MAAAC,MAAA,GAAAX,SAAA;IAAA,OAAAE,mBAAA,GAAAU,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAEV,OAAA,GAAAK,MAAA,CAAAM,MAAA,QAAAN,MAAA,QAAAO,SAAA,GAAAP,MAAA,MAA0B,EAAE;UAAAG,SAAA,CAAAE,IAAA;UAAA,OAC/DG,OAAO,CAACd,UAAU,EAAE;YAC1Ce,YAAY,EAAE;UACf,EAAC;QAAA;UAFEZ,WAAW,GAAAM,SAAA,CAAAO,IAAA;UAITZ,IAAI,GAAGa,uBAAuB,CAACjB,UAAU,CAAC;UAC5CK,4BAA4B,GAAG,CAAAH,EAAA,GAAAE,IAAI,aAAJA,IAAI,KAAJ,kBAAAA,IAAI,CAAEc,YAAY,MAAE,QAAAhB,EAAA,uBAAAA,EAAA,CAAAiB,IAAI,CAAC,UAAAC,WAAW;YAAA,OAAIA,WAAW,CAACC,QAAQ,CAAC,MAAM,CAAC;UAAA,EAAC;UACxG,IAAI,EAAChB,4BAA4B,KAA5B,QAAAA,4BAA4B,uBAA5BA,4BAA4B,CAAEO,MAAM,GAAE;YACzCU,IAAI,CAAC,iEAAiE,CAAC;UACxE;UAAA,KAEGC,MAAM,CAACC,SAAS,CAACvB,OAAO,CAACwB,OAAO,CAAC;YAAAhB,SAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,SAAA,CAAAiB,MAAA,WAC5B,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM;YAC1CC,UAAU,eAAAlC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAiC,QAAA;cAAA,IAAA7B,EAAA,EAAA8B,EAAA,EAAAP,OAAA;cAAA,OAAA5B,mBAAA,GAAAU,IAAA,UAAA0B,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAxB,IAAA,GAAAwB,QAAA,CAAAvB,IAAA;kBAAA;oBACT,IAAI;sBACIc,OAAO,GAAG,CAAAO,EAAA,IAAA9B,EAAA,GAAAC,WAAW,CAACgC,QAAQ,MAAE,QAAAjC,EAAA,uBAAAA,EAAA,CAAAX,IAAI,MAAE,QAAAyC,EAAA,uBAAAA,EAAA,CAAAP,OAAO;sBACnD,IAAIA,OAAO,EAAE;wBACXG,OAAO,CAACrC,IAAI,CAACS,UAAU,EAAE;0BACvByB,OAAO,EAAPA;wBACD,EAAC,CAAC;sBACJ,OAAM;wBACLG,OAAO,CAACzB,WAAW,CAAC;sBACrB;oBACF,EAAC,OAAOiC,GAAG,EAAE;sBACZP,MAAM,CAACO,GAAG,CAAC;oBACZ;kBAAA;kBAAA;oBAAA,OAAAF,QAAA,CAAAG,IAAA;gBAAA;cAAA,GAAAN,OAAA;YAAA,CACF,IAAE9B,OAAO,CAACwB,OAAO,CAAC;UACrB,CAAC,CAAC;QAAA;UAAA,OAAAhB,SAAA,CAAAiB,MAAA,WAGGvB,WAAW;QAAA;QAAA;UAAA,OAAAM,SAAA,CAAA4B,IAAA;MAAA;IAAA,GAAAtC,QAAA;EAAA,CACpB;EAAA,OAAAN,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}