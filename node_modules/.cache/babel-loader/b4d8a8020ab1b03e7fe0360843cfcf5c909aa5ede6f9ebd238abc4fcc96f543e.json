{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Remediator.js';\nimport { getAuthenticatorFromRemediation } from '../util.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { findMatchedOption, compareAuthenticators } from '../../authenticator/util.js';\nvar SelectAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectAuthenticator, _Remediator);\n  var _super = _createSuper(SelectAuthenticator);\n  function SelectAuthenticator() {\n    _classCallCheck(this, SelectAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SelectAuthenticator, [{\n    key: \"findMatchedOption\",\n    value: function findMatchedOption(authenticators, options) {\n      var option;\n      var _iterator = _createForOfIteratorHelper(authenticators),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var authenticator = _step.value;\n          option = options.find(function (_ref) {\n            var relatesTo = _ref.relatesTo;\n            return relatesTo.key && relatesTo.key === authenticator.key;\n          });\n          if (option) {\n            return \"break\";\n          }\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ret = _loop();\n          if (_ret === \"break\") break;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return option;\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate(context) {\n      var _a, _b;\n      var _this$values = this.values,\n        authenticators = _this$values.authenticators,\n        authenticator = _this$values.authenticator;\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options;\n      if (!authenticators || !authenticators.length) {\n        return false;\n      }\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        return true;\n      }\n      var matchedOption = this.findMatchedOption(authenticators, options);\n      if (matchedOption) {\n        var isCurrentAuthenticator = (context === null || context === void 0 ? void 0 : context.currentAuthenticator) && (context === null || context === void 0 ? void 0 : context.currentAuthenticator.value.id) === ((_a = matchedOption.relatesTo) === null || _a === void 0 ? void 0 : _a.id);\n        var isCurrentAuthenticatorEnrollment = (context === null || context === void 0 ? void 0 : context.currentAuthenticatorEnrollment) && (context === null || context === void 0 ? void 0 : context.currentAuthenticatorEnrollment.value.id) === ((_b = matchedOption.relatesTo) === null || _b === void 0 ? void 0 : _b.id);\n        return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n      }\n      return false;\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var _this$values2 = this.values,\n        authenticators = _this$values2.authenticators,\n        authenticator = _this$values2.authenticator;\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        this.selectedAuthenticator = authenticator;\n        return authenticator;\n      }\n      var options = remediationValue.options;\n      var selectedOption = findMatchedOption(authenticators, options);\n      this.selectedAuthenticator = selectedOption.relatesTo;\n      this.selectedOption = selectedOption;\n      return {\n        id: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value.form.value.find(function (_ref2) {\n          var name = _ref2.name;\n          return name === 'id';\n        }).value\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator(remediation) {\n      var options = remediation.options.map(function (_ref3) {\n        var label = _ref3.label,\n          relatesTo = _ref3.relatesTo;\n        return {\n          label: label,\n          value: relatesTo.key\n        };\n      });\n      return {\n        name: 'authenticator',\n        type: 'string',\n        options: options\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _this = this;\n      this.values = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getValuesAfterProceed\", this).call(this);\n      var authenticators = this.values.authenticators.filter(function (authenticator) {\n        return compareAuthenticators(authenticator, _this.selectedAuthenticator) !== true;\n      });\n      return Object.assign(Object.assign({}, this.values), {\n        authenticators: authenticators\n      });\n    }\n  }]);\n  return SelectAuthenticator;\n}(Remediator);\nexport { SelectAuthenticator };","map":{"version":3,"names":["SelectAuthenticator","_Remediator","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","findMatchedOption","authenticators","options","option","_iterator","_createForOfIteratorHelper","_step","_loop","authenticator","find","_ref","relatesTo","s","n","done","_ret","err","e","f","canRemediate","context","_this$values","values","authenticatorFromRemediation","getAuthenticatorFromRemediation","remediation","length","isAuthenticator","id","matchedOption","isCurrentAuthenticator","currentAuthenticator","_a","isCurrentAuthenticatorEnrollment","currentAuthenticatorEnrollment","_b","mapAuthenticator","remediationValue","_this$values2","selectedAuthenticator","selectedOption","form","_ref2","name","getInputAuthenticator","map","_ref3","label","type","getValuesAfterProceed","_this","_get","_getPrototypeOf","prototype","call","filter","compareAuthenticators","Object","assign","Remediator"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/remediators/Base/SelectAuthenticator.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue, IdxContext, IdxOption } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option: IdxOption | undefined;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  /* eslint complexity:[0,9] */\n  canRemediate(context?: IdxContext) {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options!);\n    if (matchedOption) {\n      // Don't select current authenticator (OKTA-612939)\n      const isCurrentAuthenticator = context?.currentAuthenticator\n        && context?.currentAuthenticator.value.id === matchedOption.relatesTo?.id;\n      const isCurrentAuthenticatorEnrollment = context?.currentAuthenticatorEnrollment\n        && context?.currentAuthenticatorEnrollment.value.id === matchedOption.relatesTo?.id;\n      return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAyBaA,mBACX,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAAA,SAAAA,oBAAA;IAAAK,eAAA,OAAAL,mBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,mBAAA;IAAAS,GAAA;IAAAC,KAAA,EAKA,SAAAC,kBAAkBC,cAAc,EAAEC,OAAO;MACvC,IAAIC,MAA6B;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CACRJ,cAAc;QAAAK,KAAA;MAAA;QAAA,IAAAC,KAAA,YAAAA,MAAA,EAAE;UAAA,IAAjCC,aAAa,GAAAF,KAAA,CAAAP,KAAA;UACpBI,MAAM,GAAGD,OAAO,CACbO,IAAI,CAAC,UAAAC,IAAA;YAAA,IAAGC,SAAS,GAAAD,IAAA,CAATC,SAAS;YAAA,OAAOA,SAAS,CAACb,GAAG,IAAIa,SAAS,CAACb,GAAG,KAAKU,aAAa,CAACV,GAAG;UAAA,EAAC;UAChF,IAAIK,MAAM,EAAE;YAAA;UAEX;QACF;QAND,KAAAC,SAAA,CAAAQ,CAAA,MAAAN,KAAA,GAAAF,SAAA,CAAAS,CAAA,IAAAC,IAAA;UAAA,IAAAC,IAAA,GAAAR,KAAA;UAAA,IAAAQ,IAAA,cAII;QAAM;MAET,SAAAC,GAAA;QAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA;MAAA;QAAAZ,SAAA,CAAAc,CAAA;MAAA;MACD,OAAOf,MAAM;IACd;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAGD,SAAAoB,aAAaC,OAAoB;;MAC/B,IAAAC,YAAA,GAA0C,IAAI,CAACC,MAAM;QAA7CrB,cAAc,GAAAoB,YAAA,CAAdpB,cAAc;QAAEO,aAAa,GAAAa,YAAA,CAAbb,aAAa;MACrC,IAAMe,4BAA4B,GAAGC,+BAA+B,CAAC,IAAI,CAACC,WAAW,CAAC;MACtF,IAAQvB,OAAO,GAAKqB,4BAA4B,CAAxCrB,OAAO;MAEf,IAAI,CAACD,cAAc,IAAI,CAACA,cAAc,CAACyB,MAAM,EAAE;QAC7C,OAAO,KAAK;MACb;MAGD,IAAIC,eAAe,CAACnB,aAAa,CAAC,IAAIA,aAAa,CAACoB,EAAE,EAAE;QACtD,OAAO,IAAI;MACZ;MAGD,IAAMC,aAAa,GAAG,IAAI,CAAC7B,iBAAiB,CAACC,cAAc,EAAEC,OAAQ,CAAC;MACtE,IAAI2B,aAAa,EAAE;QAEjB,IAAMC,sBAAsB,GAAG,CAAAV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,oBAAoB,KACvD,CAAAX,OAAO,KAAP,QAAAA,OAAO,uBAAPA,OAAO,CAAEW,oBAAoB,CAAChC,KAAK,CAAC6B,EAAE,OAAK,CAAAI,EAAA,GAAAH,aAAa,CAAClB,SAAS,MAAE,QAAAqB,EAAA,uBAAAA,EAAA,CAAAJ,EAAE;QAC3E,IAAMK,gCAAgC,GAAG,CAAAb,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,8BAA8B,KAC3E,CAAAd,OAAO,KAAP,QAAAA,OAAO,uBAAPA,OAAO,CAAEc,8BAA8B,CAACnC,KAAK,CAAC6B,EAAE,OAAK,CAAAO,EAAA,GAAAN,aAAa,CAAClB,SAAS,MAAE,QAAAwB,EAAA,uBAAAA,EAAA,CAAAP,EAAE;QACrF,OAAO,CAACE,sBAAsB,IAAI,CAACG,gCAAgC;MACpE;MAED,OAAO,KAAK;IACb;EAAA;IAAAnC,GAAA;IAAAC,KAAA,EAED,SAAAqC,iBAAiBC,gBAAqC;MACpD,IAAAC,aAAA,GAA0C,IAAI,CAAChB,MAAM;QAA7CrB,cAAc,GAAAqC,aAAA,CAAdrC,cAAc;QAAEO,aAAa,GAAA8B,aAAA,CAAb9B,aAAa;MAGrC,IAAImB,eAAe,CAACnB,aAAa,CAAC,IAAIA,aAAa,CAACoB,EAAE,EAAE;QACtD,IAAI,CAACW,qBAAqB,GAAG/B,aAAa;QAC1C,OAAOA,aAAa;MACrB;MAED,IAAQN,OAAO,GAAKmC,gBAAgB,CAA5BnC,OAAO;MACf,IAAMsC,cAAc,GAAGxC,iBAAiB,CAACC,cAAc,EAAEC,OAAO,CAAC;MACjE,IAAI,CAACqC,qBAAqB,GAAGC,cAAc,CAAC7B,SAAS;MACrD,IAAI,CAAC6B,cAAc,GAAGA,cAAc;MACpC,OAAO;QACLZ,EAAE,EAAEY,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEzC,KAAK,CAAC0C,IAAI,CAAC1C,KAAK,CAACU,IAAI,CAAC,UAAAiC,KAAA;UAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;UAAA,OAAOA,IAAI,KAAK,IAAI;QAAA,GAAE5C;OACxE;IACF;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAA6C,sBAAsBnB,WAAW;MAC/B,IAAMvB,OAAO,GAAGuB,WAAW,CAACvB,OAAO,CAAC2C,GAAG,CAAC,UAAAC,KAAA,EAAyB;QAAA,IAAtBC,KAAK,GAAAD,KAAA,CAALC,KAAK;UAAEpC,SAAS,GAAAmC,KAAA,CAATnC,SAAS;QACzD,OAAO;UACLoC,KAAK,EAALA,KAAK;UACLhD,KAAK,EAAEY,SAAS,CAACb;SAClB;MACH,CAAC,CAAC;MACF,OAAO;QAAE6C,IAAI,EAAE,eAAe;QAAEK,IAAI,EAAE,QAAQ;QAAE9C,OAAO,EAAPA;MAAO,CAAE;IAC1D;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAkD,sBAAA,EAAqB;MAAA,IAAAC,KAAA;MACnB,IAAI,CAAC5B,MAAM,GAAA6B,IAAA,CAAAC,eAAA,CAAA/D,mBAAA,CAAAgE,SAAA,kCAAAC,IAAA,MAAgC;MAE3C,IAAMrD,cAAc,GAAI,IAAI,CAACqB,MAAM,CAACrB,cAAkC,CACnEsD,MAAM,CAAC,UAAA/C,aAAa,EAAG;QACtB,OAAOgD,qBAAqB,CAAChD,aAAa,EAAE0C,KAAI,CAACX,qBAAqB,CAAC,KAAK,IAAI;MAClF,CAAC,CAAC;MACJ,OAAAkB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAY,IAAI,CAACpC,MAAM;QAAErB,cAAc,EAAdA;MAAc,CAAG;IAC3C;EAAA;EAAA,OAAAZ,mBAAA;AAAA,EAlFOsE,UAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}