{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaVerifyTotp } from './OktaVerifyTotp.js';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator.js';\nimport { OktaPassword } from './OktaPassword.js';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment.js';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification.js';\nimport { WebauthnEnrollment } from './WebauthnEnrollment.js';\nimport { WebauthnVerification } from './WebauthnVerification.js';\nimport { AuthenticatorKey } from '../types/api.js';\nfunction getAuthenticator(remediation) {\n  var _a, _b;\n  const relatesTo = remediation.relatesTo;\n  const value = (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.value) || {};\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if ((_a = value.contextualData) === null || _a === void 0 ? void 0 : _a.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if ((_b = value.contextualData) === null || _b === void 0 ? void 0 : _b.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\nexport { getAuthenticator };","map":{"version":3,"names":["getAuthenticator","remediation","relatesTo","value","key","AuthenticatorKey","OKTA_PASSWORD","OktaPassword","SECURITY_QUESTION","_a","contextualData","enrolledQuestion","SecurityQuestionVerification","SecurityQuestionEnrollment","OKTA_VERIFY","OktaVerifyTotp","WEBAUTHN","_b","challengeData","WebauthnVerification","WebauthnEnrollment","VerificationCodeAuthenticator"],"sources":["/Users/aadar00/Library/CloudStorage/OneDrive-BlackhawkNetwork,Inc/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/authenticator/getAuthenticator.ts"],"sourcesContent":["import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAYM,SAAUA,gBAAgBA,CAACC,WAA2B;;EAC1D,MAAMC,SAAS,GAAGD,WAAW,CAACC,SAAS;EACvC,MAAMC,KAAK,GAAG,CAAAD,SAAS,KAAT,QAAAA,SAAS,KAAT,kBAAAA,SAAS,CAAEC,KAAK,KAAI,EAAsB;EACxD,QAAQA,KAAK,CAACC,GAAG;IACf,KAAKC,gBAAgB,CAACC,aAAa;MACjC,OAAO,IAAIC,YAAY,CAACJ,KAAK,CAAC;IAChC,KAAKE,gBAAgB,CAACG,iBAAiB;MACrC,IAAI,CAAAC,EAAA,GAAAN,KAAK,CAACO,cAAc,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,gBAAgB,EAAE;QAC1C,OAAO,IAAIC,4BAA4B,CAACT,KAAK,CAAC;MAC/C,OAAM;QACL,OAAO,IAAIU,0BAA0B,CAACV,KAAK,CAAC;MAC7C;IACH,KAAKE,gBAAgB,CAACS,WAAW;MAC/B,OAAO,IAAIC,cAAc,CAACZ,KAAK,CAAC;IAClC,KAAKE,gBAAgB,CAACW,QAAQ;MAC5B,IAAI,CAAAC,EAAA,GAAAd,KAAK,CAACO,cAAc,cAAAO,EAAA,uBAAAA,EAAA,CAAEC,aAAa,EAAE;QACvC,OAAO,IAAIC,oBAAoB,CAAChB,KAAK,CAAC;MACvC,OAAM;QACL,OAAO,IAAIiB,kBAAkB,CAACjB,KAAK,CAAC;MACrC;IACH;MACE,OAAO,IAAIkB,6BAA6B,CAAClB,KAAK,CAAC;EAClD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}