{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util/object.js';\nimport fingerprint from '../browser/fingerprint.js';\nimport { createAuthnTransactionAPI } from './factory.js';\nfunction mixinAuthn(Base) {\n  return /*#__PURE__*/function (_Base) {\n    _inherits(OktaAuthTx, _Base);\n    var _super = _createSuper(OktaAuthTx);\n    function OktaAuthTx() {\n      var _this;\n      _classCallCheck(this, OktaAuthTx);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.authn = _this.tx = createAuthnTransactionAPI(_assertThisInitialized(_this));\n      _this.fingerprint = fingerprint.bind(null, _assertThisInitialized(_this));\n      return _this;\n    }\n    _createClass(OktaAuthTx, [{\n      key: \"signIn\",\n      value: function () {\n        var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(opts) {\n          var _this2 = this;\n          var _postToTransaction;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                opts = clone(opts || {});\n                _postToTransaction = function _postToTransaction(options) {\n                  delete opts.sendFingerprint;\n                  return _this2.tx.postToTransaction('/api/v1/authn', opts, options);\n                };\n                if (opts.sendFingerprint) {\n                  _context.next = 4;\n                  break;\n                }\n                return _context.abrupt(\"return\", _postToTransaction());\n              case 4:\n                return _context.abrupt(\"return\", this.fingerprint().then(function (fingerprint) {\n                  return _postToTransaction({\n                    headers: {\n                      'X-Device-Fingerprint': fingerprint\n                    }\n                  });\n                }));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function signIn(_x) {\n          return _signIn.apply(this, arguments);\n        }\n        return signIn;\n      }()\n    }, {\n      key: \"signInWithCredentials\",\n      value: function () {\n        var _signInWithCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(opts) {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.signIn(opts));\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function signInWithCredentials(_x2) {\n          return _signInWithCredentials.apply(this, arguments);\n        }\n        return signInWithCredentials;\n      }()\n    }, {\n      key: \"forgotPassword\",\n      value: function forgotPassword(opts) {\n        return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n      }\n    }, {\n      key: \"unlockAccount\",\n      value: function unlockAccount(opts) {\n        return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n      }\n    }, {\n      key: \"verifyRecoveryToken\",\n      value: function verifyRecoveryToken(opts) {\n        return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n      }\n    }]);\n    return OktaAuthTx;\n  }(Base);\n}\nexport { mixinAuthn };","map":{"version":3,"names":["mixinAuthn","Base","_Base","_inherits","OktaAuthTx","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","authn","tx","createAuthnTransactionAPI","_assertThisInitialized","fingerprint","bind","_createClass","key","value","_signIn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opts","_this2","_postToTransaction","wrap","_callee$","_context","prev","next","clone","options","sendFingerprint","postToTransaction","abrupt","then","headers","stop","signIn","_x","_signInWithCredentials","_callee2","_callee2$","_context2","signInWithCredentials","_x2","forgotPassword","unlockAccount","verifyRecoveryToken"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/authn/mixin.ts"],"sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { \n  clone,\n} from '../util';\nimport fingerprint from '../browser/fingerprint';\nimport {\n  FingerprintAPI,\n  SigninWithCredentialsOptions,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  SigninOptions,\n  OktaAuthTxInterface,\n  AuthnTransaction,\n  AuthnTransactionAPI\n} from './types';\nimport {\n  createAuthnTransactionAPI,\n} from './factory';\nimport { StorageManagerInterface } from '../storage/types';\nimport { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\n\nexport function mixinAuthn\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthTxInterface<S, O>>\n{\n  return class OktaAuthTx extends Base implements OktaAuthTxInterface<S, O> {\n    tx: AuthnTransactionAPI; // legacy, may be removed in future version\n    authn: AuthnTransactionAPI;\n    fingerprint: FingerprintAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.authn = this.tx = createAuthnTransactionAPI(this);\n      \n      // Fingerprint API\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n\n    // Authn  V1\n    async signIn(opts: SigninOptions): Promise<AuthnTransaction> {\n      opts = clone(opts || {});\n      const _postToTransaction = (options?) => {\n        delete opts.sendFingerprint;\n        return this.tx.postToTransaction('/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return this.fingerprint()\n      .then(function(fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    }\n\n    // Authn  V1\n    async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthnTransaction> {\n      return this.signIn(opts);\n    }\n\n    // { username, (relayState) }\n    forgotPassword(opts): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n    }\n\n    // { username, (relayState) }\n    unlockAccount(opts: ForgotPasswordOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n    }\n\n    // { recoveryToken }\n    verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n    }\n\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}