{"ast":null,"code":"import _createClass from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options.js';\nfunction createIdxOptionsConstructor() {\n  var CoreOptionsConstructor = createCoreOptionsConstructor();\n  return /*#__PURE__*/function (_CoreOptionsConstruct) {\n    _inherits(IdxOptionsConstructor, _CoreOptionsConstruct);\n    var _super = _createSuper(IdxOptionsConstructor);\n    function IdxOptionsConstructor(options) {\n      var _this;\n      _classCallCheck(this, IdxOptionsConstructor);\n      _this = _super.call(this, options);\n      _this.flow = options.flow;\n      _this.activationToken = options.activationToken;\n      _this.recoveryToken = options.recoveryToken;\n      _this.idx = options.idx;\n      return _this;\n    }\n    return _createClass(IdxOptionsConstructor);\n  }(CoreOptionsConstructor);\n}\nexport { createIdxOptionsConstructor };","map":{"version":3,"names":["createIdxOptionsConstructor","CoreOptionsConstructor","createCoreOptionsConstructor","_CoreOptionsConstruct","_inherits","IdxOptionsConstructor","_super","_createSuper","options","_this","_classCallCheck","call","flow","activationToken","recoveryToken","idx","_createClass"],"sources":["/Users/aadar00/Documents/image-moderation-app/frontend/node_modules/@okta/lib/idx/options.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options';\nimport { FlowIdentifier } from './types/FlowIdentifier';\nimport { OktaAuthIdxOptions } from './types/options';\n\n\nexport function createIdxOptionsConstructor() {\n  const CoreOptionsConstructor = createCoreOptionsConstructor();\n  return class IdxOptionsConstructor\n    extends CoreOptionsConstructor \n    implements Required<OktaAuthIdxOptions>\n  {\n    flow: FlowIdentifier;\n    activationToken: string;\n    recoveryToken: string;\n  \n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator?: boolean;\n      exchangeCodeForTokens?: boolean;\n    };\n  \n    constructor(options: any) {\n      super(options);\n  \n      this.flow = options.flow;\n      this.activationToken = options.activationToken;\n      this.recoveryToken = options.recoveryToken;\n      this.idx = options.idx;\n    }\n  };\n  \n}\n"],"mappings":";;;;;;;;;;;;;;;;;SAiBgBA,2BAA2BA,CAAA;EACzC,IAAMC,sBAAsB,GAAGC,4BAA4B,EAAE;EAC7D,8BAAAC,qBAAA;IAAAC,SAAA,CAAAC,qBAAA,EAAAF,qBAAA;IAAA,IAAAG,MAAA,GAAAC,YAAA,CAAAF,qBAAA;IAcE,SAAAA,sBAAYG,OAAY;MAAA,IAAAC,KAAA;MAAAC,eAAA,OAAAL,qBAAA;MACtBI,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,OAAO;MAEbC,KAAA,CAAKG,IAAI,GAAGJ,OAAO,CAACI,IAAI;MACxBH,KAAA,CAAKI,eAAe,GAAGL,OAAO,CAACK,eAAe;MAC9CJ,KAAA,CAAKK,aAAa,GAAGN,OAAO,CAACM,aAAa;MAC1CL,KAAA,CAAKM,GAAG,GAAGP,OAAO,CAACO,GAAG;MAAC,OAAAN,KAAA;IACxB;IAAA,OAAAO,YAAA,CAAAX,qBAAA;EAAA,EApBOJ,sBAAsB;AAuBlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}